(()=>{"use strict";var e={d:(t,i)=>{for(var s in i)e.o(i,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:i[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{w:()=>st,c:()=>it});let t="",i="module";function s(...e){return`${t}.settings.${e.join(".")}`}function a(...e){return e=e.filter((e=>"string"==typeof e)),`${i}s/${t}/templates/${e.join("/")}`}function n(e){return game.settings.get(t,e)}function r(e,i){return game.settings.set(t,e,i)}function o(e){const i=e.name;e.scope=e.scope??"world",e.config=e.config??!1,e.config&&(e.name=s(i,"name"),e.hint=s(i,"hint")),Array.isArray(e.choices)&&(e.choices=e.choices.reduce(((e,t)=>(e[t]=s(i,"choices",t),e)),{})),game.settings.register(t,i,e)}function l(e,i,s){return e.getFlag(t,i)??s}function c(e){return e.getFlag("core","sourceId")}function u(...e){let[i,s]=e;return i=`${t}.${i}`,s?game.i18n.format(i,s):game.i18n.localize(i)}function d(e){return game.i18n.has(`${t}.${e}`,!1)}function m(e){return`${t}.${e}`}function p(e){const t=(...t)=>u(`${e}.${t[0]}`,t[1]);return Object.defineProperties(t,{warn:{value:(...t)=>y(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},info:{value:(...t)=>function(...e){const[t,i,s]=e;f(t,"info",i,s)}(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},error:{value:(...t)=>h(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},has:{value:t=>d(`${e}.${t}`),enumerable:!1,configurable:!1},path:{value:t=>m(`${e}.${t}`),enumerable:!1,configurable:!1},template:{value:(e,{hash:i})=>t(e,i),enumerable:!1,configurable:!1}}),t}function f(e,t,i,s){const a="string"==typeof t?t:"info",n="object"==typeof t?t:"object"==typeof i?i:void 0,r="boolean"==typeof t?t:"boolean"==typeof i?i:s??!1;ui.notifications.notify(u(e,n),a,{permanent:r})}function y(...e){const[t,i,s]=e;f(t,"warning",i,s)}function h(...e){const[t,i,s]=e;f(t,"error",i,s)}const g=new Map;g.set(-1,13),g.set(0,14),g.set(1,15),g.set(2,16),g.set(3,18),g.set(4,19),g.set(5,20),g.set(6,22),g.set(7,23),g.set(8,24),g.set(9,26),g.set(10,27),g.set(11,28),g.set(12,30),g.set(13,31),g.set(14,32),g.set(15,34),g.set(16,35),g.set(17,36),g.set(18,38),g.set(19,39),g.set(20,40),g.set(21,42),g.set(22,44),g.set(23,46),g.set(24,48),g.set(25,50);const b=new Map;function v(e,t){return t?`@UUID[${e}]{${t}}`:`@UUID[${e}]`}b.set("incredibly easy",-10),b.set("very easy",-5),b.set("easy",-2),b.set("normal",0),b.set("hard",2),b.set("very hard",5),b.set("incredibly hard",10),new Set(["arcane","divine","occult","primal"]);const w=[];const k={1:"RjuupS9xyXDLgyIr",2:"Y7UD64foDbDMV9sx",3:"ZmefGBXGJF3CFDbn",4:"QSQZJ5BC3DeHv153",5:"tjLvRWklAylFhBHQ",6:"4sGIy77COooxhQuC",7:"fomEZZ4MxVVK3uVu",8:"iPki3yuoucnj7bIt",9:"cFHomF3tty8Wi1e5",10:"o1XIHJ4MJyroAHfF"},S=String.raw`[\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,C=String.raw`[^\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,x=new RegExp(C,"gu"),O=String.raw`(?:${S})(?=${C})|(?:${C})(?=${S})`,P=String.raw`(?:${S})(?=${S})`,D=String.raw`\p{Lowercase_Letter}`,A=String.raw`\p{Uppercase_Letter}`,T=new RegExp(`(${D})(${A}${P})`,"gu"),E=/[^-\p{White_Space}\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]/gu,R=new RegExp(`${A}|(?:${O})${D}`,"gu");function _(e,{camel:t=null}={}){if("string"!=typeof e)return console.warn("Non-string argument passed to `sluggify`"),"";switch(t){case null:return e.replace(T,"$1-$2").toLowerCase().replace(/['â€™]/g,"").replace(x," ").trim().replace(/[-\s]+/g,"-");case"bactrian":{const t=_(e,{camel:"dromedary"});return t.charAt(0).toUpperCase()+t.slice(1)}case"dromedary":return e.replace(E,"").replace(/[-_]+/g," ").replace(R,((e,t)=>0===t?e.toLowerCase():e.toUpperCase())).replace(/\s+/g,"");default:throw Error("PF2e System | I don't think that's a real camel.")}}const F=["propertyRune1","propertyRune2","propertyRune3","propertyRune4"];new Set(["armor","backpack","book","consumable","equipment","treasure","weapon"]);const N={acr:"acrobatics",arc:"arcana",ath:"athletics",cra:"crafting",dec:"deception",dip:"diplomacy",itm:"intimidation",med:"medicine",nat:"nature",occ:"occultism",prf:"performance",rel:"religion",soc:"society",ste:"stealth",sur:"survival",thi:"thievery"},I=(Object.keys(N),Object.values(N)),L=["common","draconic","dwarven","elven","gnomish","goblin","halfling","jotun","orcish","sylvan","undercommon","ysoki","abyssal","adlet","aklo","akitonian","alghollthu","amurrun","anadi","ancient-osiriani","anugobu","arcadian","aquan","arboreal","auran","boggard","calda","caligni","celestial","cyclops","daemonic","destrachan","drooni","dziriak","ekujae","erutaki","formian","garundi","girtablilu","gnoll","goloma","grippli","hallit","hwan","iblydan","ignan","ikeshti","immolis","infernal","iruxi","jistkan","jyoti","kaava","kashrishi","kibwani","kitsune","kelish","lirgeni","mahwek","minaten","minkaian","mwangi","mzunu","nagaji","necril","ocotan","okaiyan","osiriani","protean","rasu","ratajin","razatlani","requian","russian","senzar","shadowtongue","shobhad","shisk","shoanti","shoony","skald","sphinx","strix","taldane","tekritanin","tengu","terran","thassilonian","tien","utopian","vanara","varisian","varki","vishkanyan","vudrani","wyrwood","xanmba","androffan","azlanti","grioth","kovintal","migo","munavri","samsaran","sasquatch","shae","yithian","druidic"];function j(e){return e?e[0].toUpperCase()+e.slice(1):""}function M(e,t){const i=[];if(e<=t)for(let s=e;s<=t;s++)i.push(s);else for(let s=e;s>=t;s--)i.push(s);return i}const G="max(1,floor(@actor.level/2))",W={get skillNames(){return I.slice()},skillLabel:e=>game.i18n.localize(CONFIG.PF2E.skillList[e]),createSkillRuleElement:({skill:e,value:t,mode:i="upgrade",predicate:s})=>{const a={key:"ActiveEffectLike",mode:i,path:`system.skills.${e}.rank`,value:t};return s&&s.length&&(a.predicate=s),a},createLoreSource:({name:e,rank:t})=>({type:"lore",img:"systems/pf2e/icons/default-icons/lore.svg",name:e,system:{proficient:{value:t}}}),get languageNames(){return L.slice()},languageLabel:e=>game.i18n.localize(CONFIG.PF2E.languages[e]),createLanguageRuleElement:({language:e,mode:t="add",predicate:i})=>{const s={key:"ActiveEffectLike",mode:t,path:"system.traits.languages.value",value:e};return i&&i.length&&(s.predicate=i),s},resistanceLabel:(e,t)=>{let i=game.i18n.localize(`PF2E.Trait${j(e)}`);return t&&(i+=` ${t}`),i},createResistanceRuleElement:({type:e,value:t,predicate:i})=>{"half"===t&&(t=G);const s={key:"Resistance",type:e,value:t};return i&&i.length&&(s.predicate=i),s},createFeatSource:async e=>{const t=(await fromUuid(e))?.toObject();if(!t)throw new Error(`An error occured while trying to create a feat source with uuid: ${e}`);return t},createSpellScrollSource:async({uuid:e,level:t})=>{const i=await async function(e,t,i=!1){const s=(await fromUuid(e))?.toObject();if(!s)return null;!1===t&&(t=s.system.level.value);const a=function(e){return`Compendium.pf2e.equipment-srd.${k[e]}`}(t);w[t]??=await fromUuid(a);const n=w[t]?.toObject();if(!n)return null;s.system.location.heightenedLevel=t,n.name=`Scroll of ${s.name} (Level ${t})`,n.system.temporary=i,n.system.spell=s,n.system.traits.value.push(...s.system.traditions.value);const r=s.flags.core?.sourceId;return r&&(n.system.description.value=`${v(r)}\n<hr />${n.system.description.value}`),n}(e,t??!1,!0);if(!i)throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${e}`);return i},createSpellSource:async e=>{const t=(await fromUuid(e))?.toObject();if(!t)throw new Error(`An error occured while trying to create a spell source with uuid: ${e}`);return t},get halfLevelString(){return G},getChoiSetRuleSelection:function(e,t){return e._source.system.rules.find((e=>"ChoiceSet"===e.key&&e.rollOption===t))?.selection},proficiencyLabel:e=>game.i18n.localize(CONFIG.PF2E.proficiencyLevels[e]),randomOption:async e=>{const t=e[(await new Roll(`1d${e.length}`).evaluate({async:!0})).total-1];return"string"==typeof t?t:t.value},halfLevelValue:e=>Math.max(1,Math.floor(e.level/2)),sequenceArray:M,damageLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponDamage[e]),weaponTraitLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponTraits[e]),weaponPropertyRunesLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[e]),hasFreePropertySlot:e=>{const t=e.system.runes.potency;return t>0&&e.system.runes.property.length<t},getFreePropertyRuneSlot:function(e){const t=e.system.potencyRune.value;if(null===t)return null;for(let i=0;i<t;i++){const t=F[i];if(!e.system[t].value)return t}return null}};function z(e,t,i={},s,a){const n={key:e,label:a,item:{uuid:t},rows:[{type:"drop",slug:"spell",filter:{type:"spell",search:i}}],process:async({addSpell:e,utils:t,fields:i,messages:a})=>{const n=i.spell.uuid,r=await t.createSpellSource(n),o=`${r.name} (Level ${s||r.system.level.value})`;e(r,s),a.add("spells",{uuid:n,label:o})}};return n}const U=(()=>{const e=z("ace","Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW",{category:["cantrip","spell"],level:4},4);return e.rows[0].filter.drop=e=>{const t=e.system.time.value;return!(t.includes("hour")||t.includes("min")&&parseInt(t)>10)||{error:m("interface.error.drop.wrongSpellTime"),data:{time:"10 min"}}},e})(),B=["first","second","third","fourth","fifth","sixth","seventh"];function q(e,t,i){const s={key:e,label:i,item:{uuid:t[0]},children:[{slug:"expert",uuid:t[1]},{slug:"master",uuid:t[2]}],rows:[V("first",1),V("second",2,8),V("third",3,void 0,"expert"),V("fourth",4,14,"expert"),V("fifth",5,16,"expert"),V("sixth",6,void 0,"master"),V("seventh",7,20,"master")],process:async({utils:e,fields:t,addItem:i,messages:s})=>{for(const a of Object.values(t)){const t=a.uuid,n=B.indexOf(a.row)+1,r=await e.createSpellScrollSource({uuid:t,level:n});i(r),s.add("scrolls",{uuid:t,label:r.name})}}};return s}function V(e,t,i,s){const a={type:"drop",slug:e,label:`PF2E.SpellLevel${t}`,filter:{type:"spell",search:{category:["spell"],level:t}}};return i&&(a.condition=({actor:e})=>e.level>=i),s&&(a.childPredicate=[s]),a}function H(e,t,i={},s){const a={key:e,label:s,item:{uuid:t},rows:[{type:"drop",slug:"feat",filter:{type:"feat",search:i}}],process:async({utils:e,fields:t,addFeat:i,messages:s})=>{const a=t.feat.uuid;i(await e.createFeatSource(a)),s.add("feats",{uuid:a})}};return a}const J={key:"flexibility",item:{uuid:"Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8"},children:[{slug:"improved",uuid:"Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX"}],rows:[Y("flexibility",8),Y("improved",14,"improved")],process:async({utils:e,fields:t,addFeat:i,messages:s,children:a})=>{const n=t.flexibility.uuid;if(i(await e.createFeatSource(n)),s.add("feats",{uuid:n}),a.improved){const n=t.improved.uuid;i(await e.createFeatSource(n),a.improved),s.add("feats",{uuid:n})}}};function Y(e,t,i){const s={type:"drop",label:`PF2E.Level${t}`,slug:e,filter:{type:"feat",search:{feattype:["class"],traits:["fighter"],level:t}}};return i&&(s.childPredicate=[i]),s}function Z(e,t,i){const s={key:e,label:i,item:{uuid:t},rows:[{type:"select",slug:"language",options:({actor:e,utils:t})=>{const i=e.system.traits.languages.value;return t.languageNames.filter((e=>!i.includes(e))).sort()},labelizer:({utils:e})=>e.languageLabel}],process:({addRule:e,utils:s,fields:a,messages:n})=>{const r=a.language.value;e(s.createLanguageRuleElement({language:r})),n.add("languages",{uuid:t,selected:s.languageLabel(r),label:i})}};return s}const Q="Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P",X={0:{die:"d4",traits:["finesse","agile"],usage:"held-in-one-hand"},1:{die:"d6",traits:["finesse"],usage:"held-in-one-hand"},2:{die:"d8",traits:[],usage:"held-in-one-hand"},3:{die:"d10",traits:["reach"],usage:"held-in-two-hands"}},K={slashing:"sword",piercing:"spear",bludgeoning:"club"},ee=["grapple","nonlethal","shove","trip","modular"],te=Object.keys(K),ie={key:"mindsmith",item:{uuid:"Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY"},children:[{slug:"weapon",uuid:Q},{slug:"mental",uuid:"Compendium.pf2e.feats-srd.PccekOihIbRWdDky"},{slug:"runic",uuid:"Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp"},{slug:"advanced",uuid:"Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD"}],rows:[{type:"alert",slug:"alert",message:()=>u("interface.alert.weapon"),fix:async function({actor:e}){const t=p("dialog.weapon");let i=t("flavor");for(const e of["0","1","2","3"])i+=`<label><input type="radio" name="type" value="${e}">${t(`option.${e}`)}</label>`;const s=await Dialog.wait({title:t("title"),content:i,buttons:{yes:{icon:'<i class="fas fa-save"></i>',label:t("accept"),callback:se},no:{icon:'<i class="fas fa-times"></i>',label:t("cancel"),callback:()=>null}},close:()=>null},{},{id:"pf2e-dailies-weapon",width:600});return!!s&&(await e.createEmbeddedDocuments("Item",[s]),!0)},childPredicate:[{not:"weapon"}]},{type:"select",slug:"smith",label:()=>u("label.mindsmith"),options:te,labelizer:({utils:e})=>e.damageLabel,childPredicate:["weapon"]},{type:"select",slug:"mental",label:()=>u("label.mentalforge"),options:ee,labelizer:({utils:e})=>e.weaponTraitLabel,childPredicate:["weapon","mental"]},{type:"select",slug:"runic",label:()=>u("label.runicmind"),options:["corrosive","disrupting","flaming","frost","shock","thundering"],labelizer:({utils:e})=>e.weaponPropertyRunesLabel,childPredicate:["weapon","runic",{not:"advanced"}],condition:({children:e,utils:t})=>t.hasFreePropertySlot(e.weapon)},{type:"select",slug:"advanced",label:()=>u("label.runicmind"),options:["anarchic","axiomatic","greaterCorrosive","greaterDisrupting","greaterFlaming","greaterFrost","greaterShock","greaterThundering","holy","unholy"],labelizer:({utils:e})=>e.weaponPropertyRunesLabel,childPredicate:["weapon","advanced"],condition:({children:e,utils:t})=>t.hasFreePropertySlot(e.weapon)}],process:({children:e,updateItem:t,fields:i,messages:s,item:a,utils:n})=>{const r=e.weapon;if(!r)return;s.addGroup("mindsmith");const o=i.smith.value;if(t({_id:r.id,"system.damage.damageType":o,"system.group":K[o]}),s.add("mindsmith",{selected:n.damageLabel(o),uuid:a.uuid,label:"mindsmith"}),e.mental){const a=i.mental.value,o=deepClone(r._source.system.traits?.value??[]);o.includes(a)||o.push(a),t({_id:r.id,"system.traits.value":o}),s.add("mindsmith",{selected:n.weaponTraitLabel(a),uuid:e.mental.uuid,label:"mentalforge"})}if((e.advanced||e.runic)&&n.hasFreePropertySlot(r)){const a=e.advanced??e.runic,o=n.getFreePropertyRuneSlot(r),l=(i.advanced??i.runic).value;r.system.runes.property.includes(l)||(t({_id:r.id,[`system.${o}.value`]:l,[`flags.${it}.runeSlot`]:o}),s.add("mindsmith",{selected:n.weaponPropertyRunesLabel(l),uuid:a.uuid,label:"runicmind"}))}},rest:({item:e,sourceId:t,updateItem:i})=>{if(t!==Q)return;let s=e._source.system.traits?.value??[];s=s.filter((e=>!ee.includes(e))),i({_id:e.id,"system.traits.value":s});const a=l(e,"runeSlot");a&&i({_id:e.id,[`system.${a}.value`]:null,[`flags.${it}.-=runeSlot`]:!0})}};async function se(e){const t=p("dialog.weapon"),i=e.find("[name=type]:checked").val();if(!i)return void t.warn("error.noSelection");const s=(await fromUuid(Q))?.toObject();if(!s)return void t.warn("error.missing");const a=X[i];return setProperty(s,"system.damage.die",a.die),setProperty(s,"system.traits.value",a.traits.slice()),setProperty(s,"system.usage.value",a.usage),s}const ae="Compendium.pf2e.equipment-srd.L9ZV076913otGtiB";function ne(e){return function(e,t,i){return function(e,t){return t?t.flatMap((t=>e.itemTypes[t])):e.items}(e,void 0).find(function(e){return Array.isArray(e)?t=>function(e,t){const i=c(e);return!!i&&t.includes(i)}(t,e):t=>c(t)===e}(t))}(e,ae)}function re(e,t,i,s,a,n){const r={key:e,label:a,item:{uuid:t},rows:[{type:n?"random":"select",slug:"resistance",options:i,labelizer:({utils:e})=>e.resistanceLabel}],process:async({utils:e,fields:r,actor:o,addRule:l,messages:c})=>{const u=n?await e.randomOption(i):r.resistance.value,d="number"==typeof s?s:"half"===s?e.halfLevelValue(o):o.level;l(e.createResistanceRuleElement({type:u,value:d})),c.add("resistances",{uuid:t,selected:e.resistanceLabel(u,d),label:a,random:n})}};return r}const oe={key:"savant",item:{uuid:"Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ"},prepare:({actor:e})=>{const{maxSlot:t,maxTradition:i}=function(e,t){let i=1,s=0;for(const t of e.spellcasting){if("pf2e-staves"in t.flags)continue;const e=t.system.slots;for(const t in e)e[t].max&&(i=Math.max(i,Number(t.slice(4))));"arcane"===t.tradition&&(s=Math.max(s,t.rank))}return{maxSlot:Math.min(i,10),maxTradition:s}}(e);return{first:{level:t-2,condition:!0},second:{level:t-3,condition:!0},third:{level:t-4,condition:i>=3&&t>=5},fourth:{level:t-5,condition:i>=4&&t>=6}}},rows:["first","second","third","fourth"].map((e=>({type:"drop",slug:e,label:({custom:t})=>`PF2E.SpellLevel${t[e].level}`,filter:{type:"spell",search:({custom:t})=>({category:["spell"],traditions:["arcane"],level:t[e].level})},condition:({custom:t})=>t[e].condition}))),process:async({utils:e,fields:t,custom:i,addItem:s,messages:a})=>{for(const n of Object.values(t)){const t=n.uuid,r=await e.createSpellScrollSource({uuid:t,level:i[n.row].level});s(r),a.add("scrolls",{uuid:t,label:r.name})}}};function le(e,t,i){const s={key:e,label:i,item:{uuid:t},rows:[{type:"combo",slug:"skill",options:({actor:e,utils:t})=>{const i=e.skills;return t.skillNames.filter((e=>i[e].rank<1))},labelizer:({utils:e})=>e.skillLabel}],process:({fields:e,addItem:s,addRule:a,utils:n,messages:r})=>{let o=e.skill.value;if("true"===e.skill.input)s(n.createLoreSource({name:o,rank:1}));else{const e=n.createSkillRuleElement({skill:o,value:1});o=n.skillLabel(o),a(e)}r.add("skills",{uuid:t,selected:o,label:i})}};return s}function ce(e,t,i){const s={key:e,label:i,item:{uuid:t},rows:[{type:"input",slug:"skill"}],process:({addItem:e,utils:s,fields:a,messages:n})=>{const r=a.skill.value;e(s.createLoreSource({name:r,rank:1})),n.add("skills",{uuid:t,selected:r,label:i})}};return s}const ue={key:"tome",item:{uuid:"Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e"},children:[{slug:"adept",uuid:"Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO",condition:de("adept")},{slug:"second",uuid:"Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5",condition:de("adept")},{slug:"intense",uuid:"Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC"},{slug:"paragon",uuid:"Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI",condition:de("paragon")}],prepare:({utils:e,actor:t,children:i})=>{const s=e.skillNames,a=t.level,n=t.skills,r={first:{options:[],rank:1},second:{options:[],rank:1}};if(i.paragon){const e=s.filter((e=>n[e].rank<4));r.first={rank:4,options:e},r.second={rank:4,options:e}}else if(i.intense||i.adept||i.second){const e=s.filter((e=>n[e].rank<3));if(a>=9)r.first={rank:3,options:e},r.second={rank:3,options:e};else{const t=s.filter((e=>n[e].rank<2));r.first={rank:2,options:t},r.second={rank:3,options:e}}}else if(a>=5){const e=s.filter((e=>n[e].rank<2));r.first={rank:2,options:e},r.second={rank:2,options:e}}else if(a>=3){const e=s.filter((e=>n[e].rank<1)),t=s.filter((e=>n[e].rank<2));r.first={rank:1,options:e},r.second={rank:2,options:t}}else{const e=s.filter((e=>n[e].rank<1));r.first={rank:1,options:e},r.second={rank:1,options:e}}return r},rows:["first","second"].map((e=>{const t={type:"combo",slug:e,label:({custom:t,utils:i})=>i.proficiencyLabel(t[e].rank),options:({custom:t})=>t[e].options,labelizer:({utils:e})=>e.skillLabel};return t})),process:({custom:e,fields:t,utils:i,messages:s,addItem:a,addRule:n})=>{s.addGroup("tome",65);for(const r of["first","second"]){const o=e[r].rank;let l=t[r].value;if("true"===t[r].input)a(i.createLoreSource({name:l,rank:o}));else{const e=i.createSkillRuleElement({skill:l,value:o});l=i.skillLabel(l),n(e)}s.add("tome",{label:i.proficiencyLabel(o),selected:l})}}};function de(e){return function({item:t,utils:i}){return"tome"===i.getChoiSetRuleSelection(t,e)}}const me=async function(){}.constructor,pe=ye([ue,le("longevity","Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ"),le("ageless","Compendium.pf2e.feats-srd.wylnETwIz32Au46y"),le("memories","Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62"),le("studies","Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0"),ce("study","Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW"),Z("linguistics","Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX"),Z("borts","Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g"),re("elementalist","Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS",["air","earth","fire","water"],"half","elementalist"),re("ganzi","Compendium.pf2e.heritages.3reGfXH0S82hM7Gp",["acid","electricity","sonic"],"half","ganzi",!0),H("metamagical","Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp",{feattype:["class"],traits:{selected:["metamagic","wizard"],conjunction:"and"},level:"half"}),J,oe,q("esoterica",["Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR","Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O","Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ"]),q("trickster",["Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C","Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf","Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1"]),U,ie],"dailies"),fe=new Map;function ye(e,t){const i=new Map;for(const s of e){const e=deepClone(s);try{const s=`${t}.${e.key}`;if(i.set(e.item.uuid,{daily:e,condition:e.item.condition}),e.key=s,e.children)for(let t=0;t<e.children.length;t++){const{uuid:s,condition:a}=e.children[t];i.set(s,{daily:e,index:t,condition:a})}}catch(i){h("error.unexpected"),console.error(i),console.error(`The error occured during data gathering of ${t}.${e.key}`)}}return i}async function he(){fe.clear();const e=[],t=n("customDailies");for(const{key:i,code:s}of t)try{const t=new me(s),i=await t();e.push(i)}catch(e){h("error.unexpected"),console.error(e),console.error(`The error occured during call of custom function for ${i}`)}for(const[e,t]of pe.entries())fe.set(e,t);const i=ye(e,"custom");for(const[e,t]of i.entries())fe.set(e,t)}function ge(e){const t={};for(const i of e.items){const s=c(i);if(!s||i.isOfType("physical")&&!1===i.isInvested)continue;const a=fe.get(s);if(!a)continue;const{daily:n,index:r,condition:o}=a;try{if("function"==typeof o&&!o({actor:e,item:i,utils:W}))continue;t[n.key]??=deepClone(n),void 0===r?t[n.key].item=i:t[n.key].children[r].item=i}catch(e){h("error.unexpected"),console.error(e),console.error(`The error occured during data gathering of ${n.key}`)}}return Object.values(t).filter((e=>e.item&&e.item instanceof Item))}function be(e){return fe.get(e)?.daily}function ve(){return game.packs.get("pf2e.familiar-abilities")}function we(e){return"object"==typeof e&&null!==e}class PredicatePF2e extends Array{isValid;constructor(...e){Array.isArray(e[0])?super(...e[0]):super(...e),this.isValid=PredicatePF2e.isValid(this)}static isValid(e){return this.isArray(e)}static isArray(e){return super.isArray(e)&&e.every((e=>StatementValidator.isStatement(e)))}static test(e=[],t){return e instanceof PredicatePF2e?e.test(t):new PredicatePF2e(...e).test(t)}static create(e,t=!1){return e instanceof PredicatePF2e?e.clone():Array.isArray(e)?new PredicatePF2e(e):we(e)?(t&&foundry.utils.logCompatibilityWarning("Predicate data must be an array",{mode:CONST.COMPATIBILITY_MODES.WARNING,since:"4.2.0",until:"4.5.0"}),new PredicatePF2e(function(e){const t=Object.keys(e);return 0===t.length?[]:1===t.length&&Array.isArray(e.all)?deepClone(e.all):1===t.length&&Array.isArray(e.any)&&1===e.any.length?deepClone(e.any):deepClone([e.all??[],Array.isArray(e.any)?{or:e.any}:[],Array.isArray(e.not)?1===e.not.length?{not:e.not[0]}:{nor:e.not}:[]].flat())}(e))):new PredicatePF2e}test(e){if(0===this.length)return!0;if(!this.isValid)return console.error("PF2e System | The provided predicate set is malformed."),!1;const t=e instanceof Set?e:new Set(e);return this.every((e=>this.isTrue(e,t)))}toObject(){return deepClone([...this])}clone(){return new PredicatePF2e(this.toObject())}isTrue(e,t){return"string"==typeof e&&t.has(e)||StatementValidator.isBinaryOp(e)&&this.testBinaryOp(e,t)||StatementValidator.isCompound(e)&&this.testCompound(e,t)}testBinaryOp(e,t){if("eq"in e)return t.has(`${e.eq[0]}:${e.eq[1]}`);{const i=Object.keys(e)[0],[s,a]=Object.values(e)[0],n=Array.from(t),r="number"!=typeof s&&Number.isNaN(Number(s))?n.flatMap((e=>e.startsWith(s)?Number(/:(-?\d+)$/.exec(e)?.[1]):[])):[Number(s)],o="number"!=typeof a&&Number.isNaN(Number(a))?n.flatMap((e=>e.startsWith(a)?Number(/:(-?\d+)$/.exec(e)?.[1]):[])):[Number(a)];switch(i){case"gt":return r.some((e=>o.every((t=>e>t))));case"gte":return r.some((e=>o.every((t=>e>=t))));case"lt":return r.some((e=>o.every((t=>e<t))));case"lte":return r.some((e=>o.every((t=>e<=t))));default:return console.warn("PF2e System | Malformed binary operation encounter"),!1}}}testCompound(e,t){return"and"in e&&e.and.every((e=>this.isTrue(e,t)))||"nand"in e&&!e.nand.every((e=>this.isTrue(e,t)))||"or"in e&&e.or.some((e=>this.isTrue(e,t)))||"nor"in e&&!e.nor.some((e=>this.isTrue(e,t)))||"not"in e&&!this.isTrue(e.not,t)||"if"in e&&!(this.isTrue(e.if,t)&&!this.isTrue(e.then,t))}}class StatementValidator{static isStatement(e){return e instanceof Object?this.isCompound(e)||this.isBinaryOp(e):"string"==typeof e&&this.isAtomic(e)}static isAtomic(e){return"string"==typeof e&&e.length>0||this.isBinaryOp(e)}static binaryOperators=new Set(["eq","gt","gte","lt","lte"]);static isBinaryOp(e){if(!we(e))return!1;const t=Object.entries(e);if(t.length>1)return!1;const[i,s]=t[0];return this.binaryOperators.has(i)&&Array.isArray(s)&&2===s.length&&"string"==typeof s[0]&&["string","number"].includes(typeof s[1])}static isCompound(e){return we(e)&&(this.isAnd(e)||this.isOr(e)||this.isNand(e)||this.isNor(e)||this.isNot(e)||this.isIf(e))}static isAnd(e){return 1===Object.keys(e).length&&Array.isArray(e.and)&&e.and.every((e=>this.isStatement(e)))}static isNand(e){return 1===Object.keys(e).length&&Array.isArray(e.nand)&&e.nand.every((e=>this.isStatement(e)))}static isOr(e){return 1===Object.keys(e).length&&Array.isArray(e.or)&&e.or.every((e=>this.isStatement(e)))}static isNor(e){return 1===Object.keys(e).length&&Array.isArray(e.nor)&&e.nor.every((e=>this.isStatement(e)))}static isNot(e){return 1===Object.keys(e).length&&!!e.not&&this.isStatement(e.not)}static isIf(e){return 2===Object.keys(e).length&&this.isStatement(e.if)&&this.isStatement(e.then)}}const ke={select:100,combo:80,random:60,alert:40,input:20,drop:0};async function Se({children:e=[],key:t,item:i,prepare:s,label:a,rows:n=[]}){const r=this.actor,o=this.saved[t]=l(r,t)??{},c=this.rows[t]={},m=this.children[t]=e.reduce(((e,{slug:t,item:i})=>(e[t]=i,e)),{}),p={actor:r,item:i,children:m,utils:W},f=this.custom[t]=s&&await s(p)||{},y=this.dailyArgs[t]={...p,custom:f};let h=await Ce(a,y);const g=h?`label.${h}`:t.startsWith("dailies.")?`label.${t.slice(8)}`:void 0;g&&d(g)&&(h=u(g));const b=this.predicate[t]=e.filter((e=>e.item)).map((e=>e.slug)),v={label:h?game.i18n.localize(h):i.name,rows:[]};for(const e of n){c[e.slug]=e;const{type:i,slug:s,childPredicate:a=[],condition:n,label:r,save:l}=e;if(a.length&&!PredicatePF2e.test(a,b))continue;if(n&&!await n(y))continue;const u=!1===l||"random"===i?void 0:o[s],d=await Ce(r,y),m=void 0===u?"":"object"!=typeof u?u:"name"in u?u.name:u.selected,p={label:d?game.i18n.localize(d):"",value:m,order:ke[i],data:{type:i,daily:t,row:s}};if(xe(e)||Oe(e)||Pe(e)){const t=await Ce(e.options,y)??[];if("combo"!==i&&!t.length)continue;const s="function"==typeof e.labelizer&&e.labelizer(y)||(e=>j(e));p.options=t.map((e=>"string"==typeof e?{value:e,label:s(e)}:e)),xe(e)&&(p.selected=p.value,p.data.input=u?.input??!0,!p.data.input&&t.includes(p.selected)&&(p.value=s(p.selected)))}else De(e)?p.data.uuid=u?.uuid??"":Ae(e)&&(p.value="function"==typeof e.message?await e.message(y):e.message);v.rows.push(p)}return v}async function Ce(e,t){return"function"==typeof e?await e(t):e}function xe(e){return"combo"===e.type}function Oe(e){return"select"===e.type}function Pe(e){return"random"===e.type}function De(e){return"drop"===e.type}function Ae(e){return"alert"===e.type}function Te(e,t,i){if(void 0===t)return i;if("number"==typeof t)return t;if("level"===t)return e.level;if("half"===t)return Math.max(1,Math.floor(e.level/2));const s=Number(t);return isNaN(s)?i:s}async function Ee(e){return{type:e.type,search:await("feat"===e.type?Ne(this.actor,e.search):Fe(this.actor,e.search)),drop:e.drop}}function Re(e,t){e?.length&&(t.selected=e,t.isExpanded=!0,e.forEach((e=>t.options[e].selected=!0)))}function _e(e,t){const i=$e(e);i?.selected.length&&(t.conjunction=i.conjunction,t.selected=i.selected)}function $e(e){if(!e)return;const t=Array.isArray(e)?e:e.selected;return t?.length?{selected:t.map((e=>"string"==typeof e?{value:e}:e)),conjunction:!Array.isArray(e)&&e.conjunction||"and"}:void 0}async function Fe(e,t){const i=await game.pf2e.compendiumBrowser.tabs.spell.getFilterData();Re(t.category,i.checkboxes.category),Re(t.school,i.checkboxes.school),Re(t.traditions,i.checkboxes.traditions),Re(t.rarity,i.checkboxes.rarity),Re(t.source,i.checkboxes.source),_e(t.traits,i.multiselects.traits);const s=Ie(e,t.level);return s?.length&&Re(s,i.checkboxes.level),i}async function Ne(e,t){const i=await game.pf2e.compendiumBrowser.tabs.feat.getFilterData();Re(t.feattype,i.checkboxes.feattype),Re(t.skills,i.checkboxes.skills),Re(t.rarity,i.checkboxes.rarity),Re(t.source,i.checkboxes.source),_e(t.traits,i.multiselects.traits);const s=Le(e,t.level);return s&&(i.sliders.level.values.min=s.min,i.sliders.level.values.max=s.max,i.sliders.level.isExpanded=!0),i}function Ie(e,t){if(Array.isArray(t))return t;const i=Te(e,t);return i?M(1,i):void 0}function Le(e,t){if(void 0!==t)return"object"==typeof t?{min:Te(e,t.min,0),max:Te(e,t.min,20)}:{min:0,max:Te(e,t,20)}}const je=p("interface.error.drop");async function Me(e,t,i){if(!e.isOfType("feat"))return je("notFeat");const{search:s,drop:a}=i;if(s.feattype?.length&&!s.feattype.includes(e.featType))return je.warn("wrongType",{types:We("featTypes",s.feattype)});if(s.traits){const t=$e(s.traits);if(t?.selected.length){const i="or"===t.conjunction?"some":"every";if(!t.selected[i]((t=>Number(t.not??!1)-Number(e.traits.has(t.value)))))return je.warn("wrongTraits")}}if(s.skills?.length){const t=function(){const e=CONFIG.PF2E.skillList;return Object.entries(e).reduce(((e,[t,i])=>({...e,[t]:game.i18n.localize(i).toLocaleLowerCase(game.i18n.lang)})),{})}(),i=e.system.prerequisites.value.map((e=>e.value.toLocaleLowerCase()));if(!s.skills.some((e=>i.some((i=>i.includes(e)||i.includes(t[e]))))))return je.warn("wrongSkill",{skills:We("skillList",s.skills)})}if(s.rarity?.length&&!s.rarity.includes(e.system.traits.rarity))return je.warn("wrongRarity",{rarities:We("rarityTraits",s.rarity)});if(s.source?.length&&!s.source.includes(_(e.system.source.value)))return je.warn("wrongSource",{sources:s.source.join(", ")});const n=Le(this.actor,s.level);if(n){const t=e.level;if(t<n.min)return je.warn("wrongLevelLow",{level:`min: ${n.min}`});if(t>n.max)return je.warn("wrongLevelHigh",{level:`max: ${n.max}`})}if(a){const i=this.dailyArgs[t.dataset.daily];if(i){const t=await a(e,i);if("object"==typeof t)return t.data?game.i18n.format(t.error,t.data):game.i18n.localize(t.error);if(!1===t)return je.warn("wrongCustom")}}ze(e,t)}async function Ge(e,t,i){if(!e.isOfType("spell"))return je("notSpell");const{search:s,drop:a}=i;if(s.category?.length){const t=s.category.map((e=>game.i18n.localize("cantrip"===e?"PF2E.SpellCantripLabel":CONFIG.PF2E.spellCategories[e]))).join(", ");if(e.isCantrip&&!s.category.includes("cantrip")||e.isFocusSpell&&!s.category.includes("focus")||e.isRitual&&!s.category.includes("ritual")||!e.isCantrip&&!e.isFocusSpell&&!e.isRitual&&!s.category.includes("spell"))return je.warn("wrongCategory",{categories:t})}if(s.traits){const t=$e(s.traits);if(t?.selected.length){const i="or"===t.conjunction?"some":"every";if(!t.selected[i]((t=>Number(t.not??!1)-Number(e.traits.has(t.value)))))return je.warn("wrongTraits")}}if(s.traditions?.length&&!s.traditions.some((t=>e.traditions.has(t))))return je.warn("wrongTradition",{traditions:We("magicTraditions",s.traditions)});const n=Ie(this.actor,s.level);if(n?.length&&!n.includes(e.level))return je.warn("wrongLevel",{levels:n.join(", ")});if(s.school?.length&&!s.school.includes(e.school))return je.warn("wrongSchool",{schools:We("magicSchools",s.school)});if(s.rarity?.length&&!s.rarity.includes(e.system.traits.rarity))return je.warn("wrongRarity",{rarities:We("rarityTraits",s.rarity)});if(s.source?.length&&!s.source.includes(_(e.system.source.value)))return je.warn("wrongSource",{sources:s.source.join(", ")});if(a){const i=this.dailyArgs[t.dataset.daily];if(i){const t=await a(e,i);if("object"==typeof t)return t.data?ui.notifications.warn(game.i18n.format(t.error,t.data)):ui.notifications.warn(game.i18n.localize(t.error));if(!1===t)return je.warn("wrongCustom")}}ze(e,t)}function We(e,t){return t.map((t=>game.i18n.localize(CONFIG.PF2E[e][t]))).join(", ")}function ze(e,t){t.value=e.name,t.dataset.uuid=e.uuid,t.nextElementSibling.nextElementSibling.classList.remove("disabled")}async function Ue(){const e=this.actor,t=this.dailies,i=Be.call(this),s=[],a=new Map,n=[],r={},o=p("message");let c=!1,m="";const f=e=>{const t=e.id,i=a.get(t);if(i)return i;const s=deepClone(e._source.system.rules);for(let e=s.length-1;e>=0;e--)it in s[e]&&s.splice(e,1);return a.set(t,s),s},y={languages:{order:80,messages:[]},skills:{order:70,messages:[]},resistances:{order:60,messages:[]},feats:{order:50,messages:[]},spells:{order:40,messages:[]},scrolls:{order:30,messages:[]}},g={add:(e,t)=>{y[e]??={order:0,messages:[]},y[e].messages.push(t)},addGroup:(e,t=1,i)=>{y[e]??={label:i,order:t,messages:[]}}};if(e.familiar&&i["dailies.familiar"]){const t=e.familiar,s=ve(),a=[],n=t.itemTypes.effect.map((e=>e.id));n.length&&t.deleteEmbeddedDocuments("Item",n),g.addGroup("familiar",20);for(const e of Object.values(i["dailies.familiar"])){const t=e.value,i=t.includes("."),n=await(i?fromUuid(t):s.getDocument(t));if(!n||!n.isOfType("effect"))continue;const r=n.toObject();r&&(a.push(r),g.add("familiar",{uuid:i?t:(b=t,`Compendium.pf2e.familiar-abilities.${b}`)}))}a.length&&t.createEmbeddedDocuments("Item",a)}var b;if("true"===i["dailies.rations"]?.rations.value){const t=ne(e);if(t?.uses.value){const e=t.quantity,{value:i,max:s}=t.uses;i<=1?e<=1?t.delete():n.push({_id:t.id,"system.quantity":Math.max(t.quantity-1,0),"system.charges.value":s}):n.push({_id:t.id,"system.charges.value":Math.max(i-1,0)});const a=(e-1)*s+i,r=a<=1?function(e){return`<span style="background: #DDD;\n    padding: 1px 4px;\n    border: 1px solid var(--color-border-dark-tertiary);\n    border-radius: 2px;\n    white-space: nowrap;\n    word-break: break-all;">${e}</span>`}(t.name):v(t.uuid);m+=a<=1?o("rations.last",{name:r}):o(a<=3?"rations.almost":"rations.used",{name:r,nb:a-1})}}for(const{item:e,key:a,process:r}of t){if(!i[a])continue;const t=this.dailyArgs[a];try{await r({...t,fields:i[a],messages:g,addItem:e=>s.push(e),updateItem:e=>n.push(e),addRule:(t,i)=>f(i??e).push(t),addFeat:(t,i)=>{if(e.isOfType("feat")){const s=(i??e).id;setProperty(t,"flags.pf2e.grantedBy",{id:s,onDelete:"cascade"}),setProperty(t,`flags.${it}.grantedBy`,s)}s.push(t)},addSpell:(e,t)=>{setProperty(e,`flags.${it}.entry`,{level:t}),s.push(e),c=!0}})}catch(e){h("error.unexpected"),console.error(e),console.error(`The error occured during processing of ${a}`)}}for(const[e,t]of Object.entries(i)){const i=this.rows[e];if(i)for(const{row:s,type:a,input:n,value:o,uuid:l}of Object.values(t)){if("random"===a||!1===i[s]?.save)continue;(r[e]??={})[s]="combo"===a?{input:"true"===n,selected:o}:"drop"===a?{uuid:l,name:o}:o}}for(const[e,t]of a)t.forEach((e=>e[it]=!0)),n.push({_id:e,"system.rules":t});if(c){const t={type:"spellcastingEntry",name:u("spellEntry.name"),system:{prepared:{value:"innate"},showSlotlessLevels:{value:!1},showUnpreparedSpells:{value:!1},proficiency:{value:1,slug:e.classDC?.slug||e.class?.slug||void 0}}};s.push(t)}for(const e of s)!0===getProperty(e,"system.temporary")||setProperty(e,`flags.${it}.temporary`,!0);if(s.length){const t=await e.createEmbeddedDocuments("Item",s);for(const e of t)if(e.isOfType("feat")){const t=l(e,"grantedBy");if(t){const i=`flags.pf2e.itemGrants.${_(e.name,{camel:"dromedary"})}`;n.push({_id:t,[i]:{id:e.id,onDelete:"detach"}})}}else if(e.isOfType("spellcastingEntry")){const i=t.filter((e=>e.isOfType("spell")&&l(e,"entry")));for(const t of i){const{level:i}=l(t,"entry"),s={_id:t.id,"system.location.value":e.id};void 0!==i&&(s["system.location.heightenedLevel"]=i),n.push(s)}}}await e.update({[`flags.${it}`]:{...expandObject(r),rested:!1}}),n.length&&await e.updateEmbeddedDocuments("Item",n),m=function(e,t){const i=p("message"),s=Object.entries(e).map((([e,t])=>(t.label??=i.has(e)?i(e):i("gained",{type:e}),t)));s.sort(((e,t)=>t.order-e.order));for(const{label:e,messages:i}of s)if(i.length){t&&(t+="<hr />"),e&&(t+=`<p><strong>${e}</strong></p>`);for(let{uuid:e,selected:s,label:a,random:n}of i){const i=`label.${a}`;a=a&&d(i)?u(i):a||"",t+="<p>",t+=e?`${v(e,a)}`:`<strong>${a}</strong>`,s&&(t+=` <span>${s}</span>`),n&&(t+=' <i class="fa-solid fa-dice-d20"></i>'),t+="</p>"}}return t}(y,m),m=m?`${o("changes")}<hr />${m}`:o("noChanges"),ChatMessage.create({content:m,speaker:ChatMessage.getSpeaker({actor:e})})}function Be(){const e=this.element.find(".window-content .content").find("input:not(.alert), select[data-type]").toArray(),t={};for(const i of e){const e={...i.dataset,value:i.value};if("combo"===e.type&&"false"===e.input){const t=i.previousElementSibling;e.value=t.value}t[e.daily]??={},t[e.daily][e.row]=e}return t}const qe=p("interface");class DailiesInterface extends Application{_actor;_randomInterval;_dailies=[];_dailyArgs={};_saved={};_children={};_custom={};_predicate={};_rows={};constructor(e,t){super(t),this._actor=e}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-dailies-interface",title:qe("title"),template:a("interface.hbs"),height:"auto",submitOnClose:!1,submitOnChange:!1,dragDrop:[{dropSelector:'[data-droppable="true"]'}]})}get actor(){return this._actor}get dailies(){return this._dailies}get dailyArgs(){return this._dailyArgs}get saved(){return this._saved}get children(){return this._children}get custom(){return this._custom}get predicate(){return this._predicate}get rows(){return this._rows}async getData(e){const t=[],i=this._actor;if(this._dailies=ge(i),i.familiar){const e="dailies.familiar",s=p("label"),a=i.attributes.familiarAbilities.value,r=ve(),o=l(i,e)??{},c={label:s("familiar"),rows:[]},u=r.index.map((({_id:e,name:t})=>({value:e,label:t}))),d=n("familiar").split(",");for(let e of d){e=e.trim();const t=await fromUuid(e);t&&t.isOfType("effect")&&u.push({value:e,label:t.name})}u.sort(((e,t)=>e.label<t.label?-1:t.label<e.label?1:0));for(let t=0;t<a;t++)c.rows.push({label:s("ability",{nb:t+1}),value:o[`${t}`]??"",order:100,options:u,data:{type:"select",daily:e,row:t.toString()}});c.rows.length&&(this._rows[e]=c.rows.reduce(((e,{data:t})=>(e[t.row]={save:!0},e)),{}),t.push(c))}const s=ne(i);if(s?.uses.value){const e="dailies.rations",i="rations",{value:a,max:n}=s.uses,r=(s.quantity-1)*n+a,o=r<=1,l=[{value:"false",label:qe("rations.no")},{value:"true",label:o?qe("rations.last"):qe("rations.yes",{nb:r})}];t.push({label:s.name,rows:[{label:"",order:200,value:"false",options:l,data:{type:"select",daily:e,row:i}}]}),this._rows[e]={[i]:{save:!1}}}for(const e of this._dailies)try{const i=await Se.call(this,e);t.push(i)}catch(t){qe.error("error.unexpected"),console.error(t),console.error(`The error occured during templating of ${e.key}`)}const a=[],r=[];for(const e of t)e.rows.length>1?r.push(e):e.rows.length&&a.push(e);return a.sort(((e,t)=>t.rows[0].order-e.rows[0].order)),r.sort(((e,t)=>e.rows.length-t.rows.length)),mergeObject(super.getData(e),{i18n:qe,dump:({value:e,placeholder:t,data:i})=>{let s="";return e&&(s+=` value="${e}"`),t&&(s+=` placeholder="${t}"`),Object.entries(i).forEach((([e,t])=>s+=` data-${e}="${t}"`)),s&&(s+=" "),s},rows:a,groups:r})}render(e,t){return this._randomInterval&&clearInterval(this._randomInterval),this.element.find("select.random")&&(this._randomInterval=setInterval((()=>{this.element.find("select.random").each(((e,t)=>{t.selectedIndex=(t.selectedIndex+1)%t.options.length}))}),2e3)),super.render(e,t)}close(e){return this._randomInterval&&clearInterval(this._randomInterval),super.close(e)}activateListeners(e){super.activateListeners(e),e.find("[data-action=clear]").on("click",this.#e.bind(this)),e.find("[data-action=accept]").on("click",this.#t.bind(this)),e.find("[data-action=cancel]").on("click",this.#i.bind(this)),e.find(".combo select").on("change",this.#s.bind(this)),e.find(".combo input").on("change",this.#a.bind(this)),e.find("[data-action=search]").on("click",this.#n.bind(this)),e.find("[data-action=alert]").on("click",this.#r.bind(this))}async _onDrop(e){const t=p("interface.error.drop");let i=e.target;i instanceof HTMLLabelElement&&(i=i.nextElementSibling);try{const s=e.dataTransfer?.getData("text/plain"),a=JSON.parse(s);if(!a||"Item"!==a.type||"string"!=typeof a.uuid)return t.warn("wrongDataType");const n=await fromUuid(a.uuid);if(!n)return t.warn("wrongDataType");const r=await this.#o(i);if(!r)return ze(n,i);"feat"===r.type?Me.call(this,n,i,r):"spell"===r.type?Ge.call(this,n,i,r):ze(n,i)}catch(e){t.error("error.unexpected"),console.error(e),console.error("The error occured during _onDrop")}}async#r(e){e.preventDefault(),this.#l();const t=e.currentTarget.dataset,i=this.rows[t.daily][t.row],s=this.dailyArgs[t.daily];let a;try{a=await i.fix(s)}catch(e){qe.error("error.unexpected"),console.error(e),console.error(`The error occured during an alert fix of '${t.daily}'`)}this.#c(),a&&this.render()}async#n(e){e.preventDefault();const t=await this.#o(e.currentTarget,!0);t?game.pf2e.compendiumBrowser.openTab(t.type,t.search):game.pf2e.compendiumBrowser.render(!0)}async#o(e,t){const{daily:i,row:s}=e.dataset,a=this.rows[i]?.[s]?.filter,n=this.dailyArgs[i];if(n&&a)return"function"==typeof a.search&&(a.search=await a.search(n)),t?Ee.call(this,a):a}#s(e){const t=e.currentTarget,i=t.nextElementSibling;i.dataset.input="false",i.value=t.options[t.selectedIndex].text}#a(e){const t=e.currentTarget,i=t.previousElementSibling,s=t.value.toLowerCase(),a=Array.from(i.options).map((e=>e.value)).indexOf(s);-1!==a?(i.value=s,t.value=i.options[a].text,t.dataset.input="false"):(i.value="",t.dataset.input="true")}#l(){this.element.addClass("disabled")}#c(){this.element.removeClass("disabled")}#u(){const e=[],t=this.element.find("input").filter(((e,t)=>!t.value)),i=this.element.find("input.alert");return t.length&&e.push("error.empty"),i.length&&e.push("error.unattended"),e.forEach((e=>qe.warn(e))),!e.length}async#t(e){e.preventDefault(),this.#u()&&(this.#l(),await Ue.call(this),this.close())}#e(e){e.preventDefault();const t=$(e.currentTarget),i=t.prevAll("input").first();i.val(""),i.attr("value",""),i.attr("data-uuid",""),t.addClass("disabled")}#i(e){e.preventDefault(),this.close()}}function Ve(e){return game.modules.get(e)}const He=["/** @typedef {typeof ROWS[number]} TomeRow */","/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */","/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */","/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */","","const ROWS = /** @type {const} */ (['first', 'second'])","","/** @param {'adept' | 'paragon'} option */","function createChildCondition(option) {","    /** @type { BaseDailyConditionFunction<TomeGenerics>} */","    const condition = ({ item, utils }) => {","        return utils.getChoiSetRuleSelection(item, option) === 'tome'","    }","    return condition","}","","/** @type {Daily<TomeGenerics>} */","const thaumaturgeTome = {","    key: 'tome',","    item: {","        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome","    },","    children: [","        {","            slug: 'adept',","            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept","            condition: createChildCondition('adept'),","        },","        {","            slug: 'second',","            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept","            condition: createChildCondition('adept'),","        },","        {","            slug: 'intense',","            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement","        },","        {","            slug: 'paragon',","            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon","            condition: createChildCondition('paragon'),","        },","    ],","    prepare: ({ utils, actor, children }) => {","        const skillNames = utils.skillNames","        const actorLevel = actor.level","        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)","","        /** @type {TomeCustom} */","        const custom = {","            first: { options: [], rank: 1 },","            second: { options: [], rank: 1 },","        }","","        // Implement Paragon","        if (children.paragon) {","            const skills = skillNames.filter(x => actorSkills[x].rank < 4)","            custom.first = { rank: 4, options: skills }","            custom.second = { rank: 4, options: skills }","        }","        // Intense Implement or Second Adept or Implement Adept","        else if (children.intense || children.adept || children.second) {","            const masters = skillNames.filter(x => actorSkills[x].rank < 3)","","            if (actorLevel >= 9) {","                custom.first = { rank: 3, options: masters }","                custom.second = { rank: 3, options: masters }","            } else {","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 2, options: experts }","                custom.second = { rank: 3, options: masters }","            }","        }","        // Tome","        else {","            if (actorLevel >= 5) {","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 2, options: experts }","                custom.second = { rank: 2, options: experts }","            } else if (actorLevel >= 3) {","                const trained = skillNames.filter(x => actorSkills[x].rank < 1)","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 1, options: trained }","                custom.second = { rank: 2, options: experts }","            } else {","                const trained = skillNames.filter(x => actorSkills[x].rank < 1)","                custom.first = { rank: 1, options: trained }","                custom.second = { rank: 1, options: trained }","            }","        }","","        return custom","    },","    rows: ROWS.map(rowName => {","        /** @type {DailyRowCombo<TomeGenerics>} */","        const row = {","            type: 'combo',","            slug: rowName,","            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),","            options: ({ custom }) => custom[rowName].options,","            labelizer: ({ utils }) => utils.skillLabel,","        }","        return row","    }),","    process: ({ custom, fields, utils, messages, addItem, addRule }) => {","        messages.addGroup('tome', 65)","","        for (const rowName of ROWS) {","            const rank = custom[rowName].rank","            let value = fields[rowName].value","","            if (fields[rowName].input === 'true') {","                const source = utils.createLoreSource({ name: value, rank })","                addItem(source)","            } else {","                const source = utils.createSkillRuleElement({ skill: value, value: rank })","                value = utils.skillLabel(value)","                addRule(source)","            }","","            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })","        }","    },","}","","return thaumaturgeTome"].join("\n"),Je=["/** @typedef {'flexibility' | 'improved'} FlexibilityRow */","/** @typedef {'improved'} FlexibilityChild */","/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */","","/**"," * @param {FlexibilityRow} slug"," * @param {number} level"," * @param {FlexibilityChild} [child]"," */","function createRow(slug, level, child) {","    /** @type {DailyRowDrop<FlexibilityGenerics>} */","    const row = {","        type: 'drop',","        label: `PF2E.Level${level}`,","        slug,","        filter: {","            type: 'feat',","            search: {","                feattype: ['class'],","                traits: {","                    values: ['fighter'],","                },","                level,","            },","        },","    }","    if (child) row.childPredicate = [child]","    return row","}","","/** @type {Daily<FlexibilityGenerics>} */","const combatFlexibility = {","    key: 'flexibility',","    item: {","        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility","    },","    children: [","        {","            slug: 'improved',","            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility","        },","    ],","    rows: [","        createRow('flexibility', 8), //","        createRow('improved', 14, 'improved'),","    ],","    process: async ({ utils, fields, addFeat, messages, children }) => {","        const uuid = fields.flexibility.uuid","        const source = await utils.createFeatSource(uuid)","        addFeat(source)","        messages.add('feats', { uuid })","","        if (children.improved) {","            const uuid = fields.improved.uuid","            const source = await utils.createFeatSource(uuid)","            addFeat(source, children.improved)","            messages.add('feats', { uuid })","        }","    },","}","","return combatFlexibility"].join("\n"),Ye=["/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */","/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */","/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */","","const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])","","/**"," * @param {CharacterPF2e} actor"," * @param {MagicTradition} tradition"," */","function getSpellcastingTraditionDetails(actor, tradition) {","    let maxSlot = 1","    let maxTradition = 0","","    for (const entry of actor.spellcasting) {","        if ('pf2e-staves' in entry.flags) continue // we skip staff entries","","        const slots = entry.system.slots","        for (const key in slots) {","            const slot = slots[key]","            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))","        }","","        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)","    }","","    return { maxSlot: Math.min(maxSlot, 10), maxTradition }","}","","/** @type {Daily<SavantGenerics>} */","const scrollSavant = {","    key: 'savant',","    item: {","        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant","    },","    prepare: ({ actor }) => {","        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')","        return {","            first: { level: maxSlot - 2, condition: true },","            second: { level: maxSlot - 3, condition: true },","            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },","            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },","        }","    },","    rows: ROWS.map(rowName => {","        /** @type {DailyRowDrop<SavantGenerics>} */","        const row = {","            type: 'drop',","            slug: rowName,","            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,","            filter: {","                type: 'spell',","                search: ({ custom }) => ({","                    category: ['spell'],","                    traditions: ['arcane'],","                    level: custom[rowName].level,","                }),","            },","            condition: ({ custom }) => custom[rowName].condition,","        }","        return row","    }),","    process: async ({ utils, fields, custom, addItem, messages }) => {","        for (const field of Object.values(fields)) {","            const uuid = field.uuid","            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })","            addItem(source)","            messages.add('scrolls', { uuid, label: source.name })","        }","    },","}","","return scrollSavant"].join("\n"),Ze=["/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */","/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */","/** @typedef {[MindRow, {}, MindChild]} MindGenerics */","","const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'","","const WEAPON_BASE_TYPES = {","    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },","    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },","    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },","    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },","}","","const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {","    slashing: 'sword',","    piercing: 'spear',","    bludgeoning: 'club',","}","","const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']","","const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)","","const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']","","const WEAPON_GREATER_RUNES = [","    'anarchic',","    'axiomatic',","    'greaterCorrosive',","    'greaterDisrupting',","    'greaterFlaming',","    'greaterFrost',","    'greaterShock',","    'greaterThundering',","    'holy',","    'unholy',","]","","/** @type {Daily<MindGenerics>} */","const mindSmith = {","    key: 'mindsmith',","    item: {","        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication","    },","    children: [","        {","            slug: 'weapon',","            uuid: MIND_WEAPON_UUID, // Mind Weapon","        },","        {","            slug: 'mental',","            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge","        },","        {","            slug: 'runic',","            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing","        },","        {","            slug: 'advanced',","            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing","        },","    ],","    rows: [","        {","            type: 'alert',","            slug: 'alert',","            message: 'Missing Mind Weapon',","            fix,","            childPredicate: [{ not: 'weapon' }],","        },","        {","            type: 'select',","            slug: 'smith',","            label: 'Mind Smith',","            options: WEAPON_DAMAGE_TYPES,","            labelizer: ({ utils }) => utils.damageLabel,","            childPredicate: ['weapon'],","        },","        {","            type: 'select',","            slug: 'mental',","            label: 'Mental Forge',","            options: WEAPON_TRAITS,","            labelizer: ({ utils }) => utils.weaponTraitLabel,","            childPredicate: ['weapon', 'mental'],","        },","        {","            type: 'select',","            slug: 'runic',","            label: 'Runic Smithing',","            options: WEAPON_RUNES,","            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,","            childPredicate: ['weapon', 'runic', { not: 'advanced' }],","            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),","        },","        {","            type: 'select',","            slug: 'advanced',","            label: 'Runic Smithing',","            options: WEAPON_GREATER_RUNES,","            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,","            childPredicate: ['weapon', 'advanced'],","            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),","        },","    ],","    process: ({ children, updateItem, fields, messages, item, utils }) => {","        const weapon = children.weapon","        if (!weapon) return","","        messages.addGroup('mindsmith')","","        const selected = /** @type {WeaponDamage} */ fields.smith.value","        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })","        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })","","        if (children.mental) {","            const selected = fields.mental.value","            const traits = deepClone(weapon._source.system.traits?.value ?? [])","            if (!traits.includes(selected)) traits.push(selected)","            updateItem({ _id: weapon.id, 'system.traits.value': traits })","            messages.add('mindsmith', {","                selected: utils.weaponTraitLabel(selected),","                uuid: children.mental.uuid,","                label: 'mentalforge',","            })","        }","","        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {","            const child = children.advanced ?? children.runic","            const freeSlot = utils.getFreePropertyRuneSlot(weapon)","            const field = fields.advanced ?? fields.runic","            const selected = field.value","","            if (!weapon.system.runes.property.includes(selected)) {","                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })","                messages.add('mindsmith', {","                    selected: utils.weaponPropertyRunesLabel(selected),","                    uuid: child.uuid,","                    label: 'runicmind',","                })","            }","        }","    },","    rest: ({ item, sourceId, updateItem }) => {","        if (sourceId !== MIND_WEAPON_UUID) return","","        let traits = item._source.system.traits?.value ?? []","        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))","        updateItem({ _id: item.id, 'system.traits.value': traits })","","        const runeSlot = item.getFlag('world', 'runeSlot')","        if (runeSlot) {","            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })","        }","    },","}","","const OPTIONS = {","    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',","    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',","    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',","    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',","}","","/** * @param {DailyValueArgs<MindGenerics>} args */","async function fix({ actor }) {","    let content =","        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`","","    for (const [key, label] of Object.entries(OPTIONS)) {","        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`","    }","","    const weapon = await Dialog.wait(","        {","            title: 'Mind Weapon',","            content,","            buttons: {","                yes: {","                    icon: `<i class='fas fa-save'></i>`,","                    label: 'Accept',","                    callback: onWeaponSelected,","                },","                no: {","                    icon: `<i class='fas fa-times'></i>`,","                    label: 'Cancel',","                    callback: () => null,","                },","            },","            close: () => null,","        },","        {},","        { id: 'pf2e-dailies-weapon', width: 600 }","    )","","    if (weapon) {","        await actor.createEmbeddedDocuments('Item', [weapon])","        return true","    }","","    return false","}","","/** @params {JQuery} html */","async function onWeaponSelected(html) {","    const selection = html.find('[name=type]:checked').val()","    if (!selection) {","        ui.notifications.warn('You must select one weapon base type.')","        return","    }","","    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()","    if (!weapon) {","        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)","        return","    }","","    const stats = WEAPON_BASE_TYPES[selection]","","    setProperty(weapon, 'system.damage.die', stats.die)","    setProperty(weapon, 'system.traits.value', stats.traits.slice())","    setProperty(weapon, 'system.usage.value', stats.usage)","","    return weapon","}","","return mindSmith"].join("\n"),Qe=p("customs"),Xe=["default","trainedSkill","trainedLore","language","resistance","feat","spell"],Ke=["flexibility","savant","tome","mind"];class DailyCustoms extends FormApplication{_selectedTemplate="default";_selectedDaily="";_monaco=null;constructor(){super()}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-dailies-customs",title:Qe("title"),template:a("customs.hbs"),submitOnChange:!1,submitOnClose:!1,closeOnSubmit:!1,scrollY:[".left .list"]})}async _updateObject(e,t){}async getData(e){const t=n("customDailies"),i=t.find((e=>e.key===this._selectedDaily))?.code,s=this._selectedTemplate,a=Ve("pf2e-dailies-ext"),r=a?.active&&isNewerVersion(st,a.version)?{version:st}:"";return mergeObject(super.getData(e),{i18n:Qe,template:s,templates:Xe,daily:this._selectedDaily,code:i,customs:t,examples:Ke,isExample:Ke.includes(s),monaco:a?.active,newVersion:r})}activateListeners(e){super.activateListeners(e),this._monaco?.dispose();const t=Ve("pf2e-dailies-ext")?.api,i=e.find(".code")[0];if(t&&i){const s=e.find(".monaco .placeholder")[0];this._monaco=t.createEditor(s,i.value),this._monaco.onDidChangeModelContent(debounce((()=>i.value=this._monaco.getValue()),200))}else this._monaco=null;e.find("[data-action=select-template]").on("change",this.#d.bind(this)),e.find("[data-action=create-template]").on("click",this.#m.bind(this)),e.find("[data-action=create-daily]").on("click",this.#p.bind(this)),e.find(".row[data-key]").on("click",this.#f.bind(this)),e.find("[data-action=delete-daily]").on("click",this.#y.bind(this)),e.find("[data-action=save-code]").on("click",this.#h.bind(this))}get code(){return this.form.querySelector(".window-content .code")?.value}async#h(e){e.preventDefault();const t=this.code,i=this._selectedDaily;if(!i||!t)return;const s=n("customDailies"),a=s.filter((e=>e.key!==i));try{const e=new me(t),n=(await e()).key;if("string"!=typeof n)return y("invalidKey");if(a.find((e=>e.key===n)))return y("duplicate");const o=s.findIndex((e=>e.key===i));if(o<0)return;s.splice(o,1,{key:n,code:t}),await r("customDailies",s),Qe.info("saved",{daily:n}),this._selectedDaily=n,this.render()}catch(e){h("error.unexpected"),console.error(e),console.error(`The error occured while testing the custom daily ${i}`)}}async#y(e){if(e.preventDefault(),e.stopPropagation(),!await Dialog.confirm({title:Qe("delete.title"),content:Qe("delete.content")}))return;const t=e.currentTarget.dataset.key,i=n("customDailies").filter((e=>e.key!==t));await r("customDailies",i),Qe.info("deleted",{daily:t}),this.#p()}#p(){this._selectedDaily="",this._selectedTemplate="default",this.render()}#f(e){e.preventDefault(),this._selectedDaily=e.currentTarget.dataset.key,this.render()}async#m(e){e.preventDefault();const t=this._selectedTemplate,i=n("customDailies"),s=new FormData(this.form),a=Object.fromEntries(s),o=Ke.includes(t);let l,{key:c,uuid:u,label:d}=a;if(o)c=t;else if(!c||!u)return Qe.warn("template.noEmpty");if(i.find((e=>e.key===c)))return y("error.duplicate");if("trainedSkill"===t){const e=le(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"SkillGenerics")}else if("trainedLore"===t){const e=ce(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"SkillGenerics")}else if("language"===t){const e=Z(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"LanguageGenerics")}else if("resistance"===t){const e=tt(a.resistance),t=et(a.resistances);if(""===e||!t.length)return Qe.warn("template.noEmpty");if("number"==typeof e&&e<1)return Qe.warn("template.badResistance");const i=re(c,u,t,e,d);l=this.#g(i,{key:c,uuid:u,label:d,resistance:e,resistances:t},"ResistanceGenerics")}else if("feat"===t){const e=et(a.traits),t={feattype:et(a.feattype),level:tt(a.level)||{min:0,max:20}};e.length&&(t.traits=e);const i=H(c,u,t,d);l=this.#g(i,{key:c,uuid:u,label:d},"FeatGenerics")}else if("spell"===t){const e=Number(a.level)||void 0,t=et(a.traits);let i=a.levels.split(",").map((e=>e.trim()));i=1===i.length?tt(i[0]):i.filter((e=>e)).map((e=>Number(e))).filter((e=>!isNaN(e)));const s={category:et(a.category),traditions:et(a.traditions),level:i||[]};t.length&&(s.traits=t);const n=z(c,u,s,e,d);l=this.#g(n,{key:c,uuid:u,label:d,level:e},"SpellGenerics")}else if("tome"===t)l=He;else if("flexibility"===t)l=Je;else if("savant"===t)l=Ye;else if("mind"===t)l=Ze;else{const e={key:c,label:d,item:{uuid:u},rows:[],process:()=>{}};l=this.#g(e,{key:c,uuid:u,label:d})}i.push({key:c,code:l}),await r("customDailies",i),this._selectedDaily=c,this.render()}#g(e,t,i){const s="____PLACEHOLDER____",a=[];let n=JSON.stringify(e,((e,t)=>"function"==typeof t?(a.push(t),s):t),4);n=n.replace(new RegExp('"'+s+'"',"g"),(()=>{const e=a.shift()?.toString();return e?.replace(/( {5,})/g,(e=>e.slice(4)))??""}));let r="";for(const[e,i]of Object.entries(t))r+="string"==typeof i?`const ${e} = '${i}';\n`:"object"==typeof i?`const ${e} = ${JSON.stringify(i)};\n`:`const ${e} = ${i};\n`;return`${r}\n/** @type {${i?`Daily<${i}>`:"Daily"}} */\nconst daily = ${n};\n\nreturn daily;`}#d(e){e.preventDefault(),this._selectedDaily="",this._selectedTemplate=e.currentTarget.value,this.render()}}function et(e){return e.split(",").map((e=>e.trim())).filter((e=>e))}function tt(e){if("number"==typeof e)return e;if("level"===(e=e.trim())||"half"===e)return e;const t=Number(e);return isNaN(t)?"":t}const it="pf2e-dailies";!function(e,s=!1){t||(t=e),i=s?"system":"module"}(it);const st="1.2.0";async function at(){const e=(await this.getCraftingEntries()).filter((e=>e.isDailyPrep)),t=e.filter((e=>e.isAlchemical)).reduce(((e,t)=>e+t.reagentCost),0),i=(this.system.resources.crafting.infusedReagents.value||0)-t;if(i<0)ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MissingReagents"));else{await this.update({"system.resources.crafting.infusedReagents.value":i});for(const t of e)for(const e of t.preparedCraftingFormulas){const i=e.item.toObject();i.system.quantity=e.quantity,i.system.temporary=!0,i.system.size="tiny"===this.ancestry?.size?"tiny":"med",!t.isAlchemical||"consumable"!==i.type&&"weapon"!==i.type&&"equipment"!==i.type||i.system.traits.value.push("infused"),await this.addToInventory(i)}}}Hooks.on("pf2e.restForTheNight",(async function(e){const i=[],s=[];for(const t of e.items){if(l(t,"temporary")){if(s.push(t.id),t.isOfType("feat")){const e=l(t,"grantedBy");if(e){const s=`flags.pf2e.itemGrants.-=${_(t.name,{camel:"dromedary"})}`;i.push({_id:e,[s]:!0})}}continue}const e=c(t);if(e){const s=be(e);s?.rest&&await s.rest({item:t,sourceId:e,updateItem:e=>i.push(e)})}const a=deepClone(t._source.system.rules);let n=!1;for(let e=a.length-1;e>=0;e--)it in a[e]&&(a.splice(e,1),n=!0);n&&i.push({_id:t.id,"system.rules":a})}var a;i.length&&await e.updateEmbeddedDocuments("Item",i),s.length&&await e.deleteEmbeddedDocuments("Item",s),await(a=e,"rested",!0,a.setFlag(t,"rested",true))})),Hooks.on("renderCharacterSheetPF2e",(function(e,t){const i=e.actor;i.isOwner&&function(e){return e.familiar||ne(e)?.uses.value||ge(e).length}(i)&&t.find("aside .sidebar .hitpoints .hp-small").append(`<a class="roll-icon dailies" data-tooltip="${u("sheet.title")}"><i class="fas fa-mug-saucer"></i></a>`).find(".dailies").on("click",(()=>function(e){if(!0!==l(e,"rested"))return y("error.unrested");new DailiesInterface(e).render(!0)}(i)))})),Hooks.once("setup",(()=>{o({name:"customDailies",type:Array,default:[],onChange:he}),o({name:"familiar",type:String,default:"",config:!0}),function(e){const i=e.name;e.name=s("menus",i,"name"),e.label=s("menus",i,"label"),e.hint=s("menus",i,"hint"),e.restricted=e.restricted??!0,e.icon=e.icon??"fas fa-cogs",game.settings.registerMenu(t,i,e)}({name:"customs",type:DailyCustoms})})),Hooks.once("ready",(async()=>{await he(),game.modules.get("lib-wrapper")?.active||!game.user.isGM?function(e,i,s="WRAPPER"){libWrapper.register(t,e,i,s)}("CONFIG.PF2E.Actor.documentClasses.character.prototype.performDailyCrafting",at,"OVERRIDE"):y("error.noLibwrapper",!0)}))})();
//# sourceMappingURL=main.js.map