(()=>{"use strict";var e={d:(t,i)=>{for(var a in i)e.o(i,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:i[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{w:()=>Ze,c:()=>Ye});let t="";function i(...e){return`${t}.settings.${e.join(".")}`}function a(...e){return e=e.filter((e=>"string"==typeof e)),`modules/${t}/templates/${e.join("/")}`}function s(e){return game.settings.get(t,e)}function n(e,i){return game.settings.set(t,e,i)}function r(e){const a=e.name;e.scope=e.scope??"world",e.config=e.config??!1,e.config&&(e.name=i(a,"name"),e.hint=i(a,"hint")),Array.isArray(e.choices)&&(e.choices=e.choices.reduce(((e,t)=>(e[t]=i(a,"choices",t),e)),{})),game.settings.register(t,a,e)}function o(e,i,a){return e.getFlag(t,i)??a}function l(e){return e.getFlag("core","sourceId")}function c(...e){let[i,a]=e;return i=`${t}.${i}`,a?game.i18n.format(i,a):game.i18n.localize(i)}function u(e){return game.i18n.has(`${t}.${e}`,!1)}function d(e){return`${t}.${e}`}function m(e){const t=(...t)=>c(`${e}.${t[0]}`,t[1]);return Object.defineProperties(t,{warn:{value:(...t)=>f(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},info:{value:(...t)=>function(...e){const[t,i,a]=e;p(t,"info",i,a)}(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},error:{value:(...t)=>y(`${e}.${t[0]}`,t[1],t[2]),enumerable:!1,configurable:!1},has:{value:t=>u(`${e}.${t}`),enumerable:!1,configurable:!1},path:{value:t=>d(`${e}.${t}`),enumerable:!1,configurable:!1}}),t}function p(e,t,i,a){const s="string"==typeof t?t:"info",n="object"==typeof t?t:"object"==typeof i?i:void 0,r="boolean"==typeof t?t:"boolean"==typeof i?i:a??!1;ui.notifications.notify(c(e,n),s,{permanent:r})}function f(...e){const[t,i,a]=e;p(t,"warning",i,a)}function y(...e){const[t,i,a]=e;p(t,"error",i,a)}const h=new Map;h.set(-1,13),h.set(0,14),h.set(1,15),h.set(2,16),h.set(3,18),h.set(4,19),h.set(5,20),h.set(6,22),h.set(7,23),h.set(8,24),h.set(9,26),h.set(10,27),h.set(11,28),h.set(12,30),h.set(13,31),h.set(14,32),h.set(15,34),h.set(16,35),h.set(17,36),h.set(18,38),h.set(19,39),h.set(20,40),h.set(21,42),h.set(22,44),h.set(23,46),h.set(24,48),h.set(25,50);const g=new Map;function v(e,t){return t?`@UUID[${e}]{${t}}`:`@UUID[${e}]`}g.set("incredibly easy",-10),g.set("very easy",-5),g.set("easy",-2),g.set("normal",0),g.set("hard",2),g.set("very hard",5),g.set("incredibly hard",10),new Set(["arcane","divine","occult","primal"]);const b=[];const w={1:"RjuupS9xyXDLgyIr",2:"Y7UD64foDbDMV9sx",3:"ZmefGBXGJF3CFDbn",4:"QSQZJ5BC3DeHv153",5:"tjLvRWklAylFhBHQ",6:"4sGIy77COooxhQuC",7:"fomEZZ4MxVVK3uVu",8:"iPki3yuoucnj7bIt",9:"cFHomF3tty8Wi1e5",10:"o1XIHJ4MJyroAHfF"},k=String.raw`[\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,S=String.raw`[^\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,C=new RegExp(S,"gu"),x=String.raw`(?:${k})(?=${S})|(?:${S})(?=${k})`,O=String.raw`(?:${k})(?=${k})`,P=String.raw`\p{Lowercase_Letter}`,T=String.raw`\p{Uppercase_Letter}`,D=new RegExp(`(${P})(${T}${O})`,"gu"),A=/[^-\p{White_Space}\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]/gu,_=new RegExp(`${T}|(?:${x})${P}`,"gu");function E(e,{camel:t=null}={}){if("string"!=typeof e)return console.warn("Non-string argument passed to `sluggify`"),"";switch(t){case null:return e.replace(D,"$1-$2").toLowerCase().replace(/['â€™]/g,"").replace(C," ").trim().replace(/[-\s]+/g,"-");case"bactrian":{const t=E(e,{camel:"dromedary"});return t.charAt(0).toUpperCase()+t.slice(1)}case"dromedary":return e.replace(A,"").replace(/[-_]+/g," ").replace(_,((e,t)=>0===t?e.toLowerCase():e.toUpperCase())).replace(/\s+/g,"");default:throw Error("PF2e System | I don't think that's a real camel.")}}const R=["propertyRune1","propertyRune2","propertyRune3","propertyRune4"];new Set(["armor","backpack","book","consumable","equipment","treasure","weapon"]);const I={acr:"acrobatics",arc:"arcana",ath:"athletics",cra:"crafting",dec:"deception",dip:"diplomacy",itm:"intimidation",med:"medicine",nat:"nature",occ:"occultism",prf:"performance",rel:"religion",soc:"society",ste:"stealth",sur:"survival",thi:"thievery"},F=(Object.keys(I),Object.values(I)),N=["common","draconic","dwarven","elven","gnomish","goblin","halfling","jotun","orcish","sylvan","undercommon","ysoki","abyssal","adlet","aklo","akitonian","alghollthu","amurrun","anadi","ancient-osiriani","anugobu","arcadian","aquan","arboreal","auran","boggard","calda","caligni","celestial","cyclops","daemonic","destrachan","drooni","dziriak","ekujae","erutaki","formian","garundi","girtablilu","gnoll","goloma","grippli","hallit","hwan","iblydan","ignan","ikeshti","immolis","infernal","iruxi","jistkan","jyoti","kaava","kashrishi","kibwani","kitsune","kelish","lirgeni","mahwek","minaten","minkaian","mwangi","mzunu","nagaji","necril","ocotan","okaiyan","osiriani","protean","rasu","ratajin","razatlani","requian","russian","senzar","shadowtongue","shobhad","shisk","shoanti","shoony","skald","sphinx","strix","taldane","tekritanin","tengu","terran","thassilonian","tien","utopian","vanara","varisian","varki","vishkanyan","vudrani","wyrwood","xanmba","androffan","azlanti","grioth","kovintal","migo","munavri","samsaran","sasquatch","shae","yithian","druidic"];function L(e){return e?e[0].toUpperCase()+e.slice(1):""}function j(e,t){const i=[];if(e<=t)for(let a=e;a<=t;a++)i.push(a);else for(let a=e;a>=t;a--)i.push(a);return i}const M="max(1,floor(@actor.level/2))",G={get skillNames(){return F.slice()},skillLabel:e=>game.i18n.localize(CONFIG.PF2E.skillList[e]),createSkillRuleElement:({skill:e,value:t,mode:i="upgrade",predicate:a})=>{const s={key:"ActiveEffectLike",mode:i,path:`system.skills.${e}.rank`,value:t};return a&&a.length&&(s.predicate=a),s},createLoreSource:({name:e,rank:t})=>({type:"lore",img:"systems/pf2e/icons/default-icons/lore.svg",name:e,system:{proficient:{value:t}}}),get languageNames(){return N.slice()},languageLabel:e=>game.i18n.localize(CONFIG.PF2E.languages[e]),createLanguageRuleElement:({language:e,mode:t="add",predicate:i})=>{const a={key:"ActiveEffectLike",mode:t,path:"system.traits.languages.value",value:e};return i&&i.length&&(a.predicate=i),a},resistanceLabel:(e,t)=>{let i=game.i18n.localize(`PF2E.Trait${L(e)}`);return t&&(i+=` ${t}`),i},createResistanceRuleElement:({type:e,value:t,predicate:i})=>{"half"===t&&(t=M);const a={key:"Resistance",type:e,value:t};return i&&i.length&&(a.predicate=i),a},createFeatSource:async e=>{const t=(await fromUuid(e))?.toObject();if(!t)throw new Error(`An error occured while trying to create a feat source with uuid: ${e}`);return t},createSpellScrollSource:async({uuid:e,level:t})=>{const i=await async function(e,t,i=!1){const a=(await fromUuid(e))?.toObject();if(!a)return null;!1===t&&(t=a.system.level.value);const s=function(e){return`Compendium.pf2e.equipment-srd.${w[e]}`}(t);b[t]??=await fromUuid(s);const n=b[t]?.toObject();if(!n)return null;a.system.location.heightenedLevel=t,n.name=`Scroll of ${a.name} (Level ${t})`,n.system.temporary=i,n.system.spell=a,n.system.traits.value.push(...a.system.traditions.value);const r=a.flags.core?.sourceId;return r&&(n.system.description.value=`${v(r)}\n<hr />${n.system.description.value}`),n}(e,t??!1,!0);if(!i)throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${e}`);return i},createSpellSource:async e=>{const t=(await fromUuid(e))?.toObject();if(!t)throw new Error(`An error occured while trying to create a spell source with uuid: ${e}`);return t},get halfLevelString(){return M},getChoiSetRuleSelection:function(e,t){return e._source.system.rules.find((e=>"ChoiceSet"===e.key&&e.rollOption===t))?.selection},proficiencyLabel:e=>game.i18n.localize(CONFIG.PF2E.proficiencyLevels[e]),randomOption:async e=>{const t=e[(await new Roll(`1d${e.length}`).evaluate({async:!0})).total-1];return"string"==typeof t?t:t.value},halfLevelValue:e=>Math.max(1,Math.floor(e.level/2)),sequenceArray:j,damageLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponDamage[e]),weaponTraitLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponTraits[e]),weaponPropertyRunesLabel:e=>game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[e]),hasFreePropertySlot:e=>{const t=e.system.runes.potency;return t>0&&e.system.runes.property.length<t},getFreePropertyRuneSlot:function(e){const t=e.system.potencyRune.value;if(null===t)return null;for(let i=0;i<t;i++){const t=R[i];if(!e.system[t].value)return t}return null}};function W(e,t,i={},a,s){const n={key:e,label:s,item:{uuid:t},rows:[{type:"drop",slug:"spell",filter:{type:"spell",search:i}}],process:async({addSpell:e,utils:t,fields:i,messages:s})=>{const n=i.spell.uuid,r=await t.createSpellSource(n),o=`${r.name} (Level ${a||r.system.level.value})`;e(r,a),s.add("spells",{uuid:n,label:o})}};return n}const z=(()=>{const e=W("ace","Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW",{category:["cantrip","spell"],level:4},4);return e.rows[0].filter.drop=e=>{const t=e.system.time.value;return!(t.includes("hour")||t.includes("min")&&parseInt(t)>10)||{error:d("interface.error.drop.wrongSpellTime"),data:{time:"10 min"}}},e})(),U=["first","second","third","fourth","fifth","sixth","seventh"];function B(e,t,i){const a={key:e,label:i,item:{uuid:t[0]},children:[{slug:"expert",uuid:t[1]},{slug:"master",uuid:t[2]}],rows:[V("first",1),V("second",2,8),V("third",3,void 0,"expert"),V("fourth",4,14,"expert"),V("fifth",5,16,"expert"),V("sixth",6,void 0,"master"),V("seventh",7,20,"master")],process:async({utils:e,fields:t,addItem:i,messages:a})=>{for(const s of Object.values(t)){const t=s.uuid,n=U.indexOf(s.row)+1,r=await e.createSpellScrollSource({uuid:t,level:n});i(r),a.add("scrolls",{uuid:t,label:r.name})}}};return a}function V(e,t,i,a){const s={type:"drop",slug:e,label:`PF2E.SpellLevel${t}`,filter:{type:"spell",search:{category:["spell"],level:t}}};return i&&(s.condition=({actor:e})=>e.level>=i),a&&(s.childPredicate=[a]),s}function q(e,t,i={},a){const s={key:e,label:a,item:{uuid:t},rows:[{type:"drop",slug:"feat",filter:{type:"feat",search:i}}],process:async({utils:e,fields:t,addFeat:i,messages:a})=>{const s=t.feat.uuid;i(await e.createFeatSource(s)),a.add("feats",{uuid:s})}};return s}const H={key:"flexibility",item:{uuid:"Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8"},children:[{slug:"improved",uuid:"Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX"}],rows:[J("flexibility",8),J("improved",14,"improved")],process:async({utils:e,fields:t,addFeat:i,messages:a,children:s})=>{const n=t.flexibility.uuid;if(i(await e.createFeatSource(n)),a.add("feats",{uuid:n}),s.improved){const n=t.improved.uuid;i(await e.createFeatSource(n),s.improved),a.add("feats",{uuid:n})}}};function J(e,t,i){const a={type:"drop",label:`PF2E.Level${t}`,slug:e,filter:{type:"feat",search:{feattype:["class"],traits:{values:["fighter"]},level:t}}};return i&&(a.childPredicate=[i]),a}function Y(e,t,i){const a={key:e,label:i,item:{uuid:t},rows:[{type:"select",slug:"language",options:({actor:e,utils:t})=>{const i=e.system.traits.languages.value;return t.languageNames.filter((e=>!i.includes(e))).sort()},labelizer:({utils:e})=>e.languageLabel}],process:({addRule:e,utils:a,fields:s,messages:n})=>{const r=s.language.value;e(a.createLanguageRuleElement({language:r})),n.add("languages",{uuid:t,selected:a.languageLabel(r),label:i})}};return a}const Z="Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P",Q={0:{die:"d4",traits:["finesse","agile"],usage:"held-in-one-hand"},1:{die:"d6",traits:["finesse"],usage:"held-in-one-hand"},2:{die:"d8",traits:[],usage:"held-in-one-hand"},3:{die:"d10",traits:["reach"],usage:"held-in-two-hands"}},X={slashing:"sword",piercing:"spear",bludgeoning:"club"},K=["grapple","nonlethal","shove","trip","modular"],ee=Object.keys(X),te={key:"mindsmith",item:{uuid:"Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY"},children:[{slug:"weapon",uuid:Z},{slug:"mental",uuid:"Compendium.pf2e.feats-srd.PccekOihIbRWdDky"},{slug:"runic",uuid:"Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp"},{slug:"advanced",uuid:"Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD"}],rows:[{type:"alert",slug:"alert",message:()=>c("interface.alert.weapon"),fix:async function({actor:e}){const t=m("dialog.weapon");let i=t("flavor");for(const e of["0","1","2","3"])i+=`<label><input type="radio" name="type" value="${e}">${t(`option.${e}`)}</label>`;const a=await Dialog.wait({title:t("title"),content:i,buttons:{yes:{icon:'<i class="fas fa-save"></i>',label:t("accept"),callback:ie},no:{icon:'<i class="fas fa-times"></i>',label:t("cancel"),callback:()=>null}},close:()=>null},{},{id:"pf2e-dailies-weapon",width:600});return!!a&&(await e.createEmbeddedDocuments("Item",[a]),!0)},childPredicate:[{not:"weapon"}]},{type:"select",slug:"smith",label:()=>c("label.mindsmith"),options:ee,labelizer:({utils:e})=>e.damageLabel,childPredicate:["weapon"]},{type:"select",slug:"mental",label:()=>c("label.mentalforge"),options:K,labelizer:({utils:e})=>e.weaponTraitLabel,childPredicate:["weapon","mental"]},{type:"select",slug:"runic",label:()=>c("label.runicmind"),options:["corrosive","disrupting","flaming","frost","shock","thundering"],labelizer:({utils:e})=>e.weaponPropertyRunesLabel,childPredicate:["weapon","runic",{not:"advanced"}],condition:({children:e,utils:t})=>t.hasFreePropertySlot(e.weapon)},{type:"select",slug:"advanced",label:()=>c("label.runicmind"),options:["anarchic","axiomatic","greaterCorrosive","greaterDisrupting","greaterFlaming","greaterFrost","greaterShock","greaterThundering","holy","unholy"],labelizer:({utils:e})=>e.weaponPropertyRunesLabel,childPredicate:["weapon","advanced"],condition:({children:e,utils:t})=>t.hasFreePropertySlot(e.weapon)}],process:({children:e,updateItem:t,fields:i,messages:a,item:s,utils:n})=>{const r=e.weapon;if(!r)return;a.addGroup("mindsmith");const o=i.smith.value;if(t({_id:r.id,"system.damage.damageType":o,"system.group":X[o]}),a.add("mindsmith",{selected:n.damageLabel(o),uuid:s.uuid,label:"mindsmith"}),e.mental){const s=i.mental.value,o=deepClone(r._source.system.traits?.value??[]);o.includes(s)||o.push(s),t({_id:r.id,"system.traits.value":o}),a.add("mindsmith",{selected:n.weaponTraitLabel(s),uuid:e.mental.uuid,label:"mentalforge"})}if((e.advanced||e.runic)&&n.hasFreePropertySlot(r)){const s=e.advanced??e.runic,o=n.getFreePropertyRuneSlot(r),l=(i.advanced??i.runic).value;r.system.runes.property.includes(l)||(t({_id:r.id,[`system.${o}.value`]:l,[`flags.${Ye}.runeSlot`]:o}),a.add("mindsmith",{selected:n.weaponPropertyRunesLabel(l),uuid:s.uuid,label:"runicmind"}))}},rest:({item:e,sourceId:t,updateItem:i})=>{if(t!==Z)return;let a=e._source.system.traits?.value??[];a=a.filter((e=>!K.includes(e))),i({_id:e.id,"system.traits.value":a});const s=o(e,"runeSlot");s&&i({_id:e.id,[`system.${s}.value`]:null,[`flags.${Ye}.-=runeSlot`]:!0})}};async function ie(e){const t=m("dialog.weapon"),i=e.find("[name=type]:checked").val();if(!i)return void t.warn("error.noSelection");const a=(await fromUuid(Z))?.toObject();if(!a)return void t.warn("error.missing");const s=Q[i];return setProperty(a,"system.damage.die",s.die),setProperty(a,"system.traits.value",s.traits.slice()),setProperty(a,"system.usage.value",s.usage),a}const ae="Compendium.pf2e.equipment-srd.L9ZV076913otGtiB";function se(e){return function(e,t,i){return function(e,t){return t?t.flatMap((t=>e.itemTypes[t])):e.items}(e,void 0).find(function(e){return Array.isArray(e)?t=>function(e,t){const i=l(e);return!!i&&t.includes(i)}(t,e):t=>l(t)===e}(t))}(e,ae)}function ne(e,t,i,a,s,n){const r={key:e,label:s,item:{uuid:t},rows:[{type:n?"random":"select",slug:"resistance",options:i,labelizer:({utils:e})=>e.resistanceLabel}],process:async({utils:e,fields:r,actor:o,addRule:l,messages:c})=>{const u=n?await e.randomOption(i):r.resistance.value,d="number"==typeof a?a:"half"===a?e.halfLevelValue(o):o.level;l(e.createResistanceRuleElement({type:u,value:d})),c.add("resistances",{uuid:t,selected:e.resistanceLabel(u,d),label:s,random:n})}};return r}const re={key:"savant",item:{uuid:"Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ"},prepare:({actor:e})=>{const{maxSlot:t,maxTradition:i}=function(e,t){let i=1,a=0;for(const t of e.spellcasting){if("pf2e-staves"in t.flags)continue;const e=t.system.slots;for(const t in e)e[t].max&&(i=Math.max(i,Number(t.slice(4))));"arcane"===t.tradition&&(a=Math.max(a,t.rank))}return{maxSlot:Math.min(i,10),maxTradition:a}}(e);return{first:{level:t-2,condition:!0},second:{level:t-3,condition:!0},third:{level:t-4,condition:i>=3&&t>=5},fourth:{level:t-5,condition:i>=4&&t>=6}}},rows:["first","second","third","fourth"].map((e=>({type:"drop",slug:e,label:({custom:t})=>`PF2E.SpellLevel${t[e].level}`,filter:{type:"spell",search:({custom:t})=>({category:["spell"],traditions:["arcane"],level:t[e].level})},condition:({custom:t})=>t[e].condition}))),process:async({utils:e,fields:t,custom:i,addItem:a,messages:s})=>{for(const n of Object.values(t)){const t=n.uuid,r=await e.createSpellScrollSource({uuid:t,level:i[n.row].level});a(r),s.add("scrolls",{uuid:t,label:r.name})}}};function oe(e,t,i){const a={key:e,label:i,item:{uuid:t},rows:[{type:"combo",slug:"skill",options:({actor:e,utils:t})=>{const i=e.skills;return t.skillNames.filter((e=>i[e].rank<1))},labelizer:({utils:e})=>e.skillLabel}],process:({fields:e,addItem:a,addRule:s,utils:n,messages:r})=>{let o=e.skill.value;if("true"===e.skill.input)a(n.createLoreSource({name:o,rank:1}));else{const e=n.createSkillRuleElement({skill:o,value:1});o=n.skillLabel(o),s(e)}r.add("skills",{uuid:t,selected:o,label:i})}};return a}function le(e,t,i){const a={key:e,label:i,item:{uuid:t},rows:[{type:"input",slug:"skill"}],process:({addItem:e,utils:a,fields:s,messages:n})=>{const r=s.skill.value;e(a.createLoreSource({name:r,rank:1})),n.add("skills",{uuid:t,selected:r,label:i})}};return a}const ce={key:"tome",item:{uuid:"Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e"},children:[{slug:"adept",uuid:"Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO",condition:ue("adept")},{slug:"second",uuid:"Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5",condition:ue("adept")},{slug:"intense",uuid:"Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC"},{slug:"paragon",uuid:"Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI",condition:ue("paragon")}],prepare:({utils:e,actor:t,children:i})=>{const a=e.skillNames,s=t.level,n=t.skills,r={first:{options:[],rank:1},second:{options:[],rank:1}};if(i.paragon){const e=a.filter((e=>n[e].rank<4));r.first={rank:4,options:e},r.second={rank:4,options:e}}else if(i.intense||i.adept||i.second){const e=a.filter((e=>n[e].rank<3));if(s>=9)r.first={rank:3,options:e},r.second={rank:3,options:e};else{const t=a.filter((e=>n[e].rank<2));r.first={rank:2,options:t},r.second={rank:3,options:e}}}else if(s>=5){const e=a.filter((e=>n[e].rank<2));r.first={rank:2,options:e},r.second={rank:2,options:e}}else if(s>=3){const e=a.filter((e=>n[e].rank<1)),t=a.filter((e=>n[e].rank<2));r.first={rank:1,options:e},r.second={rank:2,options:t}}else{const e=a.filter((e=>n[e].rank<1));r.first={rank:1,options:e},r.second={rank:1,options:e}}return r},rows:["first","second"].map((e=>{const t={type:"combo",slug:e,label:({custom:t,utils:i})=>i.proficiencyLabel(t[e].rank),options:({custom:t})=>t[e].options,labelizer:({utils:e})=>e.skillLabel};return t})),process:({custom:e,fields:t,utils:i,messages:a,addItem:s,addRule:n})=>{a.addGroup("tome",65);for(const r of["first","second"]){const o=e[r].rank;let l=t[r].value;if("true"===t[r].input)s(i.createLoreSource({name:l,rank:o}));else{const e=i.createSkillRuleElement({skill:l,value:o});l=i.skillLabel(l),n(e)}a.add("tome",{label:i.proficiencyLabel(o),selected:l})}}};function ue(e){return function({item:t,utils:i}){return"tome"===i.getChoiSetRuleSelection(t,e)}}const de=async function(){}.constructor,me=fe([ce,oe("longevity","Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ"),oe("ageless","Compendium.pf2e.feats-srd.wylnETwIz32Au46y"),oe("memories","Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62"),oe("studies","Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0"),le("study","Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW"),Y("linguistics","Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX"),Y("borts","Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g"),ne("elementalist","Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS",["air","earth","fire","water"],"half","elementalist"),ne("ganzi","Compendium.pf2e.heritages.3reGfXH0S82hM7Gp",["acid","electricity","sonic"],"half","ganzi",!0),q("metamagical","Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp",{feattype:["class"],traits:{values:["metamagic","wizard"],conjunction:"and"},level:"half"}),H,re,B("esoterica",["Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR","Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O","Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ"]),B("trickster",["Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C","Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf","Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1"]),z,te],"dailies"),pe=new Map;function fe(e,t){const i=new Map;for(const a of e){const e=deepClone(a);try{const a=`${t}.${e.key}`;if(i.set(e.item.uuid,{daily:e,condition:e.item.condition}),e.key=a,e.children)for(let t=0;t<e.children.length;t++){const{uuid:a,condition:s}=e.children[t];i.set(a,{daily:e,index:t,condition:s})}}catch(i){y("error.unexpected"),console.error(i),console.error(`The error occured during data gathering of ${t}.${e.key}`)}}return i}async function ye(){pe.clear();const e=[],t=s("customDailies");for(const{key:i,code:a}of t)try{const t=new de(a),i=await t();e.push(i)}catch(e){y("error.unexpected"),console.error(e),console.error(`The error occured during call of custom function for ${i}`)}for(const[e,t]of me.entries())pe.set(e,t);const i=fe(e,"custom");for(const[e,t]of i.entries())pe.set(e,t)}function he(e){const t={};for(const i of e.items){const a=l(i);if(!a||i.isOfType("physical")&&!1===i.isInvested)continue;const s=pe.get(a);if(!s)continue;const{daily:n,index:r,condition:o}=s;try{if("function"==typeof o&&!o({actor:e,item:i,utils:G}))continue;t[n.key]??=deepClone(n),void 0===r?t[n.key].item=i:t[n.key].children[r].item=i}catch(e){y("error.unexpected"),console.error(e),console.error(`The error occured during data gathering of ${n.key}`)}}return Object.values(t).filter((e=>e.item&&e.item instanceof Item))}function ge(e){return pe.get(e)?.daily}function ve(e){return"object"==typeof e&&null!==e}class PredicatePF2e extends Array{isValid;constructor(...e){Array.isArray(e[0])?super(...e[0]):super(...e),this.isValid=PredicatePF2e.isValid(this)}static isValid(e){return this.isArray(e)}static isArray(e){return super.isArray(e)&&e.every((e=>StatementValidator.isStatement(e)))}static test(e=[],t){return e instanceof PredicatePF2e?e.test(t):new PredicatePF2e(...e).test(t)}static create(e,t=!1){return e instanceof PredicatePF2e?e.clone():Array.isArray(e)?new PredicatePF2e(e):ve(e)?(t&&foundry.utils.logCompatibilityWarning("Predicate data must be an array",{mode:CONST.COMPATIBILITY_MODES.WARNING,since:"4.2.0",until:"4.5.0"}),new PredicatePF2e(function(e){const t=Object.keys(e);return 0===t.length?[]:1===t.length&&Array.isArray(e.all)?deepClone(e.all):1===t.length&&Array.isArray(e.any)&&1===e.any.length?deepClone(e.any):deepClone([e.all??[],Array.isArray(e.any)?{or:e.any}:[],Array.isArray(e.not)?1===e.not.length?{not:e.not[0]}:{nor:e.not}:[]].flat())}(e))):new PredicatePF2e}test(e){if(0===this.length)return!0;if(!this.isValid)return console.error("PF2e System | The provided predicate set is malformed."),!1;const t=e instanceof Set?e:new Set(e);return this.every((e=>this.isTrue(e,t)))}toObject(){return deepClone([...this])}clone(){return new PredicatePF2e(this.toObject())}isTrue(e,t){return"string"==typeof e&&t.has(e)||StatementValidator.isBinaryOp(e)&&this.testBinaryOp(e,t)||StatementValidator.isCompound(e)&&this.testCompound(e,t)}testBinaryOp(e,t){if("eq"in e)return t.has(`${e.eq[0]}:${e.eq[1]}`);{const i=Object.keys(e)[0],[a,s]=Object.values(e)[0],n=Array.from(t),r="number"!=typeof a&&Number.isNaN(Number(a))?n.flatMap((e=>e.startsWith(a)?Number(/:(-?\d+)$/.exec(e)?.[1]):[])):[Number(a)],o="number"!=typeof s&&Number.isNaN(Number(s))?n.flatMap((e=>e.startsWith(s)?Number(/:(-?\d+)$/.exec(e)?.[1]):[])):[Number(s)];switch(i){case"gt":return r.some((e=>o.every((t=>e>t))));case"gte":return r.some((e=>o.every((t=>e>=t))));case"lt":return r.some((e=>o.every((t=>e<t))));case"lte":return r.some((e=>o.every((t=>e<=t))));default:return console.warn("PF2e System | Malformed binary operation encounter"),!1}}}testCompound(e,t){return"and"in e&&e.and.every((e=>this.isTrue(e,t)))||"nand"in e&&!e.nand.every((e=>this.isTrue(e,t)))||"or"in e&&e.or.some((e=>this.isTrue(e,t)))||"nor"in e&&!e.nor.some((e=>this.isTrue(e,t)))||"not"in e&&!this.isTrue(e.not,t)||"if"in e&&!(this.isTrue(e.if,t)&&!this.isTrue(e.then,t))}}class StatementValidator{static isStatement(e){return e instanceof Object?this.isCompound(e)||this.isBinaryOp(e):"string"==typeof e&&this.isAtomic(e)}static isAtomic(e){return"string"==typeof e&&e.length>0||this.isBinaryOp(e)}static binaryOperators=new Set(["eq","gt","gte","lt","lte"]);static isBinaryOp(e){if(!ve(e))return!1;const t=Object.entries(e);if(t.length>1)return!1;const[i,a]=t[0];return this.binaryOperators.has(i)&&Array.isArray(a)&&2===a.length&&"string"==typeof a[0]&&["string","number"].includes(typeof a[1])}static isCompound(e){return ve(e)&&(this.isAnd(e)||this.isOr(e)||this.isNand(e)||this.isNor(e)||this.isNot(e)||this.isIf(e))}static isAnd(e){return 1===Object.keys(e).length&&Array.isArray(e.and)&&e.and.every((e=>this.isStatement(e)))}static isNand(e){return 1===Object.keys(e).length&&Array.isArray(e.nand)&&e.nand.every((e=>this.isStatement(e)))}static isOr(e){return 1===Object.keys(e).length&&Array.isArray(e.or)&&e.or.every((e=>this.isStatement(e)))}static isNor(e){return 1===Object.keys(e).length&&Array.isArray(e.nor)&&e.nor.every((e=>this.isStatement(e)))}static isNot(e){return 1===Object.keys(e).length&&!!e.not&&this.isStatement(e.not)}static isIf(e){return 2===Object.keys(e).length&&this.isStatement(e.if)&&this.isStatement(e.then)}}const be={select:100,combo:80,random:60,alert:40,input:20,drop:0};async function we({children:e=[],key:t,item:i,prepare:a,label:s,rows:n=[]}){const r=this.actor,l=this.saved[t]=o(r,t)??{},d=this.rows[t]={},m=this.children[t]=e.reduce(((e,{slug:t,item:i})=>(e[t]=i,e)),{}),p={actor:r,item:i,children:m,utils:G},f=this.custom[t]=a&&await a(p)||{},y=this.dailyArgs[t]={...p,custom:f};let h=await ke(s,y);const g=h?`label.${h}`:t.startsWith("dailies.")?`label.${t.slice(8)}`:void 0;g&&u(g)&&(h=c(g));const v=this.predicate[t]=e.filter((e=>e.item)).map((e=>e.slug)),b={label:h?game.i18n.localize(h):i.name,rows:[]};for(const e of n){d[e.slug]=e;const{type:i,slug:a,childPredicate:s=[],condition:n,label:r,save:o}=e;if(s.length&&!PredicatePF2e.test(s,v))continue;if(n&&!await n(y))continue;const c=!1===o||"random"===i?void 0:l[a],u=await ke(r,y),m=void 0===c?"":"object"!=typeof c?c:"name"in c?c.name:c.selected,p={label:u?game.i18n.localize(u):"",value:m,order:be[i],data:{type:i,daily:t,row:a}};if(Se(e)||Ce(e)||xe(e)){const t=await ke(e.options,y)??[];if("combo"!==i&&!t.length)continue;const a="function"==typeof e.labelizer&&e.labelizer(y)||(e=>L(e));p.options=t.map((e=>"string"==typeof e?{value:e,label:a(e)}:e)),Se(e)&&(p.selected=p.value,p.data.input=c?.input??!0,!p.data.input&&t.includes(p.selected)&&(p.value=a(p.selected)))}else Oe(e)?p.data.uuid=c?.uuid??"":Pe(e)&&(p.value="function"==typeof e.message?await e.message(y):e.message);b.rows.push(p)}return b}async function ke(e,t){return"function"==typeof e?await e(t):e}function Se(e){return"combo"===e.type}function Ce(e){return"select"===e.type}function xe(e){return"random"===e.type}function Oe(e){return"drop"===e.type}function Pe(e){return"alert"===e.type}const Te=m("interface.error.drop");async function De(e,t,i){if(!e.isOfType("feat"))return Te("notFeat");const{featType:a,traits:s,system:n,level:r}=e,{search:o,drop:l}=i;if(o.feattype.length&&!o.feattype.includes(a))return Te.warn("wrongType",{types:_e("featTypes",o.feattype)});if(o.traits.values.length){const e=o.traits.conjunction??"and",t="or"===e?"some":"every";if(!o.traits.values[t]((e=>s.has(e))))return Te.warn("or"===e?"wrongTraitOr":"wrongTraitAnd",{traits:_e("featTraits",o.traits.values)})}if(o.skills.length){const e=function(){const e=CONFIG.PF2E.skillList;return Object.entries(e).reduce(((e,[t,i])=>({...e,[t]:game.i18n.localize(i).toLocaleLowerCase(game.i18n.lang)})),{})}(),t=n.prerequisites.value.map((e=>e.value.toLocaleLowerCase()));if(!o.skills.some((i=>t.some((t=>t.includes(i)||t.includes(e[i]))))))return Te.warn("wrongSkill",{skills:_e("skillList",o.skills)})}if(o.rarity.length&&!o.rarity.includes(n.traits.rarity))return Te.warn("wrongRarity",{rarities:_e("rarityTraits",o.rarity)});if(o.source.length&&!o.source.includes(E(n.source.value)))return Te.warn("wrongSource",{sources:o.source.join(", ")});const{min:c,max:u}=o.level;if(r<c)return Te.warn("wrongLevelLow",{level:`min: ${c}`});if(r>u)return Te.warn("wrongLevelHigh",{level:`max: ${u}`});if(l){const i=this.dailyArgs[t.dataset.daily];if(i){const t=await l(e,i);if("object"==typeof t)return t.data?game.i18n.format(t.error,t.data):game.i18n.localize(t.error);if(!1===t)return Te.warn("wrongCustom")}}$e(e,t)}async function Ae(e,t,i){if(!e.isOfType("spell"))return Te("notSpell");const{system:a,level:s,traits:n,traditions:r,school:o}=e,{search:l,drop:c}=i;if(l.category.length){const t=l.category.map((e=>game.i18n.localize("cantrip"===e?"PF2E.SpellCantripLabel":CONFIG.PF2E.spellCategories[e]))).join(", ");if(e.isCantrip&&!l.category.includes("cantrip")||e.isFocusSpell&&!l.category.includes("focus")||e.isRitual&&!l.category.includes("ritual")||!e.isCantrip&&!e.isFocusSpell&&!e.isRitual&&!l.category.includes("spell"))return Te.warn("wrongCategory",{categories:t})}if(l.traits.values.length){const e=l.traits.conjunction??"and",t="or"===e?"some":"every";if(!l.traits.values[t]((e=>n.has(e))))return Te.warn("or"===e?"wrongTraitOr":"wrongTraitAnd",{traits:_e("spellTraits",l.traits.values)})}if(l.traditions.length&&!l.traditions.some((e=>r.has(e))))return Te.warn("wrongTradition",{traditions:_e("magicTraditions",l.traditions)});if(l.level.length&&!l.level.includes(s))return Te.warn("wrongLevel",{levels:l.level.join(", ")});if(l.school.length&&!l.school.includes(o))return Te.warn("wrongSchool",{schools:_e("magicSchools",l.school)});if(l.rarity.length&&!l.rarity.includes(a.traits.rarity))return Te.warn("wrongRarity",{rarities:_e("rarityTraits",l.rarity)});if(l.source.length&&!l.source.includes(E(a.source.value)))return Te.warn("wrongSource",{sources:l.source.join(", ")});if(c){const i=this.dailyArgs[t.dataset.daily];if(i){const t=await c(e,i);if("object"==typeof t)return t.data?ui.notifications.warn(game.i18n.format(t.error,t.data)):ui.notifications.warn(game.i18n.localize(t.error));if(!1===t)return Te.warn("wrongCustom")}}$e(e,t)}function _e(e,t){return t.map((t=>game.i18n.localize(CONFIG.PF2E[e][t]))).join(", ")}function $e(e,t){t.value=e.name,t.dataset.uuid=e.uuid,t.nextElementSibling.nextElementSibling.classList.remove("disabled")}function Ee(){return game.packs.get("pf2e.familiar-abilities")}async function Re(){const e=this.actor,t=this.dailies,i=Ie.call(this),a=[],s=new Map,n=[],r={},l=m("message");let d=!1,p="";const f=e=>{const t=e.id,i=s.get(t);if(i)return i;const a=deepClone(e._source.system.rules);for(let e=a.length-1;e>=0;e--)Ye in a[e]&&a.splice(e,1);return s.set(t,a),a},h={languages:{order:80,messages:[]},skills:{order:70,messages:[]},resistances:{order:60,messages:[]},feats:{order:50,messages:[]},spells:{order:40,messages:[]},scrolls:{order:30,messages:[]}},g={add:(e,t)=>{h[e]??={order:0,messages:[]},h[e].messages.push(t)},addGroup:(e,t=1,i)=>{h[e]??={label:i,order:t,messages:[]}}};if(e.familiar&&i["dailies.familiar"]){const t=e.familiar,a=Ee(),s=[],n=t.itemTypes.effect.map((e=>e.id));n.length&&t.deleteEmbeddedDocuments("Item",n),g.addGroup("familiar",20);for(const e of Object.values(i["dailies.familiar"])){const t=e.value,i=t.includes("."),n=await(i?fromUuid(t):a.getDocument(t));if(!n||!n.isOfType("effect"))continue;const r=n.toObject();r&&(s.push(r),g.add("familiar",{uuid:i?t:(b=t,`Compendium.pf2e.familiar-abilities.${b}`)}))}s.length&&t.createEmbeddedDocuments("Item",s)}var b;if("true"===i["dailies.rations"]?.rations.value){const t=se(e);if(t?.uses.value){const e=t.quantity,{value:i,max:a}=t.uses;i<=1?e<=1?t.delete():n.push({_id:t.id,"system.quantity":Math.max(t.quantity-1,0),"system.charges.value":a}):n.push({_id:t.id,"system.charges.value":Math.max(i-1,0)});const s=(e-1)*a+i,r=s<=1?function(e){return`<span style="background: #DDD;\n    padding: 1px 4px;\n    border: 1px solid var(--color-border-dark-tertiary);\n    border-radius: 2px;\n    white-space: nowrap;\n    word-break: break-all;">${e}</span>`}(t.name):v(t.uuid);p+=s<=1?l("rations.last",{name:r}):l(s<=3?"rations.almost":"rations.used",{name:r,nb:s-1})}}for(const{item:e,key:s,process:r}of t){if(!i[s])continue;const t=this.dailyArgs[s];try{await r({...t,fields:i[s],messages:g,addItem:e=>a.push(e),updateItem:e=>n.push(e),addRule:(t,i)=>f(i??e).push(t),addFeat:(t,i)=>{if(e.isOfType("feat")){const a=(i??e).id;setProperty(t,"flags.pf2e.grantedBy",{id:a,onDelete:"cascade"}),setProperty(t,`flags.${Ye}.grantedBy`,a)}a.push(t)},addSpell:(e,t)=>{setProperty(e,`flags.${Ye}.entry`,{level:t}),a.push(e),d=!0}})}catch(e){y("error.unexpected"),console.error(e),console.error(`The error occured during processing of ${s}`)}}for(const[e,t]of Object.entries(i)){const i=this.rows[e];if(i)for(const{row:a,type:s,input:n,value:o,uuid:l}of Object.values(t)){if("random"===s||!1===i[a]?.save)continue;(r[e]??={})[a]="combo"===s?{input:"true"===n,selected:o}:"drop"===s?{uuid:l,name:o}:o}}for(const[e,t]of s)t.forEach((e=>e[Ye]=!0)),n.push({_id:e,"system.rules":t});if(d){const t={type:"spellcastingEntry",name:c("spellEntry.name"),system:{prepared:{value:"innate"},showSlotlessLevels:{value:!1},showUnpreparedSpells:{value:!1},proficiency:{value:1,slug:e.classDC?.slug||e.class?.slug||void 0}}};a.push(t)}for(const e of a)!0===getProperty(e,"system.temporary")||setProperty(e,`flags.${Ye}.temporary`,!0);if(a.length){const t=await e.createEmbeddedDocuments("Item",a);for(const e of t)if(e.isOfType("feat")){const t=o(e,"grantedBy");if(t){const i=`flags.pf2e.itemGrants.${E(e.name,{camel:"dromedary"})}`;n.push({_id:t,[i]:{id:e.id,onDelete:"detach"}})}}else if(e.isOfType("spellcastingEntry")){const i=t.filter((e=>e.isOfType("spell")&&o(e,"entry")));for(const t of i){const{level:i}=o(t,"entry"),a={_id:t.id,"system.location.value":e.id};void 0!==i&&(a["system.location.heightenedLevel"]=i),n.push(a)}}}await e.update({[`flags.${Ye}`]:{...expandObject(r),rested:!1}}),n.length&&await e.updateEmbeddedDocuments("Item",n),p=function(e,t){const i=m("message"),a=Object.entries(e).map((([e,t])=>(t.label??=i.has(e)?i(e):i("gained",{type:e}),t)));a.sort(((e,t)=>t.order-e.order));for(const{label:e,messages:i}of a)if(i.length){t&&(t+="<hr />"),e&&(t+=`<p><strong>${e}</strong></p>`);for(let{uuid:e,selected:a,label:s,random:n}of i){const i=`label.${s}`;s=s&&u(i)?c(i):s||"",t+="<p>",t+=e?`${v(e,s)}`:`<strong>${s}</strong>`,a&&(t+=` <span>${a}</span>`),n&&(t+=' <i class="fa-solid fa-dice-d20"></i>'),t+="</p>"}}return t}(h,p),p=p?`${l("changes")}<hr />${p}`:l("noChanges"),ChatMessage.create({content:p,speaker:ChatMessage.getSpeaker({actor:e})})}function Ie(){const e=this.element.find(".window-content .content").find("input:not(.alert), select[data-type]").toArray(),t={};for(const i of e){const e={...i.dataset,value:i.value};if("combo"===e.type&&"false"===e.input){const t=i.previousElementSibling;e.value=t.value}t[e.daily]??={},t[e.daily][e.row]=e}return t}function Fe(e,t){return"number"==typeof t?t:"level"===t?e.level:Math.max(1,Math.floor(e.level/2))}function Ne(e,t){const i={feattype:[],skills:[],rarity:[],source:[],searchText:"",traits:{values:[],conjunction:"and"},orderBy:"level",orderDirection:"asc",...deepClone(t)};return void 0===i.level?i.level={min:0,max:20}:"object"!=typeof i.level?i.level={min:0,max:Fe(e,i.level)}:i.level={min:Fe(e,i.level.min??0),max:Fe(e,i.level.max??0)},i}function Le(e,t){const i={category:[],rarity:[],school:[],source:[],traditions:[],searchText:"",traits:{values:[],conjunction:"and"},orderBy:"level",orderDirection:"asc",...deepClone(t)};return void 0===i.level?i.level=[]:Array.isArray(i.level)||(i.level=j(1,Fe(e,i.level))),i}const je=m("interface");class DailiesInterface extends Application{_actor;_randomInterval;_dailies=[];_dailyArgs={};_saved={};_children={};_custom={};_predicate={};_rows={};constructor(e,t){super(t),this._actor=e}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-dailies-interface",title:je("title"),template:a("interface.hbs"),height:"auto",submitOnClose:!1,submitOnChange:!1,dragDrop:[{dropSelector:'[data-droppable="true"]'}]})}get actor(){return this._actor}get dailies(){return this._dailies}get dailyArgs(){return this._dailyArgs}get saved(){return this._saved}get children(){return this._children}get custom(){return this._custom}get predicate(){return this._predicate}get rows(){return this._rows}async getData(e){const t=[],i=this._actor;if(this._dailies=he(i),i.familiar){const e="dailies.familiar",a=m("label"),n=i.attributes.familiarAbilities.value,r=Ee(),l=o(i,e)??{},c={label:a("familiar"),rows:[]},u=r.index.map((({_id:e,name:t})=>({value:e,label:t}))),d=s("familiar").split(",");for(let e of d){e=e.trim();const t=await fromUuid(e);t&&t.isOfType("effect")&&u.push({value:e,label:t.name})}u.sort(((e,t)=>e.label<t.label?-1:t.label<e.label?1:0));for(let t=0;t<n;t++)c.rows.push({label:a("ability",{nb:t+1}),value:l[`${t}`]??"",order:100,options:u,data:{type:"select",daily:e,row:t.toString()}});c.rows.length&&(this._rows[e]=c.rows.reduce(((e,{data:t})=>(e[t.row]={save:!0},e)),{}),t.push(c))}const a=se(i);if(a?.uses.value){const e="dailies.rations",i="rations",{value:s,max:n}=a.uses,r=(a.quantity-1)*n+s,o=r<=1,l=[{value:"false",label:je("rations.no")},{value:"true",label:o?je("rations.last"):je("rations.yes",{nb:r})}];t.push({label:a.name,rows:[{label:"",order:200,value:"false",options:l,data:{type:"select",daily:e,row:i}}]}),this._rows[e]={[i]:{save:!1}}}for(const e of this._dailies)try{const i=await we.call(this,e);t.push(i)}catch(t){je.error("error.unexpected"),console.error(t),console.error(`The error occured during templating of ${e.key}`)}const n=[],r=[];for(const e of t)e.rows.length>1?r.push(e):e.rows.length&&n.push(e);return n.sort(((e,t)=>t.rows[0].order-e.rows[0].order)),r.sort(((e,t)=>e.rows.length-t.rows.length)),mergeObject(super.getData(e),{i18n:je,dump:({value:e,placeholder:t,data:i})=>{let a="";return e&&(a+=` value="${e}"`),t&&(a+=` placeholder="${t}"`),Object.entries(i).forEach((([e,t])=>a+=` data-${e}="${t}"`)),a&&(a+=" "),a},rows:n,groups:r})}render(e,t){return this._randomInterval&&clearInterval(this._randomInterval),this.element.find("select.random")&&(this._randomInterval=setInterval((()=>{this.element.find("select.random").each(((e,t)=>{t.selectedIndex=(t.selectedIndex+1)%t.options.length}))}),2e3)),super.render(e,t)}close(e){return this._randomInterval&&clearInterval(this._randomInterval),super.close(e)}activateListeners(e){super.activateListeners(e),e.find("[data-action=clear]").on("click",this.#e.bind(this)),e.find("[data-action=accept]").on("click",this.#t.bind(this)),e.find("[data-action=cancel]").on("click",this.#i.bind(this)),e.find(".combo select").on("change",this.#a.bind(this)),e.find(".combo input").on("change",this.#s.bind(this)),e.find("[data-action=search]").on("click",this.#n.bind(this)),e.find("[data-action=alert]").on("click",this.#r.bind(this))}async _onDrop(e){const t=m("interface.error.drop");let i=e.target;i instanceof HTMLLabelElement&&(i=i.nextElementSibling);try{const a=e.dataTransfer?.getData("text/plain"),s=JSON.parse(a);if(console.log(s),!s||"Item"!==s.type||"string"!=typeof s.uuid)return t.warn("wrongDataType");const n=await fromUuid(s.uuid);if(!n)return t.warn("wrongDataType");const r=await this.#o(i);if(!r)return $e(n,i);"feat"===r.type?De.call(this,n,i,r):"spell"===r.type?Ae.call(this,n,i,r):$e(n,i)}catch(e){t.error("error.unexpected"),console.error(e),console.error("The error occured during _onDrop")}}async#r(e){e.preventDefault(),this.#l();const t=e.currentTarget.dataset,i=this.rows[t.daily][t.row],a=this.dailyArgs[t.daily];let s;try{s=await i.fix(a)}catch(e){je.error("error.unexpected"),console.error(e),console.error(`The error occured during an alert fix of '${t.daily}'`)}this.#c(),s&&this.render()}async#n(e){e.preventDefault();const t=await this.#o(e.currentTarget);t?game.pf2e.compendiumBrowser.openTab(t.type,t.search):game.pf2e.compendiumBrowser.render(!0)}async#o(e){const{daily:t,row:i}=e.dataset,a=this.rows[t]?.[i]?.filter,s=this.dailyArgs[t];if(!s||!a)return;let{search:n,drop:r,type:o}=a;return"function"==typeof n&&(n=await n(s)),"feat"===o?{type:"feat",search:Ne(this.actor,n),drop:r}:{type:"spell",search:Le(this.actor,n),drop:r}}#a(e){const t=e.currentTarget,i=t.nextElementSibling;i.dataset.input="false",i.value=t.options[t.selectedIndex].text}#s(e){const t=e.currentTarget,i=t.previousElementSibling,a=t.value.toLowerCase(),s=Array.from(i.options).map((e=>e.value)).indexOf(a);-1!==s?(i.value=a,t.value=i.options[s].text,t.dataset.input="false"):(i.value="",t.dataset.input="true")}#l(){this.element.addClass("disabled")}#c(){this.element.removeClass("disabled")}#u(){const e=[],t=this.element.find("input").filter(((e,t)=>!t.value)),i=this.element.find("input.alert");return t.length&&e.push("error.empty"),i.length&&e.push("error.unattended"),e.forEach((e=>je.warn(e))),!e.length}async#t(e){e.preventDefault(),this.#u()&&(this.#l(),await Re.call(this),this.close())}#e(e){e.preventDefault();const t=$(e.currentTarget),i=t.prevAll("input").first();i.val(""),i.attr("value",""),i.attr("data-uuid",""),t.addClass("disabled")}#i(e){e.preventDefault(),this.close()}}function Me(e){return game.modules.get(e)}const Ge=["/** @typedef {typeof ROWS[number]} TomeRow */","/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */","/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */","/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */","","const ROWS = /** @type {const} */ (['first', 'second'])","","/** @param {'adept' | 'paragon'} option */","function createChildCondition(option) {","    /** @type { BaseDailyConditionFunction<TomeGenerics>} */","    const condition = ({ item, utils }) => {","        return utils.getChoiSetRuleSelection(item, option) === 'tome'","    }","    return condition","}","","/** @type {Daily<TomeGenerics>} */","const thaumaturgeTome = {","    key: 'tome',","    item: {","        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome","    },","    children: [","        {","            slug: 'adept',","            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept","            condition: createChildCondition('adept'),","        },","        {","            slug: 'second',","            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept","            condition: createChildCondition('adept'),","        },","        {","            slug: 'intense',","            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement","        },","        {","            slug: 'paragon',","            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon","            condition: createChildCondition('paragon'),","        },","    ],","    prepare: ({ utils, actor, children }) => {","        const skillNames = utils.skillNames","        const actorLevel = actor.level","        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)","","        /** @type {TomeCustom} */","        const custom = {","            first: { options: [], rank: 1 },","            second: { options: [], rank: 1 },","        }","","        // Implement Paragon","        if (children.paragon) {","            const skills = skillNames.filter(x => actorSkills[x].rank < 4)","            custom.first = { rank: 4, options: skills }","            custom.second = { rank: 4, options: skills }","        }","        // Intense Implement or Second Adept or Implement Adept","        else if (children.intense || children.adept || children.second) {","            const masters = skillNames.filter(x => actorSkills[x].rank < 3)","","            if (actorLevel >= 9) {","                custom.first = { rank: 3, options: masters }","                custom.second = { rank: 3, options: masters }","            } else {","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 2, options: experts }","                custom.second = { rank: 3, options: masters }","            }","        }","        // Tome","        else {","            if (actorLevel >= 5) {","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 2, options: experts }","                custom.second = { rank: 2, options: experts }","            } else if (actorLevel >= 3) {","                const trained = skillNames.filter(x => actorSkills[x].rank < 1)","                const experts = skillNames.filter(x => actorSkills[x].rank < 2)","                custom.first = { rank: 1, options: trained }","                custom.second = { rank: 2, options: experts }","            } else {","                const trained = skillNames.filter(x => actorSkills[x].rank < 1)","                custom.first = { rank: 1, options: trained }","                custom.second = { rank: 1, options: trained }","            }","        }","","        return custom","    },","    rows: ROWS.map(rowName => {","        /** @type {DailyRowCombo<TomeGenerics>} */","        const row = {","            type: 'combo',","            slug: rowName,","            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),","            options: ({ custom }) => custom[rowName].options,","            labelizer: ({ utils }) => utils.skillLabel,","        }","        return row","    }),","    process: ({ custom, fields, utils, messages, addItem, addRule }) => {","        messages.addGroup('tome', 65)","","        for (const rowName of ROWS) {","            const rank = custom[rowName].rank","            let value = fields[rowName].value","","            if (fields[rowName].input === 'true') {","                const source = utils.createLoreSource({ name: value, rank })","                addItem(source)","            } else {","                const source = utils.createSkillRuleElement({ skill: value, value: rank })","                value = utils.skillLabel(value)","                addRule(source)","            }","","            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })","        }","    },","}","","return thaumaturgeTome"].join("\n"),We=["/** @typedef {'flexibility' | 'improved'} FlexibilityRow */","/** @typedef {'improved'} FlexibilityChild */","/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */","","/**"," * @param {FlexibilityRow} slug"," * @param {number} level"," * @param {FlexibilityChild} [child]"," */","function createRow(slug, level, child) {","    /** @type {DailyRowDrop<FlexibilityGenerics>} */","    const row = {","        type: 'drop',","        label: `PF2E.Level${level}`,","        slug,","        filter: {","            type: 'feat',","            search: {","                feattype: ['class'],","                traits: {","                    values: ['fighter'],","                },","                level,","            },","        },","    }","    if (child) row.childPredicate = [child]","    return row","}","","/** @type {Daily<FlexibilityGenerics>} */","const combatFlexibility = {","    key: 'flexibility',","    item: {","        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility","    },","    children: [","        {","            slug: 'improved',","            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility","        },","    ],","    rows: [","        createRow('flexibility', 8), //","        createRow('improved', 14, 'improved'),","    ],","    process: async ({ utils, fields, addFeat, messages, children }) => {","        const uuid = fields.flexibility.uuid","        const source = await utils.createFeatSource(uuid)","        addFeat(source)","        messages.add('feats', { uuid })","","        if (children.improved) {","            const uuid = fields.improved.uuid","            const source = await utils.createFeatSource(uuid)","            addFeat(source, children.improved)","            messages.add('feats', { uuid })","        }","    },","}","","return combatFlexibility"].join("\n"),ze=["/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */","/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */","/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */","","const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])","","/**"," * @param {CharacterPF2e} actor"," * @param {MagicTradition} tradition"," */","function getSpellcastingTraditionDetails(actor, tradition) {","    let maxSlot = 1","    let maxTradition = 0","","    for (const entry of actor.spellcasting) {","        if ('pf2e-staves' in entry.flags) continue // we skip staff entries","","        const slots = entry.system.slots","        for (const key in slots) {","            const slot = slots[key]","            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))","        }","","        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)","    }","","    return { maxSlot: Math.min(maxSlot, 10), maxTradition }","}","","/** @type {Daily<SavantGenerics>} */","const scrollSavant = {","    key: 'savant',","    item: {","        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant","    },","    prepare: ({ actor }) => {","        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')","        return {","            first: { level: maxSlot - 2, condition: true },","            second: { level: maxSlot - 3, condition: true },","            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },","            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },","        }","    },","    rows: ROWS.map(rowName => {","        /** @type {DailyRowDrop<SavantGenerics>} */","        const row = {","            type: 'drop',","            slug: rowName,","            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,","            filter: {","                type: 'spell',","                search: ({ custom }) => ({","                    category: ['spell'],","                    traditions: ['arcane'],","                    level: custom[rowName].level,","                }),","            },","            condition: ({ custom }) => custom[rowName].condition,","        }","        return row","    }),","    process: async ({ utils, fields, custom, addItem, messages }) => {","        for (const field of Object.values(fields)) {","            const uuid = field.uuid","            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })","            addItem(source)","            messages.add('scrolls', { uuid, label: source.name })","        }","    },","}","","return scrollSavant"].join("\n"),Ue=["/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */","/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */","/** @typedef {[MindRow, {}, MindChild]} MindGenerics */","","const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'","","const WEAPON_BASE_TYPES = {","    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },","    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },","    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },","    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },","}","","const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {","    slashing: 'sword',","    piercing: 'spear',","    bludgeoning: 'club',","}","","const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']","","const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)","","const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']","","const WEAPON_GREATER_RUNES = [","    'anarchic',","    'axiomatic',","    'greaterCorrosive',","    'greaterDisrupting',","    'greaterFlaming',","    'greaterFrost',","    'greaterShock',","    'greaterThundering',","    'holy',","    'unholy',","]","","/** @type {Daily<MindGenerics>} */","const mindSmith = {","    key: 'mindsmith',","    item: {","        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication","    },","    children: [","        {","            slug: 'weapon',","            uuid: MIND_WEAPON_UUID, // Mind Weapon","        },","        {","            slug: 'mental',","            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge","        },","        {","            slug: 'runic',","            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing","        },","        {","            slug: 'advanced',","            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing","        },","    ],","    rows: [","        {","            type: 'alert',","            slug: 'alert',","            message: 'Missing Mind Weapon',","            fix,","            childPredicate: [{ not: 'weapon' }],","        },","        {","            type: 'select',","            slug: 'smith',","            label: 'Mind Smith',","            options: WEAPON_DAMAGE_TYPES,","            labelizer: ({ utils }) => utils.damageLabel,","            childPredicate: ['weapon'],","        },","        {","            type: 'select',","            slug: 'mental',","            label: 'Mental Forge',","            options: WEAPON_TRAITS,","            labelizer: ({ utils }) => utils.weaponTraitLabel,","            childPredicate: ['weapon', 'mental'],","        },","        {","            type: 'select',","            slug: 'runic',","            label: 'Runic Smithing',","            options: WEAPON_RUNES,","            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,","            childPredicate: ['weapon', 'runic', { not: 'advanced' }],","            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),","        },","        {","            type: 'select',","            slug: 'advanced',","            label: 'Runic Smithing',","            options: WEAPON_GREATER_RUNES,","            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,","            childPredicate: ['weapon', 'advanced'],","            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),","        },","    ],","    process: ({ children, updateItem, fields, messages, item, utils }) => {","        const weapon = children.weapon","        if (!weapon) return","","        messages.addGroup('mindsmith')","","        const selected = /** @type {WeaponDamage} */ fields.smith.value","        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })","        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })","","        if (children.mental) {","            const selected = fields.mental.value","            const traits = deepClone(weapon._source.system.traits?.value ?? [])","            if (!traits.includes(selected)) traits.push(selected)","            updateItem({ _id: weapon.id, 'system.traits.value': traits })","            messages.add('mindsmith', {","                selected: utils.weaponTraitLabel(selected),","                uuid: children.mental.uuid,","                label: 'mentalforge',","            })","        }","","        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {","            const child = children.advanced ?? children.runic","            const freeSlot = utils.getFreePropertyRuneSlot(weapon)","            const field = fields.advanced ?? fields.runic","            const selected = field.value","","            if (!weapon.system.runes.property.includes(selected)) {","                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })","                messages.add('mindsmith', {","                    selected: utils.weaponPropertyRunesLabel(selected),","                    uuid: child.uuid,","                    label: 'runicmind',","                })","            }","        }","    },","    rest: ({ item, sourceId, updateItem }) => {","        if (sourceId !== MIND_WEAPON_UUID) return","","        let traits = item._source.system.traits?.value ?? []","        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))","        updateItem({ _id: item.id, 'system.traits.value': traits })","","        const runeSlot = item.getFlag('world', 'runeSlot')","        if (runeSlot) {","            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })","        }","    },","}","","const OPTIONS = {","    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',","    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',","    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',","    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',","}","","/** * @param {DailyValueArgs<MindGenerics>} args */","async function fix({ actor }) {","    let content =","        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`","","    for (const [key, label] of Object.entries(OPTIONS)) {","        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`","    }","","    const weapon = await Dialog.wait(","        {","            title: 'Mind Weapon',","            content,","            buttons: {","                yes: {","                    icon: `<i class='fas fa-save'></i>`,","                    label: 'Accept',","                    callback: onWeaponSelected,","                },","                no: {","                    icon: `<i class='fas fa-times'></i>`,","                    label: 'Cancel',","                    callback: () => null,","                },","            },","            close: () => null,","        },","        {},","        { id: 'pf2e-dailies-weapon', width: 600 }","    )","","    if (weapon) {","        await actor.createEmbeddedDocuments('Item', [weapon])","        return true","    }","","    return false","}","","/** @params {JQuery} html */","async function onWeaponSelected(html) {","    const selection = html.find('[name=type]:checked').val()","    if (!selection) {","        ui.notifications.warn('You must select one weapon base type.')","        return","    }","","    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()","    if (!weapon) {","        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)","        return","    }","","    const stats = WEAPON_BASE_TYPES[selection]","","    setProperty(weapon, 'system.damage.die', stats.die)","    setProperty(weapon, 'system.traits.value', stats.traits.slice())","    setProperty(weapon, 'system.usage.value', stats.usage)","","    return weapon","}","","return mindSmith"].join("\n"),Be=m("customs"),Ve=["default","trainedSkill","trainedLore","language","resistance","feat","spell"],qe=["flexibility","savant","tome","mind"];class DailyCustoms extends FormApplication{_selectedTemplate="default";_selectedDaily="";_monaco=null;constructor(){super()}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-dailies-customs",title:Be("title"),template:a("customs.hbs"),submitOnChange:!1,submitOnClose:!1,closeOnSubmit:!1,scrollY:[".left .list"]})}async _updateObject(e,t){}async getData(e){const t=s("customDailies"),i=t.find((e=>e.key===this._selectedDaily))?.code,a=this._selectedTemplate,n=Me("pf2e-dailies-ext"),r=n?.active&&isNewerVersion(Ze,n.version)?{version:Ze}:"";return mergeObject(super.getData(e),{i18n:Be,template:a,templates:Ve,daily:this._selectedDaily,code:i,customs:t,examples:qe,isExample:qe.includes(a),monaco:n?.active,newVersion:r})}activateListeners(e){super.activateListeners(e),this._monaco?.dispose();const t=Me("pf2e-dailies-ext")?.api,i=e.find(".code")[0];if(t&&i){const a=e.find(".monaco .placeholder")[0];this._monaco=t.createEditor(a,i.value),this._monaco.onDidChangeModelContent(debounce((()=>i.value=this._monaco.getValue()),200))}else this._monaco=null;e.find("[data-action=select-template]").on("change",this.#d.bind(this)),e.find("[data-action=create-template]").on("click",this.#m.bind(this)),e.find("[data-action=create-daily]").on("click",this.#p.bind(this)),e.find(".row[data-key]").on("click",this.#f.bind(this)),e.find("[data-action=delete-daily]").on("click",this.#y.bind(this)),e.find("[data-action=save-code]").on("click",this.#h.bind(this))}get code(){return this.form.querySelector(".window-content .code")?.value}async#h(e){e.preventDefault();const t=this.code,i=this._selectedDaily;if(!i||!t)return;const a=s("customDailies"),r=a.filter((e=>e.key!==i));try{const e=new de(t),s=(await e()).key;if("string"!=typeof s)return f("invalidKey");if(r.find((e=>e.key===s)))return f("duplicate");const o=a.findIndex((e=>e.key===i));if(o<0)return;a.splice(o,1,{key:s,code:t}),await n("customDailies",a),Be.info("saved",{daily:s}),this._selectedDaily=s,this.render()}catch(e){y("error.unexpected"),console.error(e),console.error(`The error occured while testing the custom daily ${i}`)}}async#y(e){if(e.preventDefault(),e.stopPropagation(),!await Dialog.confirm({title:Be("delete.title"),content:Be("delete.content")}))return;const t=e.currentTarget.dataset.key,i=s("customDailies").filter((e=>e.key!==t));await n("customDailies",i),Be.info("deleted",{daily:t}),this.#p()}#p(){this._selectedDaily="",this._selectedTemplate="default",this.render()}#f(e){e.preventDefault(),this._selectedDaily=e.currentTarget.dataset.key,this.render()}async#m(e){e.preventDefault();const t=this._selectedTemplate,i=s("customDailies"),a=new FormData(this.form),r=Object.fromEntries(a),o=qe.includes(t);let l,{key:c,uuid:u,label:d}=r;if(o)c=t;else if(!c||!u)return Be.warn("template.noEmpty");if(i.find((e=>e.key===c)))return f("error.duplicate");if("trainedSkill"===t){const e=oe(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"SkillGenerics")}else if("trainedLore"===t){const e=le(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"SkillGenerics")}else if("language"===t){const e=Y(c,u,d);l=this.#g(e,{key:c,uuid:u,label:d},"LanguageGenerics")}else if("resistance"===t){const e=Je(r.resistance),t=He(r.resistances);if(""===e||!t.length)return Be.warn("template.noEmpty");if("number"==typeof e&&e<1)return Be.warn("template.badResistance");const i=ne(c,u,t,e,d);l=this.#g(i,{key:c,uuid:u,label:d,resistance:e,resistances:t},"ResistanceGenerics")}else if("feat"===t){const e=He(r.traits),t={feattype:He(r.feattype),level:Je(r.level)||{min:0,max:20}};e.length&&(t.traits={values:e,conjunction:"and"});const i=q(c,u,t,d);l=this.#g(i,{key:c,uuid:u,label:d},"FeatGenerics")}else if("spell"===t){const e=Number(r.level)||void 0,t=He(r.traits);let i=r.levels.split(",").map((e=>e.trim()));i=1===i.length?Je(i[0]):i.filter((e=>e)).map((e=>Number(e))).filter((e=>!isNaN(e)));const a={category:He(r.category),traditions:He(r.traditions),level:i||[]};t.length&&(a.traits={values:t,conjunction:"and"});const s=W(c,u,a,e,d);l=this.#g(s,{key:c,uuid:u,label:d,level:e},"SpellGenerics")}else if("tome"===t)l=Ge;else if("flexibility"===t)l=We;else if("savant"===t)l=ze;else if("mind"===t)l=Ue;else{const e={key:c,label:d,item:{uuid:u},rows:[],process:()=>{}};l=this.#g(e,{key:c,uuid:u,label:d})}i.push({key:c,code:l}),await n("customDailies",i),this._selectedDaily=c,this.render()}#g(e,t,i){const a="____PLACEHOLDER____",s=[];let n=JSON.stringify(e,((e,t)=>"function"==typeof t?(s.push(t),a):t),4);n=n.replace(new RegExp('"'+a+'"',"g"),(()=>{const e=s.shift()?.toString();return e?.replace(/( {5,})/g,(e=>e.slice(4)))??""}));let r="";for(const[e,i]of Object.entries(t))r+="string"==typeof i?`const ${e} = '${i}';\n`:"object"==typeof i?`const ${e} = ${JSON.stringify(i)};\n`:`const ${e} = ${i};\n`;return`${r}\n/** @type {${i?`Daily<${i}>`:"Daily"}} */\nconst daily = ${n};\n\nreturn daily;`}#d(e){e.preventDefault(),this._selectedDaily="",this._selectedTemplate=e.currentTarget.value,this.render()}}function He(e){return e.split(",").map((e=>e.trim())).filter((e=>e))}function Je(e){if("number"==typeof e)return e;if("level"===(e=e.trim())||"half"===e)return e;const t=Number(e);return isNaN(t)?"":t}const Ye="pf2e-dailies";t||(t=Ye);const Ze="1.1.0";Hooks.on("pf2e.restForTheNight",(async function(e){const i=[],a=[];for(const t of e.items){if(o(t,"temporary")){if(a.push(t.id),t.isOfType("feat")){const e=o(t,"grantedBy");if(e){const a=`flags.pf2e.itemGrants.-=${E(t.name,{camel:"dromedary"})}`;i.push({_id:e,[a]:!0})}}continue}const e=l(t);if(e){const a=ge(e);a?.rest&&await a.rest({item:t,sourceId:e,updateItem:e=>i.push(e)})}const s=deepClone(t._source.system.rules);let n=!1;for(let e=s.length-1;e>=0;e--)Ye in s[e]&&(s.splice(e,1),n=!0);n&&i.push({_id:t.id,"system.rules":s})}var s;i.length&&await e.updateEmbeddedDocuments("Item",i),a.length&&await e.deleteEmbeddedDocuments("Item",a),await(s=e,"rested",!0,s.setFlag(t,"rested",true))})),Hooks.on("renderCharacterSheetPF2e",(function(e,t){const i=e.actor;i.isOwner&&function(e){return e.familiar||se(e)?.uses.value||he(e).length}(i)&&t.find("aside .sidebar .hitpoints .hp-small").append(`<a class="roll-icon dailies" data-tooltip="${c("sheet.title")}"><i class="fas fa-mug-saucer"></i></a>`).find(".dailies").on("click",(()=>function(e){if(!0!==o(e,"rested"))return f("error.unrested");new DailiesInterface(e).render(!0)}(i)))})),Hooks.once("setup",(()=>{r({name:"customDailies",type:Array,default:[],onChange:ye}),r({name:"familiar",type:String,default:"",config:!0}),function(e){const a=e.name;e.name=i("menus",a,"name"),e.label=i("menus",a,"label"),e.hint=i("menus",a,"hint"),e.restricted=e.restricted??!0,e.icon=e.icon??"fas fa-cogs",game.settings.registerMenu(t,a,e)}({name:"customs",type:DailyCustoms})})),Hooks.once("ready",(async()=>{await ye()}))})();
//# sourceMappingURL=main.js.map