{"version":3,"file":"main.js","mappings":"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ACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WCpGG,SAASC,EAAWpE,GACvB,OAAKA,EACEA,EAAI,GAAGyC,cAAgBzC,EAAI0C,MAAM,GADvB,EAErB,CCXO,SAAS2B,EAAyCC,EAAeC,GACpE,MAAMC,EAAmB,GAEzB,GAAIF,GAASC,EACT,IAAK,IAAIE,EAAIH,EAAOG,GAAKF,EAAKE,IAAKD,EAAOE,KAAKD,QAE/C,IAAK,IAAIA,EAAIH,EAAOG,GAAKF,EAAKE,IAAKD,EAAOE,KAAKD,GAGnD,OAAOD,CACX,CCHA,MAAMG,EAAkB,+BAQXC,EAAQ,CAEbC,iBACA,OAAOb,EAAiBtB,OAC5B,EACAoC,WAAaC,GACFnH,KAAKwB,KAAKH,SAAS+F,OAAOC,KAAKC,UAAUH,IAEpDI,uBAAwB,EAAGJ,QAAOhH,QAAOqH,OAAO,UAAWC,gBACvD,MAAMC,EAAqB,CACvB5I,IAAK,mBACL0I,OACA9H,KAAM,iBAAiByH,SACvBhH,SAGJ,OADIsH,GAAaA,EAAUE,SAAQD,EAAKD,UAAYA,GAC7CC,CAAI,EAEfE,iBAAkB,EAAGrH,OAAMsH,WACe,CAClCnF,KAAM,OACNoF,IAAK,4CACLvH,OACAwH,OAAQ,CAAEC,WAAY,CAAE7H,MAAO0H,MAKnCI,oBACA,OAAO1B,EAAczB,OACzB,EACAoD,cAAgBC,GACLnI,K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,wDACA,aACA,YACA,8BACA,sFACA,wDACA,aACA,YACA,+BACA,uFACA,aACA,YACA,+BACA,2FACA,0DACA,aACA,SACA,iDACA,8CACA,yCACA,wGACA,GACA,oCACA,2BACA,+CACA,gDACA,YACA,GACA,+BACA,kCACA,6EACA,0DACA,2DACA,YACA,kEACA,4EACA,8EACA,GACA,qCACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,kBACA,iBACA,qCACA,kFACA,+DACA,gEACA,4CACA,kFACA,kFACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,GACA,wBACA,SACA,kCACA,qDACA,wBACA,6BACA,6BACA,0FACA,gEACA,0DACA,YACA,qBACA,UACA,4EACA,wCACA,GACA,wCACA,gDACA,gDACA,GACA,sDACA,+EACA,kCACA,uBACA,6FACA,kDACA,kCACA,gBACA,GACA,6FACA,YACA,SACA,IACA,GACA,0BACFzlB,KAAK,MC/HM0O,GAAc,CACvB,8DACA,gDACA,+EACA,GACA,MACA,kCACA,2BACA,uCACA,MACA,2CACA,uDACA,oBACA,wBACA,uCACA,gBACA,oBACA,4BACA,wBACA,uCACA,4BACA,2CACA,qBACA,yBACA,iBACA,aACA,QACA,8CACA,iBACA,IACA,GACA,4CACA,8BACA,0BACA,cACA,wFACA,SACA,kBACA,YACA,gCACA,8FACA,aACA,SACA,cACA,0CACA,iDACA,SACA,2EACA,+CACA,4DACA,0BACA,0CACA,GACA,mCACA,gDACA,gEACA,iDACA,8CACA,YACA,SACA,IACA,GACA,4BACF1O,KAAK,MC/DM0lB,GAAS,CAClB,sEACA,0FACA,iEACA,GACA,6EACA,GACA,MACA,kCACA,uCACA,MACA,+DACA,sBACA,2BACA,GACA,gDACA,8EACA,GACA,2CACA,qCACA,sCACA,8EACA,YACA,GACA,+FACA,QACA,GACA,8DACA,IACA,GACA,uCACA,yBACA,qBACA,cACA,+EACA,SACA,gCACA,6FACA,mBACA,8DACA,+DACA,2FACA,4FACA,YACA,SACA,kCACA,sDACA,wBACA,4BACA,6BACA,gFACA,wBACA,iCACA,6CACA,2CACA,8CACA,oDACA,sBACA,iBACA,oEACA,YACA,qBACA,UACA,yEACA,uDACA,sCACA,2GACA,8BACA,oEACA,YACA,SACA,IACA,GACA,uBACF1lB,KAAK,MC1EM2lB,GAAO,CAChB,gFACA,yEACA,0DACA,GACA,gFACA,GACA,8BACA,iFACA,wEACA,+DACA,wEACA,IACA,GACA,sEACA,yBACA,yBACA,2BACA,IACA,GACA,6EACA,GACA,yDACA,GACA,8FACA,GACA,iCACA,kBACA,mBACA,0BACA,2BACA,wBACA,sBACA,sBACA,2BACA,cACA,gBACA,IACA,GACA,qCACA,sBACA,wBACA,cACA,uFACA,SACA,kBACA,YACA,8BACA,qDACA,aACA,YACA,8BACA,4FACA,aACA,YACA,6BACA,yFACA,aACA,YACA,gCACA,kGACA,aACA,SACA,cACA,YACA,6BACA,6BACA,8CACA,mBACA,mDACA,aACA,YACA,8BACA,6BACA,mCACA,4CACA,2DACA,0CACA,aACA,YACA,8BACA,8BACA,qCACA,sCACA,gEACA,oDACA,aACA,YACA,8BACA,6BACA,uCACA,qCACA,wEACA,wEACA,8FACA,aACA,YACA,8BACA,gCACA,uCACA,6CACA,wEACA,sDACA,8FACA,aACA,SACA,8EACA,yCACA,8BACA,GACA,yCACA,GACA,0EACA,wHACA,oHACA,GACA,iCACA,mDACA,kFACA,oEACA,4EACA,0CACA,8DACA,8CACA,wCACA,iBACA,YACA,GACA,4FACA,gEACA,qEACA,4DACA,2CACA,GACA,sEACA,6HACA,8CACA,0EACA,wCACA,0CACA,qBACA,gBACA,YACA,SACA,kDACA,oDACA,GACA,+DACA,0EACA,sEACA,GACA,6DACA,0BACA,iHACA,YACA,SACA,IACA,GACA,oBACA,8IACA,kHACA,uEACA,iHACA,IACA,GACA,sDACA,kCACA,oBACA,iJACA,GACA,4DACA,8FACA,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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/api.ts","webpack:///./src/data/spell.ts","webpack:///./src/data/ace.ts","webpack:///./src/data/chain.ts","webpack:///./src/data/feat.ts","webpack:///./src/data/flexibility.ts","webpack:///./src/data/language.ts","webpack:///./src/data/mind.ts","webpack:///./src/data/rations.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/data/resistance.ts","webpack:///./src/data/savant.ts","webpack:///./src/data/skill.ts","webpack:///./src/data/tome.ts","webpack:///../../../../foundryVTT-projects/@utils/function.ts","webpack:///./src/dailies.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/predicate.ts","webpack:///./src/apps/interface/data.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/data/familiar.ts","webpack:///./src/apps/interface/process.ts","webpack:///./src/apps/interface/shared.ts","webpack:///./src/apps/interface.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///./src/apps/customs/tome.ts","webpack:///./src/apps/customs/flexibility.ts","webpack:///./src/apps/customs/savant.ts","webpack:///./src/apps/customs/mind.ts","webpack:///./src/apps/customs.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<\r\n    TType extends number | string | boolean | object | Function,\r\n    TChoices extends Record<string, unknown> | undefined\r\n>(options: Omit<SettingRegistration<TType, TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown> }) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TType, TChoices>(MODULE_ID, name, options as SettingRegistration<TType, TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocument) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","const dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\n/**\r\n * Normal Level Based DCs\r\n * @param level\r\n * @param proficiencyWithoutLevel\r\n */\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}): number {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') {\r\n        return 'hard'\r\n    } else if (rarity === 'rare') {\r\n        return 'very hard'\r\n    } else if (rarity === 'unique') {\r\n        return 'incredibly hard'\r\n    } else {\r\n        return 'normal'\r\n    }\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n\r\nexport function documentUuidFromTableResult(result: TableResult) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","import { adjustDCByRarity, calculateDC } from '@utils/pf2e/dc'\r\nimport { MAGIC_TRADITIONS } from '@utils/pf2e/spell'\r\nimport { setHasElement } from '@utils/pf2e/utils'\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { cra: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/**\r\n * Extract all traits from an item, that match a magic tradition\r\n */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function getChoiSetRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nconst RUNE_PROPERTY_KEYS = ['propertyRune1', 'propertyRune2', 'propertyRune3', 'propertyRune4'] as const\r\n\r\nexport function getFreePropertyRuneSlot(item: WeaponPF2e | ArmorPF2e): null | typeof RUNE_PROPERTY_KEYS[number] {\r\n    const potency = item.system.potencyRune.value\r\n    if (potency === null) return null\r\n\r\n    for (let i = 0; i < potency; i++) {\r\n        const property = RUNE_PROPERTY_KEYS[i]\r\n        if (!item.system[property].value) return property\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nconst PHYSICAL_ITEM_TYPES = new Set(['armor', 'backpack', 'book', 'consumable', 'equipment', 'treasure', 'weapon'] as const)\r\n\r\n/** Checks if the given item data is a physical item with a quantity and other physical fields. */\r\nexport function isPhysicalData(source: ItemSourcePF2e): source is PhysicalItemSource\r\nexport function isPhysicalData(source: PreCreate<ItemSourcePF2e>): source is PreCreate<PhysicalItemSource>\r\nexport function isPhysicalData(source: ItemSourcePF2e | PreCreate<ItemSourcePF2e>): boolean {\r\n    return setHasElement(PHYSICAL_ITEM_TYPES, source.type)\r\n}\r\n\r\nexport function hasInvestedProperty(source: ItemSourcePF2e): source is MagicItemSource {\r\n    return isPhysicalData(source) && 'invested' in source.system.equipped\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n\r\nexport function getTranslatedSkills() {\r\n    const skillList = (CONFIG as ConfigPF2e).PF2E.skillList\r\n    return Object.entries(skillList).reduce((result: Record<string, string>, [key, value]) => {\r\n        return {\r\n            ...result,\r\n            [key]: game.i18n.localize(value).toLocaleLowerCase(game.i18n.lang),\r\n        }\r\n    }, {})\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str?: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { getChoiSetRuleSelection, getFreePropertyRuneSlot } from '@utils/pf2e/item'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { capitalize } from '@utils/string'\r\nimport { sequenceArray } from '@utils/utils'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\n\r\nconst halfLevelString = 'max(1,floor(@actor.level/2))'\r\n\r\ntype CreateSkillArgs = { skill: string; value: ZeroToFour | string; mode?: PredicateMode; predicate?: RawPredicate }\r\ntype CreateLanguageArgs = { language: string; mode?: PredicateMode; predicate?: RawPredicate }\r\ntype CreateLoreArgs = { name: string; rank: OneToFour }\r\ntype CreateResistanceArgs = { type: string; value: number | string | 'half'; predicate?: RawPredicate }\r\ntype CreateScrollArgs = { uuid: ItemUUID; level?: OneToTen }\r\n\r\nexport const utils = {\r\n    // Skills\r\n    get skillNames() {\r\n        return SKILL_LONG_FORMS.slice()\r\n    },\r\n    skillLabel: (skill: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.skillList[skill as SkillLongForm])\r\n    },\r\n    createSkillRuleElement: ({ skill, value, mode = 'upgrade', predicate }: CreateSkillArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: `system.skills.${skill}.rank`,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    createLoreSource: ({ name, rank }: CreateLoreArgs) => {\r\n        const data: DeepPartial<LoreSource> = {\r\n            type: 'lore',\r\n            img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n            name,\r\n            system: { proficient: { value: rank as OneToFour } },\r\n        }\r\n        return data\r\n    },\r\n    // Languages\r\n    get languageNames() {\r\n        return LANGUAGE_LIST.slice()\r\n    },\r\n    languageLabel: (language: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.languages[language as Language])\r\n    },\r\n    createLanguageRuleElement: ({ language, mode = 'add', predicate }: CreateLanguageArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: 'system.traits.languages.value',\r\n            value: language,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // resistances\r\n    resistanceLabel: (resistance: string, value?: number) => {\r\n        let str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`)\r\n        if (value) str += ` ${value}`\r\n        return str\r\n    },\r\n    createResistanceRuleElement: ({ type, value, predicate }: CreateResistanceArgs) => {\r\n        if (value === 'half') value = halfLevelString\r\n        const rule: IWRRuleElementSource = {\r\n            key: 'Resistance',\r\n            type,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // feats\r\n    createFeatSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<FeatPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a feat source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // spells\r\n    createSpellScrollSource: async ({ uuid, level }: CreateScrollArgs) => {\r\n        const source = await createSpellScroll(uuid, level ?? false, true)\r\n        if (!source) throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    createSpellSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a spell source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // Rule Elements\r\n    get halfLevelString() {\r\n        return halfLevelString\r\n    },\r\n    getChoiSetRuleSelection,\r\n    //\r\n    proficiencyLabel: (rank: ZeroToFour) => {\r\n        return game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank])\r\n    },\r\n    randomOption: async <T extends string | { value: string }>(options: T[]) => {\r\n        const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n        const result = options[roll - 1]!\r\n        if (typeof result === 'string') return result\r\n        return result.value\r\n    },\r\n    halfLevelValue: (actor: CharacterPF2e) => Math.max(1, Math.floor(actor.level / 2)),\r\n    sequenceArray,\r\n    // equipment\r\n    damageLabel: (damage: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponDamage[damage as WeaponDamage])\r\n    },\r\n    weaponTraitLabel: (trait: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponTraits[trait as WeaponTrait])\r\n    },\r\n    weaponPropertyRunesLabel: (rune: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[rune as WeaponPropertyRuneType])\r\n    },\r\n    hasFreePropertySlot: (item: WeaponPF2e | ArmorPF2e) => {\r\n        const potency = item.system.runes.potency\r\n        return potency > 0 && item.system.runes.property.length < potency\r\n    },\r\n    getFreePropertyRuneSlot,\r\n}\r\n","export type SpellGenerics = ['spell', {}, '']\r\n\r\nexport function createSpellDaily(key: string, uuid: ItemUUID, filter: DailySpellFilter = {}, level?: number, label?: string) {\r\n    const daily: Daily<SpellGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'spell',\r\n                filter: {\r\n                    type: 'spell',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ addSpell, utils, fields, messages }) => {\r\n            const uuid = fields.spell.uuid!\r\n            const source = await utils.createSpellSource(uuid)\r\n            const label = `${source.name} (Level ${level || source.system.level.value})`\r\n            addSpell(source, level)\r\n            messages.add('spells', { uuid, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","import { localizePath } from '@utils/foundry/localize'\r\nimport { createSpellDaily, SpellGenerics } from './spell'\r\n\r\nexport const TricksterAce = (() => {\r\n    const daily = createSpellDaily(\r\n        'ace',\r\n        'Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW',\r\n        {\r\n            category: ['cantrip', 'spell'],\r\n            level: 4,\r\n        },\r\n        4\r\n    )\r\n\r\n    const row = daily.rows![0] as DailyRowDropSpell<SpellGenerics>\r\n    row.filter.drop = item => {\r\n        const castTime = item.system.time.value\r\n        if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n            return { error: localizePath('interface.error.drop.wrongSpellTime'), data: { time: '10 min' } }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return daily\r\n})()\r\n","type ChainRow = typeof rows[number]\r\ntype ChainChild = 'expert' | 'master'\r\ntype ChainGenerics = [ChainRow, {}, ChainChild]\r\n\r\nconst rows = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'] as const\r\n\r\nexport function createScrollChain(key: string, uuids: [ItemUUID, ItemUUID, ItemUUID], label?: string) {\r\n    const daily: Daily<ChainGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid: uuids[0],\r\n        },\r\n        children: [\r\n            {\r\n                slug: 'expert',\r\n                uuid: uuids[1],\r\n            },\r\n            {\r\n                slug: 'master',\r\n                uuid: uuids[2],\r\n            },\r\n        ],\r\n        rows: [\r\n            createRow('first', 1), //\r\n            createRow('second', 2, 8),\r\n            createRow('third', 3, undefined, 'expert'), //\r\n            createRow('fourth', 4, 14, 'expert'),\r\n            createRow('fifth', 5, 16, 'expert'),\r\n            createRow('sixth', 6, undefined, 'master'), //\r\n            createRow('seventh', 7, 20, 'master'),\r\n        ],\r\n        process: async ({ utils, fields, addItem, messages }) => {\r\n            for (const field of Object.values(fields)) {\r\n                const uuid = field.uuid!\r\n                const level = (rows.indexOf(field.row) + 1) as OneToTen\r\n                const source = await utils.createSpellScrollSource({ uuid, level })\r\n                addItem(source)\r\n                messages.add('scrolls', { uuid, label: source.name })\r\n            }\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nfunction createRow(slug: ChainRow, level: OneToTen, minActorLevel?: number, child?: ChainChild) {\r\n    const row: DailyRow<ChainGenerics> = {\r\n        type: 'drop',\r\n        slug,\r\n        label: `PF2E.SpellLevel${level}`,\r\n        filter: {\r\n            type: 'spell',\r\n            search: {\r\n                category: ['spell'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (minActorLevel) row.condition = ({ actor }) => actor.level >= minActorLevel\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","type FeatGenerics = ['feat', {}, '']\r\n\r\nexport function createFeatDaily(key: string, uuid: ItemUUID, filter: DailyFeatFilter = {}, label?: string) {\r\n    const daily: Daily<FeatGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'feat',\r\n                filter: {\r\n                    type: 'feat',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, addFeat, messages }: DailyProcessFunctionArgs<FeatGenerics>) => {\r\n            const uuid = fields.feat.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source)\r\n            messages.add('feats', { uuid })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type FlexibilityRow = 'flexibility' | 'improved'\r\ntype FlexibilityChild = 'improved'\r\ntype FlexibilityGenerics = [FlexibilityRow, {}, FlexibilityChild]\r\n\r\nexport const combatFlexibility: Daily<FlexibilityGenerics> = {\r\n    key: 'flexibility',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'improved',\r\n            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        },\r\n    ],\r\n    rows: [\r\n        createRow('flexibility', 8), //\r\n        createRow('improved', 14, 'improved'),\r\n    ],\r\n    process: async ({ utils, fields, addFeat, messages, children }) => {\r\n        const uuid = fields.flexibility.uuid!\r\n        const source = await utils.createFeatSource(uuid)\r\n        addFeat(source)\r\n        messages.add('feats', { uuid })\r\n\r\n        if (children.improved) {\r\n            const uuid = fields.improved.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source, children.improved)\r\n            messages.add('feats', { uuid })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createRow(slug: FlexibilityRow, level: number, child?: FlexibilityChild) {\r\n    const row: DailyRowDrop<FlexibilityGenerics> = {\r\n        type: 'drop',\r\n        label: `PF2E.Level${level}`,\r\n        slug,\r\n        filter: {\r\n            type: 'feat',\r\n            search: {\r\n                feattype: ['class'],\r\n                traits: {\r\n                    values: ['fighter'],\r\n                },\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","type LanguageGenerics = ['language', {}, '']\r\n\r\nexport function createLanguageDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<LanguageGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'select',\r\n                slug: 'language',\r\n                options: ({ actor, utils }) => {\r\n                    const actorLanguages = actor.system.traits.languages.value\r\n                    return utils.languageNames.filter(x => !actorLanguages.includes(x)).sort()\r\n                },\r\n                labelizer: ({ utils }) => utils.languageLabel,\r\n            },\r\n        ],\r\n        process: ({ addRule, utils, fields, messages }) => {\r\n            const value = fields.language.value\r\n            const source = utils.createLanguageRuleElement({ language: value })\r\n            addRule(source)\r\n            messages.add('languages', { uuid, selected: utils.languageLabel(value), label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","import { MODULE_ID } from '@src/main'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\n\r\ntype MindRow = 'alert' | 'smith' | 'mental' | 'runic' | 'advanced'\r\ntype MindChild = 'weapon' | 'mental' | 'runic' | 'advanced'\r\ntype MindGenerics = [MindRow, {}, MindChild]\r\n\r\nconst MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\r\n\r\nconst WEAPON_BASE_TYPES = {\r\n    '0': { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    '1': { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    '2': { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    '3': { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n}\r\n\r\nconst WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n} as Record<WeaponDamage, string>\r\n\r\nconst WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\r\n\r\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\r\n\r\nconst WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\r\n\r\nconst WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n]\r\n\r\nexport const mindSmith: Daily<MindGenerics> = {\r\n    key: 'mindsmith',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'weapon',\r\n            uuid: MIND_WEAPON_UUID, // Mind Weapon\r\n        },\r\n        {\r\n            slug: 'mental',\r\n            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\r\n        },\r\n        {\r\n            slug: 'runic',\r\n            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n        },\r\n        {\r\n            slug: 'advanced',\r\n            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            type: 'alert',\r\n            slug: 'alert',\r\n            message: () => localize('interface.alert.weapon'),\r\n            fix,\r\n            childPredicate: [{ not: 'weapon' }],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'smith',\r\n            label: () => localize('label.mindsmith'),\r\n            options: WEAPON_DAMAGE_TYPES,\r\n            labelizer: ({ utils }) => utils.damageLabel,\r\n            childPredicate: ['weapon'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'mental',\r\n            label: () => localize('label.mentalforge'),\r\n            options: WEAPON_TRAITS,\r\n            labelizer: ({ utils }) => utils.weaponTraitLabel,\r\n            childPredicate: ['weapon', 'mental'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'runic',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'advanced',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_GREATER_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'advanced'],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n    ],\r\n    process: ({ children, updateItem, fields, messages, item, utils }) => {\r\n        const weapon = children.weapon as WeaponPF2e | undefined\r\n        if (!weapon) return\r\n\r\n        messages.addGroup('mindsmith')\r\n\r\n        const selected = fields.smith.value as WeaponDamage\r\n        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\r\n\r\n        if (children.mental) {\r\n            const selected = fields.mental.value as WeaponTrait\r\n            const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n            if (!traits.includes(selected)) traits.push(selected)\r\n            updateItem({ _id: weapon.id, 'system.traits.value': traits })\r\n            messages.add('mindsmith', {\r\n                selected: utils.weaponTraitLabel(selected),\r\n                uuid: children.mental.uuid,\r\n                label: 'mentalforge',\r\n            })\r\n        }\r\n\r\n        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\r\n            const child = (children.advanced ?? children.runic) as ItemPF2e\r\n            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\r\n            const field = fields.advanced ?? fields.runic\r\n            const selected = field.value as WeaponPropertyRuneType\r\n\r\n            if (!weapon.system.runes.property.includes(selected)) {\r\n                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.${MODULE_ID}.runeSlot`]: freeSlot })\r\n                messages.add('mindsmith', {\r\n                    selected: utils.weaponPropertyRunesLabel(selected),\r\n                    uuid: child.uuid,\r\n                    label: 'runicmind',\r\n                })\r\n            }\r\n        }\r\n    },\r\n    rest: ({ item, sourceId, updateItem }) => {\r\n        if (sourceId !== MIND_WEAPON_UUID) return\r\n\r\n        let traits = item._source.system.traits?.value ?? []\r\n        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\r\n        updateItem({ _id: item.id, 'system.traits.value': traits })\r\n\r\n        const runeSlot = getFlag<string>(item, 'runeSlot')\r\n        if (runeSlot) {\r\n            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.${MODULE_ID}.-=runeSlot`]: true })\r\n        }\r\n    },\r\n}\r\n\r\nasync function fix({ actor }: DailyValueArgs<MindGenerics>) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    let content = localize('flavor')\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    const weapon = await Dialog.wait(\r\n        {\r\n            title: localize('title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('accept'),\r\n                    callback: onWeaponSelected,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('cancel'),\r\n                    callback: () => null,\r\n                },\r\n            },\r\n            close: () => null,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n\r\n    if (weapon) {\r\n        await actor.createEmbeddedDocuments('Item', [weapon])\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nasync function onWeaponSelected(html: JQuery) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    const selection = html.find('[name=type]:checked').val() as keyof typeof WEAPON_BASE_TYPES\r\n    if (!selection) {\r\n        localize.warn('error.noSelection')\r\n        return\r\n    }\r\n\r\n    const weapon = (await fromUuid<WeaponPF2e>(MIND_WEAPON_UUID))?.toObject()\r\n    if (!weapon) {\r\n        localize.warn('error.missing')\r\n        return\r\n    }\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    return weapon\r\n}\r\n","import { findItemWithSourceId } from '@utils/foundry/item'\r\n\r\nconst RATION_UUID = 'Compendium.pf2e.equipment-srd.L9ZV076913otGtiB'\r\n\r\nexport function getRations(actor: CharacterPF2e) {\r\n    return findItemWithSourceId(actor, RATION_UUID) as ConsumablePF2e | undefined\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","type ResistanceGenerics = ['resistance', {}, '']\r\n\r\nexport function createResistancelDaily(\r\n    key: string,\r\n    uuid: ItemUUID,\r\n    resistances: string[],\r\n    resistance: number | 'half' | 'level',\r\n    label?: string,\r\n    random?: boolean\r\n) {\r\n    const daily: Daily<ResistanceGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: random ? 'random' : 'select',\r\n                slug: 'resistance',\r\n                options: resistances,\r\n                labelizer: ({ utils }) => utils.resistanceLabel,\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, actor, addRule, messages }) => {\r\n            const type = random ? await utils.randomOption(resistances) : fields.resistance.value\r\n            const value =\r\n                typeof resistance === 'number' ? resistance : resistance === 'half' ? utils.halfLevelValue(actor) : actor.level\r\n            const rule = utils.createResistanceRuleElement({ type, value })\r\n            addRule(rule)\r\n            messages.add('resistances', { uuid, selected: utils.resistanceLabel(type, value), label, random })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type SavantRow = 'first' | 'second' | 'third' | 'fourth'\r\ntype SavantCustom = Record<SavantRow, { level: OneToTen; condition: boolean }>\r\ntype SavantGenerics = [SavantRow, SavantCustom, '']\r\n\r\nexport const scrollSavant: Daily<SavantGenerics> = {\r\n    key: 'savant',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\r\n    },\r\n    prepare: ({ actor }) => {\r\n        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\r\n\r\n        return {\r\n            first: { level: maxSlot - 2, condition: true },\r\n            second: { level: maxSlot - 3, condition: true },\r\n            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\r\n            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\r\n        } as SavantCustom\r\n    },\r\n    rows: (['first', 'second', 'third', 'fourth'] as const).map(rowName => {\r\n        const row: DailyRowDrop<SavantGenerics> = {\r\n            type: 'drop',\r\n            slug: rowName,\r\n            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\r\n            filter: {\r\n                type: 'spell',\r\n                search: ({ custom }) => ({\r\n                    category: ['spell'],\r\n                    traditions: ['arcane'],\r\n                    level: custom[rowName].level,\r\n                }),\r\n            },\r\n            condition: ({ custom }) => custom[rowName].condition,\r\n        }\r\n        return row\r\n    }),\r\n    process: async ({ utils, fields, custom, addItem, messages }) => {\r\n        for (const field of Object.values(fields)) {\r\n            const uuid = field.uuid!\r\n            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\r\n            addItem(source)\r\n            messages.add('scrolls', { uuid, label: source.name })\r\n        }\r\n    },\r\n}\r\n\r\nfunction getSpellcastingTraditionDetails(actor: CharacterPF2e, tradition: MagicTradition) {\r\n    let maxSlot: OneToTen = 1\r\n    let maxTradition: ZeroToFour = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4))) as OneToTen\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank) as ZeroToFour\r\n    }\r\n\r\n    return { maxSlot: Math.min(maxSlot, 10) as OneToTen, maxTradition }\r\n}\r\n","type SkillGenerics = ['skill', {}, '']\r\n\r\nexport function createTrainedSkillDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'combo',\r\n                slug: 'skill',\r\n                options: ({ actor, utils }) => {\r\n                    const actorSkills = actor.skills\r\n                    return utils.skillNames.filter(x => actorSkills[x]!.rank! < 1)\r\n                },\r\n                labelizer: ({ utils }) => utils.skillLabel,\r\n            },\r\n        ],\r\n        process: ({ fields, addItem, addRule, utils, messages }) => {\r\n            let value = fields.skill.value\r\n\r\n            if (fields.skill.input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank: 1 })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: 1 })\r\n                value = utils.skillLabel(value as SkillLongForm)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nexport function createTrainedLoreDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'input',\r\n                slug: 'skill',\r\n            },\r\n        ],\r\n        process: ({ addItem, utils, fields, messages }) => {\r\n            const value = fields.skill.value\r\n            const source = utils.createLoreSource({ name: value, rank: 1 })\r\n            addItem(source)\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type TomeRow = 'first' | 'second'\r\ntype TomeChild = 'adept' | 'second' | 'intense' | 'paragon'\r\ntype TomeCustom = Record<TomeRow, { rank: OneToFour; options: string[] }>\r\ntype TomeGenerics = [TomeRow, TomeCustom, TomeChild]\r\n\r\nexport const thaumaturgeTome: Daily<TomeGenerics> = {\r\n    key: 'tome',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'adept',\r\n            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'second',\r\n            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'intense',\r\n            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n        },\r\n        {\r\n            slug: 'paragon',\r\n            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n            condition: createChildCondition('paragon'),\r\n        },\r\n    ],\r\n    prepare: ({ utils, actor, children }) => {\r\n        const skillNames = utils.skillNames\r\n        const actorLevel = actor.level\r\n        const actorSkills = actor.skills as Record<SkillLongForm, { rank: ZeroToFour }>\r\n\r\n        const custom: TomeCustom = {\r\n            first: { options: [], rank: 1 },\r\n            second: { options: [], rank: 1 },\r\n        }\r\n\r\n        // Implement Paragon\r\n        if (children.paragon) {\r\n            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\r\n            custom.first = { rank: 4, options: skills }\r\n            custom.second = { rank: 4, options: skills }\r\n        }\r\n        // Intense Implement or Second Adept or Implement Adept\r\n        else if (children.intense || children.adept || children.second) {\r\n            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\r\n\r\n            if (actorLevel >= 9) {\r\n                custom.first = { rank: 3, options: masters }\r\n                custom.second = { rank: 3, options: masters }\r\n            } else {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 3, options: masters }\r\n            }\r\n        }\r\n        // Tome\r\n        else {\r\n            if (actorLevel >= 5) {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else if (actorLevel >= 3) {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 1, options: trained }\r\n            }\r\n        }\r\n\r\n        return custom\r\n    },\r\n    rows: (['first', 'second'] as const).map(rowName => {\r\n        const row: DailyRow<TomeGenerics> = {\r\n            type: 'combo',\r\n            slug: rowName,\r\n            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\r\n            options: ({ custom }) => custom[rowName].options,\r\n            labelizer: ({ utils }) => utils.skillLabel,\r\n        }\r\n        return row\r\n    }),\r\n    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\r\n        messages.addGroup('tome', 65)\r\n\r\n        for (const rowName of ['first', 'second'] as const) {\r\n            const rank = custom[rowName].rank\r\n            let value = fields[rowName].value\r\n\r\n            if (fields[rowName].input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: rank })\r\n                value = utils.skillLabel(value)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createChildCondition(option: 'adept' | 'paragon') {\r\n    return function ({ item, utils }: BaseDailyValueArgs<TomeGenerics>) {\r\n        return utils.getChoiSetRuleSelection(item, option) === 'tome'\r\n    }\r\n}\r\n","export const AsyncFunction = async function () {}.constructor as ConstructorOf<(...args: any[]) => Promise<any>>\r\n","import { getSourceId } from '@utils/foundry/flags'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { utils } from './api'\r\nimport { TricksterAce } from './data/ace'\r\nimport { createScrollChain } from './data/chain'\r\nimport { createFeatDaily } from './data/feat'\r\nimport { combatFlexibility } from './data/flexibility'\r\nimport { createLanguageDaily } from './data/language'\r\nimport { mindSmith } from './data/mind'\r\nimport { getRations } from './data/rations'\r\nimport { createResistancelDaily } from './data/resistance'\r\nimport { scrollSavant } from './data/savant'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from './data/skill'\r\nimport { thaumaturgeTome } from './data/tome'\r\nimport { AsyncFunction } from '@utils/function'\r\n\r\nconst BUILTINS = [\r\n    thaumaturgeTome,\r\n    createTrainedSkillDaily('longevity', 'Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'), // Ancestral Longevity\r\n    createTrainedSkillDaily('ageless', 'Compendium.pf2e.feats-srd.wylnETwIz32Au46y'), // Ageless Spirit\r\n    createTrainedSkillDaily('memories', 'Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'), // Ancient Memories\r\n    createTrainedSkillDaily('studies', 'Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'), // Flexible Studies\r\n    createTrainedLoreDaily('study', 'Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'), // Quick Study\r\n    createLanguageDaily('linguistics', 'Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'), // Ancestral Linguistics\r\n    createLanguageDaily('borts', 'Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'), // Bort's Blessing\r\n    createResistancelDaily(\r\n        'elementalist',\r\n        'Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS',\r\n        ['air', 'earth', 'fire', 'water'],\r\n        'half',\r\n        'elementalist'\r\n    ), // Elementalist Dedication\r\n    createResistancelDaily(\r\n        'ganzi',\r\n        'Compendium.pf2e.heritages.3reGfXH0S82hM7Gp',\r\n        ['acid', 'electricity', 'sonic'],\r\n        'half',\r\n        'ganzi',\r\n        true\r\n    ), // Ganzi\r\n    createFeatDaily('metamagical', 'Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp', {\r\n        feattype: ['class'],\r\n        traits: { values: ['metamagic', 'wizard'], conjunction: 'and' },\r\n        level: 'half',\r\n    }), // Metamagical Experimentation\r\n    combatFlexibility,\r\n    scrollSavant,\r\n    createScrollChain('esoterica', [\r\n        'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n    ]),\r\n    createScrollChain('trickster', [\r\n        'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n        'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n        'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n    ]),\r\n    TricksterAce,\r\n    mindSmith,\r\n] as unknown as Daily[]\r\n\r\ntype DailiesUUIDS = Map<ItemUUID, { daily: Daily; index?: number; condition?: BaseDailyConditionFunction }>\r\n\r\nconst BUILTINS_UUIDS: DailiesUUIDS = parseDailies(BUILTINS, 'dailies')\r\nconst UUIDS: DailiesUUIDS = new Map()\r\n\r\nfunction parseDailies(dailies: Daily[], prefix: 'dailies' | 'custom') {\r\n    const uuids: DailiesUUIDS = new Map()\r\n\r\n    for (const original of dailies) {\r\n        const daily = deepClone(original)\r\n\r\n        try {\r\n            const keyWithPrefix = `${prefix}.${daily.key}`\r\n\r\n            uuids.set(daily.item.uuid, { daily, condition: daily.item.condition })\r\n\r\n            daily.key = keyWithPrefix\r\n\r\n            if (daily.children) {\r\n                for (let i = 0; i < daily.children.length; i++) {\r\n                    const { uuid, condition } = daily.children[i]!\r\n                    uuids.set(uuid, { daily, index: i, condition })\r\n                }\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${prefix}.${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return uuids\r\n}\r\n\r\nexport async function parseCustomDailies() {\r\n    UUIDS.clear()\r\n\r\n    const CUSTOM_DAILIES: Daily[] = []\r\n\r\n    const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n    for (const { key, code } of customs) {\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            CUSTOM_DAILIES.push(daily)\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during call of custom function for ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n\r\n    const CUSTOM_UUIDS = parseDailies(CUSTOM_DAILIES, 'custom')\r\n    for (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n}\r\n\r\nexport function getDailies(actor: CharacterPF2e) {\r\n    const dailies: Record<string, ReturnedDaily> = {}\r\n\r\n    for (const item of actor.items) {\r\n        const sourceId = getSourceId(item)\r\n        if (!sourceId || (item.isOfType('physical') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { daily, index, condition } = entry\r\n        try {\r\n            if (typeof condition === 'function' && !condition({ actor, item, utils })) continue\r\n\r\n            dailies[daily.key] ??= deepClone(daily) as ReturnedDaily\r\n\r\n            if (index === undefined) {\r\n                dailies[daily.key]!.item = item\r\n            } else {\r\n                dailies[daily.key]!.children![index]!.item = item\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return Object.values(dailies).filter(daily => daily.item && daily.item instanceof Item)\r\n}\r\n\r\nexport function getDailyFromSourceId(sourceId: ItemUUID) {\r\n    return UUIDS.get(sourceId)?.daily\r\n}\r\n\r\nexport function hasAnyDaily(actor: CharacterPF2e) {\r\n    return actor.familiar || getRations(actor)?.uses.value || getDailies(actor).length\r\n}\r\n","/** Short form of type and non-null check */\r\nfunction isObject<T extends object>(value: unknown): value is DeepPartial<T>\r\nfunction isObject<T extends string>(value: unknown): value is { [K in T]?: unknown }\r\nfunction isObject(value: unknown): boolean {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n\r\n/**\r\n * Encapsulates logic to determine if a modifier should be active or not for a specific roll based\r\n * on a list of string values. This will often be based on traits, but that is not required - sneak\r\n * attack could be an option that is not a trait.\r\n * @category PF2\r\n */\r\nexport class PredicatePF2e extends Array<PredicateStatement> {\r\n    /** Is the predicate data structurally valid? */\r\n    readonly isValid: boolean\r\n\r\n    constructor(...statements: PredicateStatement[] | [PredicateStatement[]]) {\r\n        if (Array.isArray(statements[0])) {\r\n            super(...statements[0])\r\n        } else {\r\n            super(...(statements as PredicateStatement[]))\r\n        }\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements: unknown): statements is PredicateStatement[] {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static override isArray(statements: unknown): statements is PredicateStatement[] {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate: PredicateStatement[] = [], options: Set<string> | string[]): boolean {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Create a predicate from unknown data, with deprecation support for legacy objects */\r\n    static create(data: unknown, warn = false): PredicatePF2e {\r\n        if (data instanceof PredicatePF2e) return data.clone()\r\n        if (Array.isArray(data)) return new PredicatePF2e(data)\r\n        if (isObject<OldRawPredicate>(data)) {\r\n            if (warn) {\r\n                foundry.utils.logCompatibilityWarning('Predicate data must be an array', {\r\n                    mode: CONST.COMPATIBILITY_MODES.WARNING,\r\n                    since: '4.2.0',\r\n                    until: '4.5.0',\r\n                })\r\n            }\r\n\r\n            return new PredicatePF2e(convertLegacyData(data))\r\n        }\r\n\r\n        return new PredicatePF2e()\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options: Set<string> | string[]): boolean {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.error('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.isTrue(s, domain))\r\n    }\r\n\r\n    toObject(): RawPredicate {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone(): PredicatePF2e {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    private isTrue(statement: PredicateStatement, domain: Set<string>): boolean {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    private testBinaryOp(statement: BinaryOperation, domain: Set<string>): boolean {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const leftValues =\r\n                typeof left === 'number' || !Number.isNaN(Number(left))\r\n                    ? [Number(left)]\r\n                    : domainArray.flatMap(d => (d.startsWith(left) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n            const rightValues =\r\n                typeof right === 'number' || !Number.isNaN(Number(right))\r\n                    ? [Number(right)]\r\n                    : domainArray.flatMap(d => (d.startsWith(right) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encounter')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    private testCompound(statement: Exclude<PredicateStatement, Atom>, domain: Set<string>): boolean {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.isTrue(statement.if, domain) && !this.isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement: unknown): statement is PredicateStatement {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement: unknown): statement is Atom {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    private static binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement: unknown): statement is BinaryOperation {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands]: [string, unknown] = entries[0]\r\n        return (\r\n            this.binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement: unknown): statement is CompoundStatement {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement: { and?: unknown }): statement is Conjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement: { nand?: unknown }): statement is AlternativeDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement: { or?: unknown }): statement is Disjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement: { nor?: unknown }): statement is JointDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement: { not?: unknown }): statement is Negation {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement: { if?: unknown; then?: unknown }): statement is Conditional {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n\r\nfunction convertLegacyData(predicate: OldRawPredicate): RawPredicate {\r\n    const keys = Object.keys(predicate)\r\n    if (keys.length === 0) return []\r\n    if (keys.length === 1 && Array.isArray(predicate.all)) {\r\n        return deepClone(predicate.all)\r\n    }\r\n    if (keys.length === 1 && Array.isArray(predicate.any) && predicate.any.length === 1) {\r\n        return deepClone(predicate.any)\r\n    }\r\n\r\n    return deepClone(\r\n        [\r\n            predicate.all ?? [],\r\n            Array.isArray(predicate.any) ? { or: predicate.any } : [],\r\n            Array.isArray(predicate.not)\r\n                ? predicate.not.length === 1\r\n                    ? { not: predicate.not[0]! }\r\n                    : { nor: predicate.not }\r\n                : [],\r\n        ].flat()\r\n    )\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { utils } from '@src/api'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\nimport { PredicatePF2e } from '@utils/pf2e/predicate'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst templateOrders: Record<DailyRowType, number> = {\r\n    select: 100,\r\n    combo: 80,\r\n    random: 60,\r\n    alert: 40,\r\n    input: 20,\r\n    drop: 0,\r\n}\r\n\r\nexport async function getTemplate(\r\n    this: DailiesInterface,\r\n    { children = [], key, item, prepare, label, rows = [] }: ReturnedDaily\r\n) {\r\n    const actor = this.actor\r\n    const saved = (this.saved[key] = getFlag<DailySaved>(actor, key) ?? {})\r\n    const rowsObj: Record<string, DailyRow> = (this.rows[key] = {})\r\n    const childrenObj = (this.children[key] = children.reduce((children, { slug, item }) => {\r\n        children[slug] = item\r\n        return children\r\n    }, {} as DailyValueArgs['children']))\r\n\r\n    const prepareArgs: DailyPrepareArgs = {\r\n        actor,\r\n        item,\r\n        children: childrenObj,\r\n        utils,\r\n    }\r\n\r\n    const custom = (this.custom[key] = (prepare && (await prepare(prepareArgs))) || {})\r\n\r\n    const dailyArgs = (this.dailyArgs[key] = {\r\n        ...prepareArgs,\r\n        custom,\r\n    })\r\n\r\n    let groupLabel = await getProcessedValue(label, dailyArgs)\r\n    const labeled = groupLabel ? `label.${groupLabel}` : key.startsWith('dailies.') ? `label.${key.slice(8)}` : undefined\r\n    if (labeled && hasLocalization(labeled)) groupLabel = localize(labeled)\r\n\r\n    const predicates = (this.predicate[key] = children.filter(child => child.item).map(child => child.slug))\r\n\r\n    const template: DailyTemplate = {\r\n        label: groupLabel ? game.i18n.localize(groupLabel) : item.name,\r\n        rows: [],\r\n    }\r\n\r\n    for (const row of rows) {\r\n        rowsObj[row.slug] = row\r\n\r\n        const { type, slug, childPredicate = [], condition, label, save } = row\r\n\r\n        if (childPredicate.length && !PredicatePF2e.test(childPredicate, predicates)) continue\r\n        if (condition && !(await condition(dailyArgs))) continue\r\n\r\n        const savedRow = save === false || type === 'random' ? undefined : saved[slug]\r\n        const rowLabel = await getProcessedValue(label, dailyArgs)\r\n        const value =\r\n            savedRow === undefined\r\n                ? ''\r\n                : typeof savedRow !== 'object'\r\n                ? savedRow\r\n                : 'name' in savedRow\r\n                ? savedRow.name\r\n                : savedRow.selected\r\n\r\n        const rowTemplate: DailyRowTemplate = {\r\n            label: rowLabel ? game.i18n.localize(rowLabel) : '',\r\n            value,\r\n            order: templateOrders[type],\r\n            data: {\r\n                type,\r\n                daily: key,\r\n                row: slug,\r\n            },\r\n        }\r\n\r\n        if (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\r\n            const tmp = (await getProcessedValue(row.options, dailyArgs)) ?? []\r\n            if (type !== 'combo' && !tmp.length) continue\r\n\r\n            const labelize =\r\n                (typeof row.labelizer === 'function' && row.labelizer(dailyArgs)) || ((value: string) => capitalize(value))\r\n            rowTemplate.options = tmp.map(value => (typeof value === 'string' ? { value, label: labelize(value) } : value))\r\n\r\n            if (isComboRow(row)) {\r\n                rowTemplate.selected = rowTemplate.value\r\n                rowTemplate.data.input = (savedRow as DailySavedCombo | undefined)?.input ?? true\r\n\r\n                if (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\r\n                    rowTemplate.value = labelize(rowTemplate.selected)\r\n                }\r\n            }\r\n        } else if (isDropRow(row)) {\r\n            rowTemplate.data.uuid = (savedRow as DailySavedDrop | undefined)?.uuid ?? ''\r\n        } else if (isAlerRow(row)) {\r\n            rowTemplate.value = typeof row.message === 'function' ? await row.message(dailyArgs) : row.message\r\n        }\r\n\r\n        template.rows.push(rowTemplate)\r\n    }\r\n\r\n    return template\r\n}\r\n\r\nasync function getProcessedValue<T extends any, R = T extends (...args: any[]) => infer R ? R : T>(obj: T, args: DailyValueArgs) {\r\n    if (typeof obj === 'function') return (await obj(args)) as Promise<R>\r\n    return obj as R\r\n}\r\n\r\nfunction isComboRow(row: DailyRow): row is DailyRowCombo {\r\n    return row.type === 'combo'\r\n}\r\n\r\nfunction isSelectRow(row: DailyRow): row is DailyRowSelect {\r\n    return row.type === 'select'\r\n}\r\n\r\nfunction isRandomRow(row: DailyRow): row is DailyRowRandom {\r\n    return row.type === 'random'\r\n}\r\n\r\nfunction isDropRow(row: DailyRow): row is DailyRowDrop {\r\n    return row.type === 'drop'\r\n}\r\n\r\nfunction isAlerRow(row: DailyRow): row is DailyRowAlert {\r\n    return row.type === 'alert'\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { getTranslatedSkills } from '@utils/pf2e/skills'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function onDropFeat(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyRowDropParsedFeat\r\n) {\r\n    if (!item.isOfType('feat')) return localize('notFeat')\r\n\r\n    const { featType, traits, system, level } = item\r\n    const { search, drop } = filter\r\n\r\n    if (search.feattype.length && !search.feattype.includes(featType)) {\r\n        return localize.warn('wrongType', { types: localizeAll('featTypes', search.feattype) })\r\n    }\r\n\r\n    if (search.traits.values.length) {\r\n        const conjunction = search.traits.conjunction ?? 'and'\r\n        const testFn = conjunction === 'or' ? 'some' : 'every'\r\n        const test = search.traits.values[testFn](trait => traits.has(trait))\r\n        if (!test) {\r\n            return localize.warn(conjunction === 'or' ? 'wrongTraitOr' : 'wrongTraitAnd', {\r\n                traits: localizeAll('featTraits', search.traits.values),\r\n            })\r\n        }\r\n    }\r\n\r\n    if (search.skills.length) {\r\n        const translatedSkills = getTranslatedSkills()\r\n        const prerequisites = system.prerequisites.value.map(prerequisite => prerequisite.value.toLocaleLowerCase())\r\n        const test = search.skills.some(skill =>\r\n            prerequisites.some(prerequisite => prerequisite.includes(skill) || prerequisite.includes(translatedSkills[skill]!))\r\n        )\r\n        if (!test) return localize.warn('wrongSkill', { skills: localizeAll('skillList', search.skills) })\r\n    }\r\n\r\n    if (search.rarity.length && !search.rarity.includes(system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source.length && !search.source.includes(sluggify(system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    const { min, max } = search.level\r\n    if (level < min) return localize.warn('wrongLevelLow', { level: `min: ${min}` })\r\n    else if (level > max) return localize.warn('wrongLevelHigh', { level: `max: ${max}` })\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return game.i18n.format(result.error, result.data)\r\n                else return game.i18n.localize(result.error)\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nexport async function onDropSpell(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyRowDropParsedSpell\r\n) {\r\n    if (!item.isOfType('spell')) return localize('notSpell')\r\n\r\n    const { system, level, traits, traditions, school } = item\r\n    const { search, drop } = filter\r\n\r\n    if (search.category.length) {\r\n        const categories = search.category\r\n            .map(x => game.i18n.localize(x === 'cantrip' ? 'PF2E.SpellCantripLabel' : CONFIG.PF2E.spellCategories[x]))\r\n            .join(', ')\r\n\r\n        if (\r\n            (item.isCantrip && !search.category.includes('cantrip')) ||\r\n            (item.isFocusSpell && !search.category.includes('focus')) ||\r\n            (item.isRitual && !search.category.includes('ritual')) ||\r\n            (!item.isCantrip && !item.isFocusSpell && !item.isRitual && !search.category.includes('spell'))\r\n        ) {\r\n            return localize.warn('wrongCategory', { categories })\r\n        }\r\n    }\r\n\r\n    if (search.traits.values.length) {\r\n        const conjunction = search.traits.conjunction ?? 'and'\r\n        const testFn = conjunction === 'or' ? 'some' : 'every'\r\n        const test = search.traits.values[testFn](trait => traits.has(trait))\r\n        if (!test) {\r\n            return localize.warn(conjunction === 'or' ? 'wrongTraitOr' : 'wrongTraitAnd', {\r\n                traits: localizeAll('spellTraits', search.traits.values),\r\n            })\r\n        }\r\n    }\r\n\r\n    if (search.traditions.length) {\r\n        if (!search.traditions.some(tradition => traditions.has(tradition))) {\r\n            return localize.warn('wrongTradition', { traditions: localizeAll('magicTraditions', search.traditions) })\r\n        }\r\n    }\r\n\r\n    if (search.level.length && !search.level.includes(level)) {\r\n        return localize.warn('wrongLevel', { levels: search.level.join(', ') })\r\n    }\r\n\r\n    if (search.school.length && !search.school.includes(school)) {\r\n        return localize.warn('wrongSchool', { schools: localizeAll('magicSchools', search.school) })\r\n    }\r\n\r\n    if (search.rarity.length && !search.rarity.includes(system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source.length && !search.source.includes(sluggify(system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return ui.notifications.warn(game.i18n.format(result.error, result.data))\r\n                else return ui.notifications.warn(game.i18n.localize(result.error))\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nfunction localizeAll<\r\n    C extends keyof Omit<PF2ECONFIG, 'proficiencyLevels'>,\r\n    K extends keyof Omit<PF2ECONFIG, 'proficiencyLevels'>[C]\r\n>(config: C, list: K[]): string {\r\n    const localized = list.map(key => game.i18n.localize(CONFIG.PF2E[config][key] as unknown as string))\r\n    return localized.join(', ')\r\n}\r\n\r\nexport function onDropItem(item: ItemPF2e, target: HTMLInputElement) {\r\n    target.value = item.name\r\n    target.dataset.uuid = item.uuid\r\n    target.nextElementSibling!.nextElementSibling!.classList.remove('disabled')\r\n}\r\n","export function getFamiliarPack() {\r\n    return game.packs.get<CompendiumCollection<EffectPF2e>>('pf2e.familiar-abilities')!\r\n}\r\n\r\nexport function familiarUUID(id: string) {\r\n    return `Compendium.pf2e.familiar-abilities.${id}` as ItemUUID\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { familiarUUID, getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\nimport { MODULE_ID } from '@src/main'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { chatUUID, fakeChatUUID } from '@utils/foundry/uuid'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nexport async function processData(this: DailiesInterface) {\r\n    const actor = this.actor\r\n    const dailies = this.dailies\r\n    const fields = getFields.call(this)\r\n    const addItems: DeepPartial<BaseItemSourcePF2e>[] = []\r\n    const addRules: Map<string, DailyRuleSource[]> = new Map()\r\n    const updateItems: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const flags: Record<string, DailySaved> = {}\r\n    const msg = subLocalize('message')\r\n\r\n    let addedSpells: boolean = false\r\n    let message = ''\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = addRules.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) rules.splice(i, 1)\r\n        }\r\n\r\n        addRules.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages: DailyMessageGroups = {\r\n        languages: { order: 80, messages: [] },\r\n        skills: { order: 70, messages: [] },\r\n        resistances: { order: 60, messages: [] },\r\n        feats: { order: 50, messages: [] },\r\n        spells: { order: 40, messages: [] },\r\n        scrolls: { order: 30, messages: [] },\r\n    }\r\n\r\n    const messageObj = {\r\n        add: (group: string, options: DailyMessage) => {\r\n            messages[group] ??= { order: 0, messages: [] }\r\n            messages[group]!.messages.push(options)\r\n        },\r\n        addGroup: (group: string, order = 1, label?: string) => {\r\n            messages[group] ??= { label, order, messages: [] }\r\n        },\r\n    }\r\n\r\n    if (actor.familiar && fields['dailies.familiar']) {\r\n        const familiar = actor.familiar\r\n        const pack = getFamiliarPack()\r\n        const abilities: EffectSource[] = []\r\n\r\n        // we remove old abilities\r\n        const ids = familiar.itemTypes.effect.map(effect => effect.id)\r\n        if (ids.length) familiar.deleteEmbeddedDocuments('Item', ids)\r\n\r\n        messageObj.addGroup('familiar', 20)\r\n\r\n        for (const field of Object.values(fields['dailies.familiar'])) {\r\n            const value = field.value\r\n            const isCustom = value.includes('.')\r\n            const item = await (isCustom ? fromUuid<ItemPF2e>(value) : pack.getDocument(value))\r\n            if (!item || !item.isOfType('effect')) continue\r\n\r\n            const source = item.toObject()\r\n            if (source) {\r\n                abilities.push(source)\r\n                messageObj.add('familiar', { uuid: isCustom ? (value as ItemUUID) : familiarUUID(value) })\r\n            }\r\n        }\r\n\r\n        if (abilities.length) familiar.createEmbeddedDocuments('Item', abilities)\r\n    }\r\n\r\n    if (fields['dailies.rations']?.rations!.value === 'true') {\r\n        const rations = getRations(actor)\r\n\r\n        if (rations?.uses.value) {\r\n            const quantity = rations.quantity\r\n            const { value, max } = rations.uses\r\n\r\n            if (value <= 1) {\r\n                if (quantity <= 1) {\r\n                    rations.delete()\r\n                } else {\r\n                    updateItems.push({\r\n                        _id: rations.id,\r\n                        'system.quantity': Math.max(rations.quantity - 1, 0),\r\n                        'system.charges.value': max,\r\n                    })\r\n                }\r\n            } else {\r\n                updateItems.push({\r\n                    _id: rations.id,\r\n                    'system.charges.value': Math.max(value - 1, 0),\r\n                })\r\n            }\r\n\r\n            const remaining = (quantity - 1) * max + value\r\n            const name = remaining <= 1 ? fakeChatUUID(rations.name) : chatUUID(rations.uuid)\r\n\r\n            if (remaining <= 1) message += msg('rations.last', { name })\r\n            else if (remaining <= 3) message += msg('rations.almost', { name, nb: remaining - 1 })\r\n            else message += msg('rations.used', { name, nb: remaining - 1 })\r\n        }\r\n    }\r\n\r\n    for (const { item, key, process } of dailies) {\r\n        if (!fields[key]) continue\r\n\r\n        const dailyArgs = this.dailyArgs[key]!\r\n\r\n        try {\r\n            await process({\r\n                ...dailyArgs,\r\n                fields: fields[key]!,\r\n                messages: messageObj,\r\n                addItem: source => addItems.push(source),\r\n                updateItem: data => updateItems.push(data),\r\n                addRule: (source, parent) => getRules(parent ?? item).push(source),\r\n                addFeat: (source, parent) => {\r\n                    if (item.isOfType('feat')) {\r\n                        const parentId = (parent ?? item).id\r\n                        setProperty(source, 'flags.pf2e.grantedBy', { id: parentId, onDelete: 'cascade' })\r\n                        setProperty(source, `flags.${MODULE_ID}.grantedBy`, parentId)\r\n                    }\r\n                    addItems.push(source)\r\n                },\r\n                addSpell: (source, level) => {\r\n                    setProperty(source, `flags.${MODULE_ID}.entry`, { level: level })\r\n                    addItems.push(source)\r\n                    addedSpells = true\r\n                },\r\n            })\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during processing of ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [key, rowFields] of Object.entries(fields)) {\r\n        const rows = this.rows[key]\r\n        if (!rows) continue\r\n\r\n        for (const { row, type, input, value, uuid } of Object.values(rowFields)) {\r\n            if (type === 'random' || rows[row]?.save === false) continue\r\n\r\n            const flag = (flags[key] ??= {})\r\n\r\n            if (type === 'combo') {\r\n                flag[row] = { input: input === 'true', selected: value }\r\n            } else if (type === 'drop') {\r\n                flag[row] = { uuid: uuid as ItemUUID, name: value }\r\n            } else {\r\n                flag[row] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of addRules) {\r\n        rules.forEach(x => (x[MODULE_ID] = true))\r\n        updateItems.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    if (addedSpells) {\r\n        const entry: DeepPartial<SpellcastingEntrySource> = {\r\n            type: 'spellcastingEntry',\r\n            name: localize('spellEntry.name'),\r\n            system: {\r\n                prepared: { value: 'innate' },\r\n                showSlotlessLevels: { value: false },\r\n                showUnpreparedSpells: { value: false },\r\n                proficiency: { value: 1, slug: actor.classDC?.slug || actor.class?.slug || undefined },\r\n            },\r\n        }\r\n        addItems.push(entry)\r\n    }\r\n\r\n    for (const source of addItems) {\r\n        const alreadyTemp = getProperty(source, 'system.temporary') === true\r\n        if (!alreadyTemp) setProperty(source, `flags.${MODULE_ID}.temporary`, true)\r\n    }\r\n\r\n    if (addItems.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addItems)) as ItemPF2e[]\r\n\r\n        for (const item of items) {\r\n            if (item.isOfType('feat')) {\r\n                // we add itemGrants flag to the parent feat to have the cascade effect in the tab\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.${slug}`\r\n                    updateItems.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n                }\r\n            } else if (item.isOfType('spellcastingEntry')) {\r\n                // we add all the newly created spells with 'addSpell' to this spellcasting entry\r\n                const spells = items.filter(item => item.isOfType('spell') && getFlag(item, 'entry'))\r\n                for (const spell of spells) {\r\n                    const { level } = getFlag<{ level?: number }>(spell, 'entry')!\r\n                    const data: EmbeddedDocumentUpdateData<ItemPF2e> = { _id: spell.id, 'system.location.value': item.id }\r\n                    if (level !== undefined) data['system.location.heightenedLevel'] = level\r\n                    updateItems.push(data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    await actor.update({ [`flags.${MODULE_ID}`]: { ...expandObject(flags), rested: false } })\r\n\r\n    if (updateItems.length) await actor.updateEmbeddedDocuments('Item', updateItems)\r\n\r\n    message = parseMessages(messages, message)\r\n    message = message ? `${msg('changes')}<hr />${message}` : msg('noChanges')\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction parseMessages(messages: DailyMessageGroups, message: string) {\r\n    const msg = subLocalize('message')\r\n\r\n    const messageList = Object.entries(messages).map(([type, options]) => {\r\n        options.label ??= msg.has(type) ? msg(type) : msg('gained', { type })\r\n        return options\r\n    })\r\n    messageList.sort((a, b) => b.order - a.order)\r\n\r\n    for (const { label, messages } of messageList) {\r\n        if (!messages.length) continue\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        if (label) message += `<p><strong>${label}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random } of messages) {\r\n            const key = `label.${label}`\r\n            label = label && hasLocalization(key) ? localize(key) : label || ''\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n            if (selected) message += ` <span>${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nfunction getFields(this: DailiesInterface) {\r\n    const elements = this.element\r\n        .find('.window-content .content')\r\n        .find<HTMLInputElement | HTMLSelectElement>('input:not(.alert), select[data-type]')\r\n        .toArray()\r\n\r\n    const fields: Record<string, DailyRowFields> = {}\r\n\r\n    for (const element of elements) {\r\n        const field = {\r\n            ...element.dataset,\r\n            value: element.value,\r\n        } as DailyRowField\r\n\r\n        if (field.type === 'combo' && field.input === 'false') {\r\n            const select = element.previousElementSibling as HTMLSelectElement\r\n            field.value = select.value\r\n        }\r\n\r\n        fields[field.daily] ??= {}\r\n        fields[field.daily]![field.row] = field\r\n    }\r\n\r\n    return fields\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport function getSimplifiableValue(actor: CharacterPF2e, value: number | 'half' | 'level') {\r\n    if (typeof value === 'number') return value\r\n    if (value === 'level') return actor.level\r\n    return Math.max(1, Math.floor(actor.level / 2))\r\n}\r\n\r\nexport function parseFeatFilter(actor: CharacterPF2e, filter: DailyFeatFilter) {\r\n    const parsed = {\r\n        feattype: [],\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        searchText: '',\r\n        traits: {\r\n            values: [],\r\n            conjunction: 'and',\r\n        },\r\n        orderBy: 'level',\r\n        orderDirection: 'asc',\r\n        ...deepClone(filter),\r\n    }\r\n\r\n    if (parsed.level === undefined) {\r\n        parsed.level = { min: 0, max: 20 }\r\n    } else if (typeof parsed.level !== 'object') {\r\n        parsed.level = { min: 0, max: getSimplifiableValue(actor, parsed.level) }\r\n    } else {\r\n        parsed.level = {\r\n            min: getSimplifiableValue(actor, parsed.level.min ?? 0),\r\n            max: getSimplifiableValue(actor, parsed.level.max ?? 0),\r\n        }\r\n    }\r\n\r\n    return parsed as DeepRequired<InitialFeatFilters>\r\n}\r\n\r\nexport function parseSpellFilter(actor: CharacterPF2e, filter: DailySpellFilter) {\r\n    const parsed = {\r\n        category: [],\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions: [],\r\n        searchText: '',\r\n        traits: {\r\n            values: [],\r\n            conjunction: 'and',\r\n        },\r\n        orderBy: 'level',\r\n        orderDirection: 'asc',\r\n        ...deepClone(filter),\r\n    }\r\n\r\n    if (parsed.level === undefined) {\r\n        parsed.level = []\r\n    } else if (!Array.isArray(parsed.level)) {\r\n        parsed.level = sequenceArray(1, getSimplifiableValue(actor, parsed.level))\r\n    }\r\n\r\n    return parsed as DeepRequired<InitialSpellFilters>\r\n}\r\n","import { getDailies } from '@src/dailies'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { getTemplate } from './interface/data'\r\nimport { onDropFeat, onDropItem, onDropSpell } from './interface/drop'\r\nimport { processData } from './interface/process'\r\nimport { parseFeatFilter, parseSpellFilter } from './interface/shared'\r\nimport { getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\nimport { getSetting } from '@utils/foundry/settings'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n    private _dailies: ReturnedDaily[] = []\r\n    private _dailyArgs: Record<string, DailyValueArgs> = {}\r\n    private _saved: Record<string, DailySaved> = {}\r\n    private _children: Record<string, DailyValueArgs['children']> = {}\r\n    private _custom: Record<string, DailyCustom> = {}\r\n    private _predicate: Record<string, string[]> = {}\r\n    private _rows: Record<string, Record<string, DailyRow>> = {}\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get dailies() {\r\n        return this._dailies\r\n    }\r\n\r\n    get dailyArgs() {\r\n        return this._dailyArgs\r\n    }\r\n\r\n    get saved() {\r\n        return this._saved\r\n    }\r\n\r\n    get children() {\r\n        return this._children\r\n    }\r\n\r\n    get custom() {\r\n        return this._custom\r\n    }\r\n\r\n    get predicate() {\r\n        return this._predicate\r\n    }\r\n\r\n    get rows() {\r\n        return this._rows\r\n    }\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const templates: DailyTemplate[] = []\r\n        const actor = this._actor\r\n        this._dailies = getDailies(actor)\r\n\r\n        if (actor.familiar) {\r\n            const type = 'dailies.familiar'\r\n            const localize = subLocalize('label')\r\n            const nbAbilityies = actor.attributes.familiarAbilities.value\r\n            const pack = getFamiliarPack()\r\n            const flags = getFlag<Record<`${number}`, string>>(actor, type) ?? {}\r\n\r\n            const template: DailyTemplate = {\r\n                label: localize('familiar'),\r\n                rows: [],\r\n            }\r\n\r\n            const options: SelectOption[] = pack.index.map(({ _id, name }) => ({ value: _id, label: name }))\r\n\r\n            const customUUIDS = getSetting<string>('familiar').split(',')\r\n            for (let uuid of customUUIDS) {\r\n                uuid = uuid.trim()\r\n                const item = await fromUuid<ItemPF2e>(uuid)\r\n                if (item && item.isOfType('effect')) options.push({ value: uuid, label: item.name })\r\n            }\r\n\r\n            options.sort((a, b) => (a.label < b.label ? -1 : b.label < a.label ? 1 : 0))\r\n\r\n            for (let index = 0; index < nbAbilityies; index++) {\r\n                template.rows.push({\r\n                    label: localize('ability', { nb: index + 1 }),\r\n                    value: flags[`${index}`] ?? '',\r\n                    order: 100,\r\n                    options,\r\n                    data: {\r\n                        type: 'select',\r\n                        daily: type,\r\n                        row: index.toString(),\r\n                    },\r\n                })\r\n            }\r\n\r\n            if (template.rows.length) {\r\n                this._rows[type] = template.rows.reduce((rows, { data }) => {\r\n                    rows[data.row] = { save: true } as DailyRow\r\n                    return rows\r\n                }, {} as Record<string, DailyRow>)\r\n                templates.push(template)\r\n            }\r\n        }\r\n\r\n        const rations = getRations(actor)\r\n        if (rations?.uses.value) {\r\n            const type = 'dailies.rations'\r\n            const row = 'rations'\r\n            const { value, max } = rations.uses\r\n            const quantity = rations.quantity\r\n            const remaining = (quantity - 1) * max + value\r\n            const last = remaining <= 1\r\n\r\n            const options = [\r\n                {\r\n                    value: 'false',\r\n                    label: localize('rations.no'),\r\n                },\r\n                {\r\n                    value: 'true',\r\n                    label: last ? localize('rations.last') : localize('rations.yes', { nb: remaining }),\r\n                },\r\n            ]\r\n\r\n            templates.push({\r\n                label: rations.name,\r\n                rows: [\r\n                    {\r\n                        label: '',\r\n                        order: 200,\r\n                        value: 'false',\r\n                        options,\r\n                        data: {\r\n                            type: 'select',\r\n                            daily: type,\r\n                            row: row,\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n\r\n            this._rows[type] = { [row]: { save: false } as DailyRow }\r\n        }\r\n\r\n        for (const daily of this._dailies) {\r\n            try {\r\n                const template = await getTemplate.call(this, daily)\r\n                templates.push(template)\r\n            } catch (error) {\r\n                localize.error('error.unexpected')\r\n                console.error(error)\r\n                console.error(`The error occured during templating of ${daily.key}`)\r\n            }\r\n        }\r\n\r\n        const rows: DailyTemplate[] = []\r\n        const groups: DailyTemplate[] = []\r\n        for (const template of templates) {\r\n            if (template.rows.length > 1) groups.push(template)\r\n            else if (template.rows.length) rows.push(template)\r\n        }\r\n\r\n        rows.sort((a, b) => b.rows[0]!.order - a.rows[0]!.order)\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            dump: ({ value, placeholder, data }: DailyRowTemplate) => {\r\n                let msg = ''\r\n                if (value) msg += ` value=\"${value}\"`\r\n                if (placeholder) msg += ` placeholder=\"${placeholder}\"`\r\n                Object.entries(data).forEach(([key, value]) => (msg += ` data-${key}=\"${value}\"`))\r\n                if (msg) msg += ' '\r\n                return msg\r\n            },\r\n            rows,\r\n            groups,\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<HTMLInputElement>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=search]').on('click', this.#onSearch.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=alert]').on('click', this.#onAlert.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        const localize = subLocalize('interface.error.drop')\r\n        let target = event.target as HTMLInputElement | HTMLLabelElement\r\n        if (target instanceof HTMLLabelElement) target = target.nextElementSibling as HTMLInputElement\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            console.log(data)\r\n\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return localize.warn('wrongDataType')\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item) return localize.warn('wrongDataType')\r\n\r\n            const filter = await this.#getfilterFromElement(target)\r\n            if (!filter) return onDropItem(item, target)\r\n\r\n            if (filter.type === 'feat') onDropFeat.call(this, item, target, filter)\r\n            else if (filter.type === 'spell') onDropSpell.call(this, item, target, filter)\r\n            else onDropItem(item, target)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during _onDrop`)\r\n        }\r\n    }\r\n\r\n    async #onAlert(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        this.#lock()\r\n\r\n        const data = event.currentTarget.dataset as { daily: string; row: string }\r\n        const row = this.rows[data.daily]![data.row]! as DailyRowAlert\r\n        const args = this.dailyArgs[data.daily]!\r\n\r\n        let fixed\r\n        try {\r\n            fixed = await row.fix(args)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during an alert fix of '${data.daily}'`)\r\n        }\r\n\r\n        this.#unlock()\r\n        if (fixed) this.render()\r\n    }\r\n\r\n    async #onSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const filter = await this.#getfilterFromElement(event.currentTarget)\r\n        if (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search)\r\n        else game.pf2e.compendiumBrowser.render(true)\r\n    }\r\n\r\n    async #getfilterFromElement(element: HTMLElement) {\r\n        const { daily, row } = element.dataset as { daily: string; row: string }\r\n        const filter = (this.rows[daily]?.[row] as DailyRowDrop | undefined)?.filter\r\n        const args = this.dailyArgs[daily]\r\n\r\n        if (!args || !filter) return\r\n\r\n        let { search, drop, type } = filter\r\n        if (typeof search === 'function') search = await search(args)\r\n\r\n        if (type === 'feat') {\r\n            return {\r\n                type: 'feat',\r\n                search: parseFeatFilter(this.actor, search as DailyFeatFilter),\r\n                drop,\r\n            } as DailyRowDropParsedFeat\r\n        } else {\r\n            return {\r\n                type: 'spell',\r\n                search: parseSpellFilter(this.actor, search as DailySpellFilter),\r\n                drop,\r\n            } as DailyRowDropParsedSpell\r\n        }\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget as HTMLSelectElement\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = select.options[select.selectedIndex]!.text\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, HTMLInputElement>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        const index = options.indexOf(value)\r\n        if (index !== -1) {\r\n            select.value = value\r\n            input.value = select.options[index]!.text\r\n            input.dataset.input = 'false'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #unlock() {\r\n        this.element.removeClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const alertInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (alertInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n        this.#lock()\r\n        await processData.call(this)\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions'\r\n\r\ntype ReturnedModule<T extends Record<string, any> | unknown = unknown> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule<T extends Record<string, any> | unknown = unknown>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<T extends Record<string, any> | unknown = unknown>() {\r\n    return getModule(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi<T extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<T>(id)?.api as ReturnedModuleApi<T>\r\n}\r\n","export const tome = [\r\n    '/** @typedef {typeof ROWS[number]} TomeRow */',\r\n    \"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\r\n    '/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */',\r\n    '/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */',\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second'])\",\r\n    '',\r\n    \"/** @param {'adept' | 'paragon'} option */\",\r\n    'function createChildCondition(option) {',\r\n    '    /** @type { BaseDailyConditionFunction<TomeGenerics>} */',\r\n    '    const condition = ({ item, utils }) => {',\r\n    \"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\r\n    '    }',\r\n    '    return condition',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<TomeGenerics>} */',\r\n    'const thaumaturgeTome = {',\r\n    \"    key: 'tome',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'adept',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'second',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'intense',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'paragon',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\",\r\n    \"            condition: createChildCondition('paragon'),\",\r\n    '        },',\r\n    '    ],',\r\n    '    prepare: ({ utils, actor, children }) => {',\r\n    '        const skillNames = utils.skillNames',\r\n    '        const actorLevel = actor.level',\r\n    '        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)',\r\n    '',\r\n    '        /** @type {TomeCustom} */',\r\n    '        const custom = {',\r\n    '            first: { options: [], rank: 1 },',\r\n    '            second: { options: [], rank: 1 },',\r\n    '        }',\r\n    '',\r\n    '        // Implement Paragon',\r\n    '        if (children.paragon) {',\r\n    '            const skills = skillNames.filter(x => actorSkills[x].rank < 4)',\r\n    '            custom.first = { rank: 4, options: skills }',\r\n    '            custom.second = { rank: 4, options: skills }',\r\n    '        }',\r\n    '        // Intense Implement or Second Adept or Implement Adept',\r\n    '        else if (children.intense || children.adept || children.second) {',\r\n    '            const masters = skillNames.filter(x => actorSkills[x].rank < 3)',\r\n    '',\r\n    '            if (actorLevel >= 9) {',\r\n    '                custom.first = { rank: 3, options: masters }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            } else {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            }',\r\n    '        }',\r\n    '        // Tome',\r\n    '        else {',\r\n    '            if (actorLevel >= 5) {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else if (actorLevel >= 3) {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 1, options: trained }',\r\n    '            }',\r\n    '        }',\r\n    '',\r\n    '        return custom',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowCombo<TomeGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'combo',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),',\r\n    '            options: ({ custom }) => custom[rowName].options,',\r\n    '            labelizer: ({ utils }) => utils.skillLabel,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: ({ custom, fields, utils, messages, addItem, addRule }) => {',\r\n    \"        messages.addGroup('tome', 65)\",\r\n    '',\r\n    '        for (const rowName of ROWS) {',\r\n    '            const rank = custom[rowName].rank',\r\n    '            let value = fields[rowName].value',\r\n    '',\r\n    \"            if (fields[rowName].input === 'true') {\",\r\n    '                const source = utils.createLoreSource({ name: value, rank })',\r\n    '                addItem(source)',\r\n    '            } else {',\r\n    '                const source = utils.createSkillRuleElement({ skill: value, value: rank })',\r\n    '                value = utils.skillLabel(value)',\r\n    '                addRule(source)',\r\n    '            }',\r\n    '',\r\n    \"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return thaumaturgeTome',\r\n].join('\\n')\r\n","export const flexibility = [\r\n    \"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\r\n    \"/** @typedef {'improved'} FlexibilityChild */\",\r\n    '/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */',\r\n    '',\r\n    '/**',\r\n    ' * @param {FlexibilityRow} slug',\r\n    ' * @param {number} level',\r\n    ' * @param {FlexibilityChild} [child]',\r\n    ' */',\r\n    'function createRow(slug, level, child) {',\r\n    '    /** @type {DailyRowDrop<FlexibilityGenerics>} */',\r\n    '    const row = {',\r\n    \"        type: 'drop',\",\r\n    '        label: `PF2E.Level${level}`,',\r\n    '        slug,',\r\n    '        filter: {',\r\n    \"            type: 'feat',\",\r\n    '            search: {',\r\n    \"                feattype: ['class'],\",\r\n    '                traits: {',\r\n    \"                    values: ['fighter'],\",\r\n    '                },',\r\n    '                level,',\r\n    '            },',\r\n    '        },',\r\n    '    }',\r\n    '    if (child) row.childPredicate = [child]',\r\n    '    return row',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<FlexibilityGenerics>} */',\r\n    'const combatFlexibility = {',\r\n    \"    key: 'flexibility',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'improved',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    \"        createRow('flexibility', 8), //\",\r\n    \"        createRow('improved', 14, 'improved'),\",\r\n    '    ],',\r\n    '    process: async ({ utils, fields, addFeat, messages, children }) => {',\r\n    '        const uuid = fields.flexibility.uuid',\r\n    '        const source = await utils.createFeatSource(uuid)',\r\n    '        addFeat(source)',\r\n    \"        messages.add('feats', { uuid })\",\r\n    '',\r\n    '        if (children.improved) {',\r\n    '            const uuid = fields.improved.uuid',\r\n    '            const source = await utils.createFeatSource(uuid)',\r\n    '            addFeat(source, children.improved)',\r\n    \"            messages.add('feats', { uuid })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return combatFlexibility',\r\n].join('\\n')\r\n","export const savant = [\r\n    \"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\r\n    '/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */',\r\n    \"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\r\n    '',\r\n    '/**',\r\n    ' * @param {CharacterPF2e} actor',\r\n    ' * @param {MagicTradition} tradition',\r\n    ' */',\r\n    'function getSpellcastingTraditionDetails(actor, tradition) {',\r\n    '    let maxSlot = 1',\r\n    '    let maxTradition = 0',\r\n    '',\r\n    '    for (const entry of actor.spellcasting) {',\r\n    \"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\r\n    '',\r\n    '        const slots = entry.system.slots',\r\n    '        for (const key in slots) {',\r\n    '            const slot = slots[key]',\r\n    '            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))',\r\n    '        }',\r\n    '',\r\n    '        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)',\r\n    '    }',\r\n    '',\r\n    '    return { maxSlot: Math.min(maxSlot, 10), maxTradition }',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<SavantGenerics>} */',\r\n    'const scrollSavant = {',\r\n    \"    key: 'savant',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\r\n    '    },',\r\n    '    prepare: ({ actor }) => {',\r\n    \"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\r\n    '        return {',\r\n    '            first: { level: maxSlot - 2, condition: true },',\r\n    '            second: { level: maxSlot - 3, condition: true },',\r\n    '            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },',\r\n    '            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },',\r\n    '        }',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowDrop<SavantGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'drop',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,',\r\n    '            filter: {',\r\n    \"                type: 'spell',\",\r\n    '                search: ({ custom }) => ({',\r\n    \"                    category: ['spell'],\",\r\n    \"                    traditions: ['arcane'],\",\r\n    '                    level: custom[rowName].level,',\r\n    '                }),',\r\n    '            },',\r\n    '            condition: ({ custom }) => custom[rowName].condition,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: async ({ utils, fields, custom, addItem, messages }) => {',\r\n    '        for (const field of Object.values(fields)) {',\r\n    '            const uuid = field.uuid',\r\n    '            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })',\r\n    '            addItem(source)',\r\n    \"            messages.add('scrolls', { uuid, label: source.name })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return scrollSavant',\r\n].join('\\n')\r\n","export const mind = [\r\n    \"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\r\n    \"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\r\n    '/** @typedef {[MindRow, {}, MindChild]} MindGenerics */',\r\n    '',\r\n    \"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\",\r\n    '',\r\n    'const WEAPON_BASE_TYPES = {',\r\n    \"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\r\n    \"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\r\n    \"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\r\n    \"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\r\n    '}',\r\n    '',\r\n    'const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {',\r\n    \"    slashing: 'sword',\",\r\n    \"    piercing: 'spear',\",\r\n    \"    bludgeoning: 'club',\",\r\n    '}',\r\n    '',\r\n    \"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\r\n    '',\r\n    'const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)',\r\n    '',\r\n    \"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\r\n    '',\r\n    'const WEAPON_GREATER_RUNES = [',\r\n    \"    'anarchic',\",\r\n    \"    'axiomatic',\",\r\n    \"    'greaterCorrosive',\",\r\n    \"    'greaterDisrupting',\",\r\n    \"    'greaterFlaming',\",\r\n    \"    'greaterFrost',\",\r\n    \"    'greaterShock',\",\r\n    \"    'greaterThundering',\",\r\n    \"    'holy',\",\r\n    \"    'unholy',\",\r\n    ']',\r\n    '',\r\n    '/** @type {Daily<MindGenerics>} */',\r\n    'const mindSmith = {',\r\n    \"    key: 'mindsmith',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'weapon',\",\r\n    '            uuid: MIND_WEAPON_UUID, // Mind Weapon',\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'mental',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'runic',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'advanced',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    '        {',\r\n    \"            type: 'alert',\",\r\n    \"            slug: 'alert',\",\r\n    \"            message: 'Missing Mind Weapon',\",\r\n    '            fix,',\r\n    \"            childPredicate: [{ not: 'weapon' }],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'smith',\",\r\n    \"            label: 'Mind Smith',\",\r\n    '            options: WEAPON_DAMAGE_TYPES,',\r\n    '            labelizer: ({ utils }) => utils.damageLabel,',\r\n    \"            childPredicate: ['weapon'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'mental',\",\r\n    \"            label: 'Mental Forge',\",\r\n    '            options: WEAPON_TRAITS,',\r\n    '            labelizer: ({ utils }) => utils.weaponTraitLabel,',\r\n    \"            childPredicate: ['weapon', 'mental'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'runic',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'advanced',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_GREATER_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'advanced'],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '    ],',\r\n    '    process: ({ children, updateItem, fields, messages, item, utils }) => {',\r\n    '        const weapon = children.weapon',\r\n    '        if (!weapon) return',\r\n    '',\r\n    \"        messages.addGroup('mindsmith')\",\r\n    '',\r\n    '        const selected = /** @type {WeaponDamage} */ fields.smith.value',\r\n    \"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\r\n    \"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\r\n    '',\r\n    '        if (children.mental) {',\r\n    '            const selected = fields.mental.value',\r\n    '            const traits = deepClone(weapon._source.system.traits?.value ?? [])',\r\n    '            if (!traits.includes(selected)) traits.push(selected)',\r\n    \"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\r\n    \"            messages.add('mindsmith', {\",\r\n    '                selected: utils.weaponTraitLabel(selected),',\r\n    '                uuid: children.mental.uuid,',\r\n    \"                label: 'mentalforge',\",\r\n    '            })',\r\n    '        }',\r\n    '',\r\n    '        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {',\r\n    '            const child = children.advanced ?? children.runic',\r\n    '            const freeSlot = utils.getFreePropertyRuneSlot(weapon)',\r\n    '            const field = fields.advanced ?? fields.runic',\r\n    '            const selected = field.value',\r\n    '',\r\n    '            if (!weapon.system.runes.property.includes(selected)) {',\r\n    '                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })',\r\n    \"                messages.add('mindsmith', {\",\r\n    '                    selected: utils.weaponPropertyRunesLabel(selected),',\r\n    '                    uuid: child.uuid,',\r\n    \"                    label: 'runicmind',\",\r\n    '                })',\r\n    '            }',\r\n    '        }',\r\n    '    },',\r\n    '    rest: ({ item, sourceId, updateItem }) => {',\r\n    '        if (sourceId !== MIND_WEAPON_UUID) return',\r\n    '',\r\n    '        let traits = item._source.system.traits?.value ?? []',\r\n    '        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))',\r\n    \"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\r\n    '',\r\n    \"        const runeSlot = item.getFlag('world', 'runeSlot')\",\r\n    '        if (runeSlot) {',\r\n    '            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })',\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'const OPTIONS = {',\r\n    \"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\r\n    \"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\r\n    \"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\r\n    \"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\r\n    '}',\r\n    '',\r\n    '/** * @param {DailyValueArgs<MindGenerics>} args */',\r\n    'async function fix({ actor }) {',\r\n    '    let content =',\r\n    \"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\r\n    '',\r\n    '    for (const [key, label] of Object.entries(OPTIONS)) {',\r\n    \"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\r\n    '    }',\r\n    '',\r\n    '    const weapon = await Dialog.wait(',\r\n    '        {',\r\n    \"            title: 'Mind Weapon',\",\r\n    '            content,',\r\n    '            buttons: {',\r\n    '                yes: {',\r\n    \"                    icon: `<i class='fas fa-save'></i>`,\",\r\n    \"                    label: 'Accept',\",\r\n    '                    callback: onWeaponSelected,',\r\n    '                },',\r\n    '                no: {',\r\n    \"                    icon: `<i class='fas fa-times'></i>`,\",\r\n    \"                    label: 'Cancel',\",\r\n    '                    callback: () => null,',\r\n    '                },',\r\n    '            },',\r\n    '            close: () => null,',\r\n    '        },',\r\n    '        {},',\r\n    \"        { id: 'pf2e-dailies-weapon', width: 600 }\",\r\n    '    )',\r\n    '',\r\n    '    if (weapon) {',\r\n    \"        await actor.createEmbeddedDocuments('Item', [weapon])\",\r\n    '        return true',\r\n    '    }',\r\n    '',\r\n    '    return false',\r\n    '}',\r\n    '',\r\n    '/** @params {JQuery} html */',\r\n    'async function onWeaponSelected(html) {',\r\n    \"    const selection = html.find('[name=type]:checked').val()\",\r\n    '    if (!selection) {',\r\n    \"        ui.notifications.warn('You must select one weapon base type.')\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()',\r\n    '    if (!weapon) {',\r\n    \"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const stats = WEAPON_BASE_TYPES[selection]',\r\n    '',\r\n    \"    setProperty(weapon, 'system.damage.die', stats.die)\",\r\n    \"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\r\n    \"    setProperty(weapon, 'system.usage.value', stats.usage)\",\r\n    '',\r\n    '    return weapon',\r\n    '}',\r\n    '',\r\n    'return mindSmith',\r\n].join('\\n')\r\n","import { createFeatDaily } from '@src/data/feat'\r\nimport { createLanguageDaily } from '@src/data/language'\r\nimport { createResistancelDaily } from '@src/data/resistance'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from '@src/data/skill'\r\nimport { createSpellDaily } from '@src/data/spell'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting, setSetting } from '@utils/foundry/settings'\r\nimport { getModule } from '@utils/foundry/module'\r\nimport { AsyncFunction } from '@utils/function'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { tome } from './customs/tome'\r\nimport { flexibility } from './customs/flexibility'\r\nimport { savant } from './customs/savant'\r\nimport { mind } from './customs/mind'\r\nimport { EXT_VERSION } from '@src/main'\r\n\r\nconst localize = subLocalize('customs')\r\n\r\ntype DailyExampleType = 'tome' | 'flexibility' | 'savant' | 'mind'\r\ntype DailyTemplateType = 'default' | 'trainedSkill' | 'trainedLore' | 'language' | 'resistance' | 'feat' | 'spell'\r\ntype DailyData = {\r\n    key: string\r\n    uuid: ItemUUID\r\n    label: string\r\n    resistances: string\r\n    resistance: string\r\n    feattype: string\r\n    traits: string\r\n    level: string\r\n    category: string\r\n    traditions: string\r\n    levels: string\r\n}\r\n\r\nconst TEMPLATES = ['default', 'trainedSkill', 'trainedLore', 'language', 'resistance', 'feat', 'spell']\r\nconst EXAMPLES = ['flexibility', 'savant', 'tome', 'mind']\r\n\r\nexport class DailyCustoms extends FormApplication {\r\n    private _selectedTemplate: DailyTemplateType | DailyExampleType = 'default'\r\n    private _selectedDaily: string = ''\r\n    private _monaco: any | null = null\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-customs',\r\n            title: localize('title'),\r\n            template: templatePath('customs.hbs'),\r\n            submitOnChange: false,\r\n            submitOnClose: false,\r\n            closeOnSubmit: false,\r\n            scrollY: ['.left .list'],\r\n        })\r\n    }\r\n\r\n    async _updateObject(event: Event, formData: Record<string, unknown>) {}\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const code = customs.find(custom => custom.key === this._selectedDaily)?.code\r\n        const template = this._selectedTemplate\r\n        const extension = getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')\r\n        const newVersion = extension?.active && isNewerVersion(EXT_VERSION, extension.version) ? { version: EXT_VERSION } : ''\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            template,\r\n            templates: TEMPLATES,\r\n            daily: this._selectedDaily,\r\n            code,\r\n            customs,\r\n            examples: EXAMPLES,\r\n            isExample: EXAMPLES.includes(template),\r\n            monaco: extension?.active,\r\n            newVersion,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        super.activateListeners(html)\r\n\r\n        this._monaco?.dispose()\r\n\r\n        const monaco = getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')?.api\r\n        const area = html.find<HTMLTextAreaElement>('.code')[0]\r\n        if (monaco && area) {\r\n            const element = html.find('.monaco .placeholder')[0]!\r\n            this._monaco = monaco.createEditor(element, area.value)\r\n            this._monaco.onDidChangeModelContent(debounce(() => (area.value = this._monaco.getValue()), 200))\r\n        } else {\r\n            this._monaco = null\r\n        }\r\n\r\n        html.find<HTMLSelectElement>('[data-action=select-template]').on('change', this.#onSelectTemplate.bind(this))\r\n        html.find('[data-action=create-template]').on('click', this.#onCreateTemplate.bind(this))\r\n        html.find('[data-action=create-daily]').on('click', this.#onCreateDaily.bind(this))\r\n\r\n        html.find('.row[data-key]').on('click', this.#onSelectDaily.bind(this))\r\n        html.find('[data-action=delete-daily]').on('click', this.#onDeleteDaily.bind(this))\r\n\r\n        html.find('[data-action=save-code]').on('click', this.#onSaveCode.bind(this))\r\n    }\r\n\r\n    get code() {\r\n        const element = this.form.querySelector<HTMLTextAreaElement>('.window-content .code')\r\n        return element?.value\r\n    }\r\n\r\n    async #onSaveCode(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        const code = this.code\r\n        const selected = this._selectedDaily\r\n\r\n        if (!selected || !code) return\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const stipped = customs.filter(custom => custom.key !== selected)\r\n\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            const key = daily.key\r\n\r\n            if (typeof key !== 'string') return warn('invalidKey')\r\n            if (stipped.find(custom => custom.key === key)) return warn('duplicate')\r\n\r\n            const index = customs.findIndex(custom => custom.key === selected)\r\n            if (index < 0) return\r\n\r\n            customs.splice(index, 1, { key, code })\r\n            await setSetting('customDailies', customs)\r\n\r\n            localize.info('saved', { daily: key })\r\n            this._selectedDaily = key\r\n            this.render()\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured while testing the custom daily ${selected}`)\r\n        }\r\n    }\r\n\r\n    async #onDeleteDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        const remove = await Dialog.confirm({\r\n            title: localize('delete.title'),\r\n            content: localize('delete.content'),\r\n        })\r\n\r\n        if (!remove) return\r\n\r\n        const key = event.currentTarget.dataset.key as string\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies').filter(custom => custom.key !== key)\r\n\r\n        await setSetting('customDailies', customs)\r\n        localize.info('deleted', { daily: key })\r\n        this.#onCreateDaily()\r\n    }\r\n\r\n    #onCreateDaily() {\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = 'default'\r\n        this.render()\r\n    }\r\n\r\n    #onSelectDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = event.currentTarget.dataset.key\r\n        this.render()\r\n    }\r\n\r\n    async #onCreateTemplate(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        const template = this._selectedTemplate\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const formData = new FormData(this.form)\r\n        const data = Object.fromEntries(formData) as DailyData\r\n        const isExample = EXAMPLES.includes(template)\r\n        let { key, uuid, label } = data\r\n\r\n        if (isExample) {\r\n            key = template\r\n        } else if (!key || !uuid) {\r\n            return localize.warn('template.noEmpty')\r\n        }\r\n\r\n        if (customs.find(custom => custom.key === key)) return warn('error.duplicate')\r\n\r\n        let code\r\n\r\n        if (template === 'trainedSkill') {\r\n            const daily = createTrainedSkillDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'trainedLore') {\r\n            const daily = createTrainedLoreDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'language') {\r\n            const daily = createLanguageDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'LanguageGenerics')\r\n        } else if (template === 'resistance') {\r\n            const resistance = simplyfiable(data.resistance)\r\n            const resistances = splitList(data.resistances)\r\n\r\n            if (resistance === '' || !resistances.length) return localize.warn('template.noEmpty')\r\n            if (typeof resistance === 'number' && resistance < 1) return localize.warn('template.badResistance')\r\n\r\n            const daily = createResistancelDaily(key, uuid, resistances, resistance, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, resistance, resistances }, 'ResistanceGenerics')\r\n        } else if (template === 'feat') {\r\n            const traits = splitList<FeatTrait>(data.traits)\r\n            const filter: DailyFeatFilter = {\r\n                feattype: splitList<FeatType>(data.feattype),\r\n                level: simplyfiable(data.level) || { min: 0, max: 20 },\r\n            }\r\n\r\n            if (traits.length) filter.traits = { values: traits, conjunction: 'and' }\r\n\r\n            const daily = createFeatDaily(key, uuid, filter, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'FeatGenerics')\r\n        } else if (template === 'spell') {\r\n            const level = Number(data.level) || undefined\r\n            const traits = splitList<SpellTrait>(data.traits)\r\n\r\n            let levels: (DailySimplifiableValue | string)[] | DailySimplifiableValue = data.levels.split(',').map(x => x.trim())\r\n            if (levels.length === 1) {\r\n                levels = simplyfiable(levels[0]!) as DailySimplifiableValue\r\n            } else {\r\n                levels = levels\r\n                    .filter(x => x)\r\n                    .map(x => Number(x))\r\n                    .filter(x => !isNaN(x)) as number[]\r\n            }\r\n\r\n            const filter: DailySpellFilter = {\r\n                category: splitList(data.category),\r\n                traditions: splitList(data.traditions),\r\n                level: (levels || []) as DailySimplifiableValue | number[],\r\n            }\r\n\r\n            if (traits.length) filter.traits = { values: traits, conjunction: 'and' }\r\n\r\n            const daily = createSpellDaily(key, uuid, filter, level, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, level }, 'SpellGenerics')\r\n        } else if (template === 'tome') {\r\n            code = tome\r\n        } else if (template === 'flexibility') {\r\n            code = flexibility\r\n        } else if (template === 'savant') {\r\n            code = savant\r\n        } else if (template === 'mind') {\r\n            code = mind\r\n        } else {\r\n            const daily = { key, label, item: { uuid }, rows: [], process: () => {} }\r\n            code = this.#stringifyDaily(daily, { key, uuid, label })\r\n        }\r\n\r\n        customs.push({ key, code })\r\n        await setSetting('customDailies', customs)\r\n\r\n        this._selectedDaily = key\r\n        this.render()\r\n    }\r\n\r\n    #stringifyDaily(daily: Record<string, any>, args: Record<string, any>, type?: string) {\r\n        const placeholder = '____PLACEHOLDER____'\r\n        const fns: Function[] = []\r\n\r\n        let str = JSON.stringify(\r\n            daily,\r\n            (_, value) => {\r\n                if (typeof value === 'function') {\r\n                    fns.push(value)\r\n                    return placeholder\r\n                }\r\n                return value\r\n            },\r\n            4\r\n        )\r\n\r\n        str = str.replace(new RegExp('\"' + placeholder + '\"', 'g'), () => {\r\n            const fn = fns.shift()?.toString()\r\n            return fn?.replace(/( {5,})/g, match => match.slice(4)) ?? ''\r\n        })\r\n\r\n        let strArgs = ''\r\n        for (const [key, value] of Object.entries(args)) {\r\n            if (typeof value === 'string') strArgs += `const ${key} = '${value}';\\n`\r\n            else if (typeof value === 'object') strArgs += `const ${key} = ${JSON.stringify(value)};\\n`\r\n            else strArgs += `const ${key} = ${value};\\n`\r\n        }\r\n\r\n        const typing = type ? `Daily<${type}>` : 'Daily'\r\n        return `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`\r\n    }\r\n\r\n    #onSelectTemplate(event: JQuery.ChangeEvent<any, any, HTMLSelectElement>) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = event.currentTarget.value as DailyTemplateType\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nfunction splitList<T extends string>(list: string) {\r\n    return list\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x) as T[]\r\n}\r\n\r\nfunction simplyfiable(value: string | number) {\r\n    if (typeof value === 'number') return value\r\n    value = value.trim()\r\n    if (value === 'level' || value === 'half') return value\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? '' : numbered\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { registerSetting, registerSettingMenu } from '@utils/foundry/settings'\r\nimport { parseCustomDailies } from './dailies'\r\nimport { restForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\nimport { DailyCustoms } from '@apps/customs'\r\n\r\nexport const MODULE_ID = 'pf2e-dailies'\r\nsetModuleID(MODULE_ID)\r\n\r\nexport const EXT_VERSION = '1.1.0'\r\n\r\nHooks.on('pf2e.restForTheNight', restForTheNight)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting({\r\n        name: 'customDailies',\r\n        type: Array,\r\n        default: [],\r\n        onChange: parseCustomDailies,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'familiar',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n    })\r\n\r\n    registerSettingMenu({\r\n        name: 'customs',\r\n        type: DailyCustoms,\r\n    })\r\n})\r\n\r\nHooks.once('ready', async () => {\r\n    await parseCustomDailies()\r\n})\r\n","import { getFlag, getSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { getDailyFromSourceId } from './dailies'\r\nimport { MODULE_ID } from './main'\r\n\r\nexport async function restForTheNight(actor: CharacterPF2e) {\r\n    const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const remove: string[] = []\r\n\r\n    for (const item of actor.items) {\r\n        if (getFlag(item, 'temporary')) {\r\n            remove.push(item.id)\r\n\r\n            // we remove the itemGrants flag from the parent feat\r\n            if (item.isOfType('feat')) {\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n            }\r\n\r\n            // we don't need to do more work because the item is being deleted\r\n            continue\r\n        }\r\n\r\n        const sourceId = getSourceId(item)\r\n\r\n        // We run the daily rest function if it exists\r\n        if (sourceId) {\r\n            const daily = getDailyFromSourceId(sourceId)\r\n            if (daily?.rest) {\r\n                await daily.rest({ item, sourceId, updateItem: data => update.push(data) })\r\n            }\r\n        }\r\n\r\n        // we clean temporary rule elements\r\n        const rules = deepClone(item._source.system.rules)\r\n        let modifiedRules = false\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) {\r\n                rules.splice(i, 1)\r\n                modifiedRules = true\r\n            }\r\n        }\r\n        if (modifiedRules) update.push({ _id: item.id, 'system.rules': rules })\r\n    }\r\n\r\n    if (update.length) await actor.updateEmbeddedDocuments('Item', update)\r\n    if (remove.length) await actor.deleteEmbeddedDocuments('Item', remove)\r\n\r\n    await setFlag(actor, 'rested', true)\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { warn } from '@utils/foundry/notification'\r\nimport { hasAnyDaily } from './dailies'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyDaily(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" data-tooltip=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => openDailiesInterface(actor))\r\n}\r\n\r\nfunction openDailiesInterface(actor: CharacterPF2e) {\r\n    if (getFlag(actor, 'rested') !== true) return warn('error.unrested')\r\n    new DailiesInterface(actor).render(true)\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getSettingLocalizationPath","path","join","templatePath","filter","x","getSetting","game","settings","setSetting","value","set","registerSetting","options","name","scope","config","hint","Array","isArray","choices","reduce","choice","register","getFlag","doc","fallback","getSourceId","localize","args","data","i18n","format","hasLocalization","has","localizePath","subLocalize","subKey","fn","defineProperties","warn","configurable","info","str","arg1","arg2","notify","error","arg3","type","undefined","permanent","ui","notifications","dcByLevel","Map","dcAdjustments","chatUUID","uuid","Set","scrolls","scrollCompendiumIds","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","RUNE_PROPERTY_KEYS","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","keys","values","LANGUAGE_LIST","capitalize","sequenceArray","start","end","levels","i","push","halfLevelString","utils","skillNames","skillLabel","skill","CONFIG","PF2E","skillList","createSkillRuleElement","mode","predicate","rule","length","createLoreSource","rank","img","system","proficient","languageNames","languageLabel","language","languages","createLanguageRuleElement","resistanceLabel","resistance","createResistanceRuleElement","createFeatSource","async","source","fromUuid","toObject","createSpellScrollSource","level","temp","spell","scrollUUID","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","sourceId","flags","core","description","createSpellScroll","createSpellSource","getChoiSetRuleSelection","item","option","_source","rules","find","rollOption","selection","proficiencyLabel","proficiencyLevels","randomOption","result","Roll","evaluate","total","halfLevelValue","actor","Math","max","floor","damageLabel","damage","weaponDamage","weaponTraitLabel","trait","weaponTraits","weaponPropertyRunesLabel","rune","weaponPropertyRunes","hasFreePropertySlot","potency","runes","property","getFreePropertyRuneSlot","potencyRune","createSpellDaily","label","daily","rows","slug","search","process","addSpell","fields","messages","add","TricksterAce","category","drop","castTime","time","includes","parseInt","createScrollChain","uuids","children","createRow","addItem","field","indexOf","row","minActorLevel","child","condition","childPredicate","createFeatDaily","addFeat","feat","combatFlexibility","flexibility","improved","feattype","createLanguageDaily","actorLanguages","sort","labelizer","addRule","selected","MIND_WEAPON_UUID","WEAPON_BASE_TYPES","die","usage","WEAPON_GROUPS","slashing","piercing","bludgeoning","WEAPON_TRAITS","WEAPON_DAMAGE_TYPES","mindSmith","message","fix","content","weapon","Dialog","wait","title","buttons","yes","icon","callback","onWeaponSelected","no","close","id","width","createEmbeddedDocuments","not","updateItem","addGroup","smith","_id","mental","deepClone","advanced","runic","freeSlot","rest","runeSlot","html","val","stats","setProperty","RATION_UUID","getRations","itemTypes","flatMap","items","getItems","findItemWithSourceId","list","includesSourceId","getItemSourceIdCondition","createResistancelDaily","resistances","random","scrollSavant","prepare","maxSlot","maxTradition","tradition","entry","spellcasting","slots","Number","min","getSpellcastingTraditionDetails","first","second","third","fourth","map","rowName","custom","createTrainedSkillDaily","actorSkills","skills","input","createTrainedLoreDaily","thaumaturgeTome","createChildCondition","actorLevel","paragon","intense","adept","masters","experts","trained","AsyncFunction","constructor","BUILTINS_UUIDS","parseDailies","conjunction","UUIDS","dailies","prefix","original","keyWithPrefix","err","parseCustomDailies","clear","CUSTOM_DAILIES","customs","code","entries","CUSTOM_UUIDS","getDailies","isOfType","isInvested","Item","getDailyFromSourceId","isObject","PredicatePF2e","isValid","statements","super","this","static","every","s","StatementValidator","isStatement","test","clone","foundry","logCompatibilityWarning","CONST","COMPATIBILITY_MODES","WARNING","since","until","all","any","or","nor","flat","convertLegacyData","domain","isTrue","statement","isBinaryOp","testBinaryOp","isCompound","testCompound","eq","operator","left","right","domainArray","from","leftValues","isNaN","d","startsWith","exec","rightValues","some","l","r","and","subProp","nand","if","then","isAtomic","operands","binaryOperators","isAnd","isOr","isNand","isNor","isNot","isIf","templateOrders","select","combo","alert","getTemplate","saved","rowsObj","childrenObj","prepareArgs","dailyArgs","groupLabel","getProcessedValue","labeled","predicates","template","save","savedRow","rowLabel","rowTemplate","order","isComboRow","isSelectRow","isRandomRow","tmp","labelize","isDropRow","isAlerRow","onDropFeat","target","featType","types","localizeAll","testFn","translatedSkills","toLocaleLowerCase","lang","getTranslatedSkills","prerequisites","prerequisite","rarity","rarities","sources","dataset","onDropItem","onDropSpell","school","categories","spellCategories","isCantrip","isFocusSpell","isRitual","schools","nextElementSibling","classList","remove","getFamiliarPack","packs","processData","getFields","addItems","addRules","updateItems","msg","addedSpells","getRules","existing","splice","feats","spells","messageObj","group","familiar","pack","abilities","ids","effect","deleteEmbeddedDocuments","isCustom","getDocument","rations","uses","quantity","delete","remaining","fakeChatUUID","nb","parent","parentId","onDelete","rowFields","forEach","prepared","showSlotlessLevels","showUnpreparedSpells","proficiency","classDC","class","getProperty","update","expandObject","rested","updateEmbeddedDocuments","messageList","a","b","parseMessages","ChatMessage","create","speaker","getSpeaker","elements","element","toArray","previousElementSibling","getSimplifiableValue","parseFeatFilter","parsed","searchText","orderBy","orderDirection","parseSpellFilter","DailiesInterface","Application","_actor","_randomInterval","_dailies","_dailyArgs","_saved","_children","_custom","_predicate","_rows","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","templates","nbAbilityies","attributes","familiarAbilities","customUUIDS","split","toString","last","groups","getData","dump","placeholder","render","force","clearInterval","setInterval","each","_","selectedIndex","activateListeners","on","bind","event","HTMLLabelElement","dataString","dataTransfer","JSON","parse","log","preventDefault","currentTarget","fixed","pf2e","compendiumBrowser","openTab","addClass","removeClass","warns","emptyInputs","alertInputs","$","prevAll","attr","getModule","modules","tome","savant","mind","TEMPLATES","EXAMPLES","DailyCustoms","FormApplication","_selectedTemplate","_selectedDaily","_monaco","closeOnSubmit","scrollY","formData","extension","newVersion","active","isNewerVersion","EXT_VERSION","version","examples","isExample","monaco","dispose","api","area","createEditor","onDidChangeModelContent","debounce","getValue","form","querySelector","stipped","findIndex","stopPropagation","confirm","FormData","fromEntries","simplyfiable","splitList","fns","stringify","shift","match","strArgs","numbered","Hooks","modifiedRules","setFlag","sheet","isOwner","hasAnyDaily","append","openDailiesInterface","once","default","onChange","restricted","registerMenu","registerSettingMenu"],"sourceRoot":""}